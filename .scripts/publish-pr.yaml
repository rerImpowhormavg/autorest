# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master 

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    # ensure latest npm is installed
    npm install -g npm 

    # make sure the versions are all synchronized 
    npx @microsoft/rush set-versions
    rc=$?; if [ $rc -ne 0 ]; then exit $rc ; fi 

    # copy the autorest folder into autorestautorest
    # and tweak the files so we can build @autorest/autorest too.
    cp -r autorest autorestautorest
    sed 's/\"name\": \"autorest\",/\"name\": \"@autorest\/autorest\",/g' -i autorestautorest/package.json
    sed 's/\"autorest\":/\"autorest-beta\":/g' -i autorestautorest/package.json
    sed 's/.*#region.*//g' -i rush.json

    # pull in dependencies
    npx @microsoft/rush update 
    rc=$?; if [ $rc -ne 0 ]; then exit $rc ; fi 

    # compile the code
    npx @microsoft/rush rebuild 
    rc=$?; if [ $rc -ne 0 ]; then exit $rc ; fi 

    # build the packages
    npx @microsoft/rush publish --publish --pack --include-all 
    rc=$?; if [ $rc -ne 0 ]; then exit $rc ; fi 

    # publish autorest cli
    cd autorest 
    v = `node -e "console.log(require('./package.json').version)"`
    echo publish-release --token $(Github-azuresdkci-personalaccesstoken) --repo autorest --owner fearthecowboy --name autorest-$v --tag autorest-$v --notes='pr build' --assets ../common/temp/artifacts/packages/autorest-$v.tgz
    cd ..

    # publish autorest core
    cd core 
    v = `node -e "console.log(require('./package.json').version)"`
    echo publish-release --token $(Github-azuresdkci-personalaccesstoken) --repo autorest --owner fearthecowboy --name autorest-core-$v --tag autorest-core-$v --notes='pr build' --assets ../common/temp/artifacts/packages/autorest-core-$v.tgz
    cd ..

    # publish the packages (tag as preview by default)
    #echo "//registry.npmjs.org/:_authToken=$(azure-sdk-npm-token)" > ./.npmrc 
    # for file in common/temp/artifacts/packages/*.tgz 
    #do
      #     common/temp/pnpm-local/node_modules/.bin/pnpm publish $file --tag latest --access public || echo no-worries 
    #done

    # publish packages to a github release.
