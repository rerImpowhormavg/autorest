@using Microsoft.Rest.Generator.Utilities
@inherits Microsoft.Rest.Generator.Template<Microsoft.Rest.Generator.CSharp.ServiceClientTemplateModel>
@Header("/// ")
namespace @Settings.Namespace
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
@foreach (var usingString in Model.Usings) {
@:    using @usingString;
}
@EmptyLine
    /// <summary>
    @WrapComment("/// ", Model.Documentation.EscapeXmlComment())
    /// </summary>
    public partial interface I@(Model.Name) : IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        Uri BaseUri { get; set; }
        @EmptyLine
    @foreach(var operation in Model.Operations)
    {
        @:I@(operation.MethodGroupType) @(operation.MethodGroupName) { get; }
        @EmptyLine
        @:
    }        
    @foreach(var method in Model.MethodTemplateModels)
    {
        <text>
        /// <summary>
        @WrapComment("/// ", method.Documentation.EscapeXmlComment())
        /// </summary>
        </text>    
        foreach (var parameter in method.Parameters)
        {
        @:/// <param name='@parameter.Name'>
        @:@WrapComment("/// ", parameter.Documentation.EscapeXmlComment())
        @:/// </param>
        }
        @:/// <param name='cancellationToken'>
        @:/// Cancellation token.
        @:/// </param>
        @:Task<@(method.OperationResponseReturnTypeString)> @(method.Name)WithOperationResponseAsync(@method.AsyncMethodParameterDeclaration);
        @EmptyLine
        @:
    }
    }
}
