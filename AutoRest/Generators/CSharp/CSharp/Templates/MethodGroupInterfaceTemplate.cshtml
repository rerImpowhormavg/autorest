@using Microsoft.Rest.Generator.Utilities
@inherits Microsoft.Rest.Generator.Template<Microsoft.Rest.Generator.CSharp.MethodGroupTemplateModel>
@Header("/// ")
namespace @Settings.Namespace
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
@foreach (var usingString in Model.Usings) {
@:    using @usingString;
}
@EmptyLine
    /// <summary>
    @WrapComment("/// ", Model.Documentation.EscapeXmlComment())
    /// </summary>
    public partial interface I@(Model.MethodGroupType)
    {
    @foreach(var method in Model.MethodTemplateModels)
    {
        @:/// <summary>
        @:@WrapComment("/// ", method.Documentation.EscapeXmlComment())
        @:/// </summary>
        foreach (var parameter in method.LocalParameters)
        {
        @:/// <param name='@parameter.Name'>
        @:@WrapComment("/// ", parameter.Documentation.EscapeXmlComment())
        @:/// </param>
        }
        @:/// <param name='customHeaders'>
        @:/// Headers that will be added to request.
        @:/// </param>
        @:/// <param name='cancellationToken'>
        @:/// Cancellation token.
        @:/// </param>
        @:Task<@method.OperationResponseReturnTypeString> @(method.Name)WithHttpMessagesAsync(@(method.GetAsyncMethodParameterDeclaration(true)));
    }
    }
}
