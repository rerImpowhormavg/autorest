// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Fixtures.Azure.AcceptanceTestsResourceFlattening.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// Additional parameters for the postFlattenedSimpleProduct operation.
    /// </summary>
    [JsonTransformation]
    public partial class FlattenParameterGroup
    {
        /// <summary>
        /// Initializes a new instance of the FlattenParameterGroup class.
        /// </summary>
        public FlattenParameterGroup() { }

        /// <summary>
        /// Initializes a new instance of the FlattenParameterGroup class.
        /// </summary>
        public FlattenParameterGroup(string baseProductId, string maxProductDisplayName, string name, string baseProductDescription = default(string), string odatavalue = default(string))
        {
            BaseProductId = baseProductId;
            BaseProductDescription = baseProductDescription;
            MaxProductDisplayName = maxProductDisplayName;
            Odatavalue = odatavalue;
            Name = name;
        }

        /// <summary>
        /// Unique identifier representing a specific product for a given
        /// latitude &amp; longitude. For example, uberX in San Francisco
        /// will have a different product_id than uberX in Los Angeles.
        /// </summary>
        [JsonProperty(PropertyName = "")]
        public string BaseProductId { get; set; }

        /// <summary>
        /// Description of product.
        /// </summary>
        [JsonProperty(PropertyName = "")]
        public string BaseProductDescription { get; set; }

        /// <summary>
        /// Display name of product.
        /// </summary>
        [JsonProperty(PropertyName = "")]
        public string MaxProductDisplayName { get; set; }

        /// <summary>
        /// URL value.
        /// </summary>
        [JsonProperty(PropertyName = "")]
        public string Odatavalue { get; set; }

        /// <summary>
        /// Product name
        /// </summary>
        [JsonProperty(PropertyName = "")]
        public string Name { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (BaseProductId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "BaseProductId");
            }
            if (MaxProductDisplayName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "MaxProductDisplayName");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
