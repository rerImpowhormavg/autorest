{
  "swagger": "2.0",
  "info": {
    "version": "2014-04-01-preview",
    "title": "AzCacheRP API"
  },
  "host": "localhost:1180",
  "schemes": [
    "http"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis": {
      "get": {
        "tags": [
          "RedisResource"
        ],
        "summary": "This is the best documentation ever",
        "operationId": "RedisResource_GetAllResources",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcegroupname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcetype",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcename",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RedisResourceListResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{resourceName}": {
      "get": {
        "tags": [
          "RedisResource"
        ],
        "operationId": "RedisResource_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcegroupname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcetype",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcename",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RedisResourceResponse"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "RedisResource"
        ],
        "operationId": "RedisResource_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRedisRequest"
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcegroupname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcetype",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcename",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "RedisResource"
        ],
        "operationId": "RedisResource_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcegroupname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcetype",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcename",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      },
      "options": {
        "tags": [
          "RedisResource"
        ],
        "operationId": "RedisResource_Options",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcegroupname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcetype",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcename",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "RedisResource"
        ],
        "operationId": "RedisResource_Patch",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRedisRequest"
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcegroupname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcetype",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcename",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RedisResourceResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{resourceName}/listKeys": {
      "post": {
        "tags": [
          "RedisResource"
        ],
        "operationId": "RedisResource_ListKeys",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcegroupname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcetype",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcename",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListKeysResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/Redis/{resourceName}/regenerateKey": {
      "post": {
        "tags": [
          "RedisResource"
        ],
        "operationId": "RedisResource_RegenerateKey",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateKeyRequest"
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcegroupname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcetype",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourcename",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListKeysResponse"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "NameAvailabilityRequest": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Object": {
      "type": "object",
      "properties": {}
    },
    "ResourceMetricDefinition": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Unit": {
          "type": "string"
        },
        "IsAlertable": {
          "type": "boolean"
        },
        "MinimumAlertableTimeWindow": {
          "$ref": "Object"
        },
        "PrimaryAggregationType": {
          "enum": [
            "Min",
            "Max",
            "Total",
            "Count",
            "Average"
          ],
          "type": "string"
        },
        "MetricAvailabilities": {
          "type": "array",
          "items": {
            "$ref": "ResourceMetricAvailability"
          }
        }
      }
    },
    "ResourceMetricAvailability": {
      "type": "object",
      "properties": {
        "TimeGrain": {
          "$ref": "Object"
        },
        "Retention": {
          "$ref": "Object"
        }
      }
    },
    "ResourceSpec": {
      "type": "object",
      "properties": {
        "subscriptionId": {
          "type": "string"
        },
        "resourceGroupName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        }
      }
    },
    "RedisResourceListResponse": {
      "description": "A set of redis resources returned from a controller action as a json object.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "All caches for given subscriptions / resource groups",
          "type": "array",
          "items": {
            "$ref": "RedisResourceResponse"
          }
        },
        "nextLink": {
          "description": "The nextLink field is expected to point to the URL the client should use to fetch the next page",
          "type": "string"
        }
      }
    },
    "RedisResourceResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "tags": {
          "$ref": "IDictionary[String,String]"
        },
        "properties": {
          "$ref": "RedisResponseProperties"
        }
      }
    },
    "IDictionary[String,String]": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "RedisResponseProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "enum": [
            "Creating",
            "Provisioning",
            "Unprovisioning",
            "Succeeded",
            "Failed",
            "Stopped",
            "Disabled",
            "Updating"
          ],
          "type": "string"
        },
        "redisVersion": {
          "type": "string"
        },
        "sku": {
          "$ref": "CacheSku"
        },
        "maxMemoryPolicy": {
          "enum": [
            "VolatileLRU",
            "AllKeysLRU",
            "VolatileRandom",
            "AllKeysRandom",
            "VolatileTTL",
            "NoEviction"
          ],
          "type": "string"
        },
        "accessKeys": {
          "$ref": "ListKeysResponse"
        },
        "hostName": {
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "sslPort": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CacheSku": {
      "type": "object",
      "properties": {
        "name": {
          "enum": [
            "Basic",
            "Standard"
          ],
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "capacity": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ListKeysResponse": {
      "description": "Response to list access keys operation containing the tenant access keys.",
      "type": "object",
      "properties": {
        "primaryKey": {
          "type": "string"
        },
        "secondaryKey": {
          "type": "string"
        }
      }
    },
    "CreateRedisRequest": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string"
        },
        "tags": {
          "$ref": "Dictionary[String,String]"
        },
        "properties": {
          "$ref": "CreateRedisProperties"
        }
      }
    },
    "Dictionary[String,String]": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "CreateRedisProperties": {
      "required": [
        "redisVersion"
      ],
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "CacheSku"
        },
        "redisVersion": {
          "type": "string"
        },
        "maxMemoryPolicy": {
          "enum": [
            "VolatileLRU",
            "AllKeysLRU",
            "VolatileRandom",
            "AllKeysRandom",
            "VolatileTTL",
            "NoEviction"
          ],
          "type": "string"
        }
      }
    },
    "RegenerateKeyRequest": {
      "type": "object",
      "properties": {
        "keyType": {
          "enum": [
            "Primary",
            "Secondary"
          ],
          "type": "string"
        }
      }
    },
    "UpdateSubscriptionRequest": {
      "type": "object",
      "properties": {
        "state": {
          "enum": [
            "Registered",
            "Unregistered",
            "Suspended",
            "Deleted"
          ],
          "type": "string"
        },
        "registrationDate": {
          "type": "string"
        },
        "properties": {
          "$ref": "Dictionary[String,Object]"
        }
      }
    },
    "Dictionary[String,Object]": {
      "type": "object",
      "additionalProperties": {
        "$ref": "Object"
      }
    }
  }
}