{
    "swagger": "2.0",
    "info": {
        "title": "Microsoft Azure Redis Cache Management API",
        "description": "Some cool documentation.",
        "version": "2014-04-01-preview"
    },
    "host": "management.azure.com",
    "schemes": [
        "https"
    ],
    "basePath": "/",
    "produces": [ "application/json" ],
    "consumes": [ "application/json" ],
    "paths": {
        "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/Microsoft.Cache/Redis/{resourceName}?api-version={apiVersion}": {
            "parameters": [
                {
                    "$ref": "#/parameters/resourceName"
                },
                {
                    "name": "resourceType",
                    "in": "path",
                    "description": "Resource Type.",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "getResource",
                "summary": "Product Types",
                "description": "The Products endpoint returns information about the Uber products offered at a given location. The response includes the display name and other details about each product, and lists the products in the proper display order.",
                "parameters": [
                    {
                        "$ref": "#/parameters/subscriptionId"
                    },
                    {
                        "name": "resourceGroupName",
                        "in": "path",
                        "description": "Resource Group Id.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/apiVersion"
                    }
                ],
                "tags": [
                    "Redis"
                ],
                "responses": {
                    "200": {
                        "description": "A list of caches",
                        "schema": {
                            "$ref": "Product"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            },
            "delete": {
                "operationId": "deleteResource",
                "summary": "Product Types",
                "description": "The Products endpoint returns information about the Uber products offered at a given location. The response includes the display name and other details about each product, and lists the products in the proper display order.",
                "parameters": [
                    {
                        "$ref": "#/parameters/subscriptionId"
                    },
                    {
                        "$ref": "#/parameters/resourceName"
                    },
                    {
                        "name": "resourceGroupName",
                        "in": "path",
                        "description": "Resource Group Id.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/apiVersion"
                    },
                    {
                        "name": "resourceType",
                        "in": "query",
                        "description": "Resource Type.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Redis"
                ],
                "responses": {
                    "200": {
                        "description": "A list of caches",
                        "schema": {
                            "$ref": "Product"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "Error"
                        }
                    }
                }
            }
        }
    },
    "parameters": {
        "subscriptionId": {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
        },
        "apiVersion": {
            "name": "apiVersion",
            "in": "path",
            "description": "API Id.",
            "required": true,
            "type": "string"
        },
        "resourceName": {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string"
        }
    },
    "definitions": {
        "Product": {
            "properties": {
                "product_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles."
                },
                "description": {
                    "type": "string",
                    "description": "Description of product."
                },
                "display_name": {
                    "type": "string",
                    "description": "Display name of product."
                },
                "capacity": {
                    "type": "string",
                    "description": "Capacity of product. For example, 4 people."
                },
                "image": {
                    "type": "string",
                    "description": "Image URL representing the product."
                }
            }
        },
        "Error": {
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}
