{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Swagger Petstore",
        "description": "A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification",
        "termsOfService": "http://helloreverb.com/terms/",
        "contact": {
            "name": "Wordnik API Team",
            "email": "foo@example.com",
            "url": "http://madskristensen.net"
        },
        "license": {
            "name": "MIT",
            "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
        }
    },
    "host": "petstore.swagger.wordnik.com",
    "basePath": "/api",
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json",
        "application/xml",
        "application/json; charset=utf-8",
        "application/xml; charset=utf-8",
        "application/atom+xml",
        "application/octet-stream",
        "application/zip",
        "application/gzip"
    ],
    "produces": [
        "application/json",
        "application/xml",
        "application/json; charset=utf-8",
        "application/xml; charset=utf-8",
        "application/atom+xml",
        "application/atom+xml; charset=utf-8",
        "application/octet-stream",
        "application/zip",
        "application/gzip"
    ],
    "paths": {
        "/pet/{id}/{foo}": {
          "get": {
            "description": "Returns a user based on a single Id, if the user does not have access to the pet",
            "operationId": "findPetById",
            "produces": [
              "application/json",
              "application/xml",
              "text/xml",
              "text/html"
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "description": "Id of pet to fetch",
                "required": true,
                "type": "integer",
                "format": "int64"
              }
            ],
            "responses": {
              "200": {
                "description": "pet response",
                "schema": {
                  "$ref": "#/definitions/pet"
                }
              },
              "default": {
                "description": "unexpected error",
                "schema": {
                  "$ref": "#/definitions/errorModel"
                }
              }
            }
          },
          "put": {
                "description": "Sets a user based on a single Id, if the user does not have access to the pet",
                "operationId": "updatePet",
                "produces": [
                    "application/json",
                    "application/xml",
                    "text/xml",
                    "text/html"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of pet to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pet response",
                        "schema": {
                            "$ref": "#/definitions/pet"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }            
        }
    },
    "definitions": {
        "pet": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "errorModel": {
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "responses": {
        "petResponse": {
            "description": " A created or updated pet",
            "schema": {
                "$ref": "#/definitions/pet"
            },
            "headers": {
                "x-ms-request-id": {
                    "description": " The request Id",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": { },
    "security": [ ],
    "tags": [ ],
    "externalDocs": { }
}
