# encoding: utf-8
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
# 
# Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module HttpInfrastructureModule
  #
  # A service client - single point of access to the REST API.
  #
  class AutoRestHttpInfrastructureTestService < MsRest::ServiceClient
    include HttpInfrastructureModule::Models

    # @return [String] the base URI of the service.
    attr_accessor :base_url

    # @return http_failure
    attr_reader :http_failure

    # @return http_success
    attr_reader :http_success

    # @return http_redirects
    attr_reader :http_redirects

    # @return http_client_failure
    attr_reader :http_client_failure

    # @return http_server_failure
    attr_reader :http_server_failure

    # @return http_retry
    attr_reader :http_retry

    # @return multiple_responses
    attr_reader :multiple_responses

    #
    # Creates initializes a new instance of the AutoRestHttpInfrastructureTestService class.
    # @param credentials [MsRest::ServiceClientCredentials] credentials to authorize HTTP requests made by the service client.
    # @param base_url [String] the base URI of the service.
    # @param options [Array] filters to be applied to the HTTP requests.
    #
    def initialize(credentials, base_url = nil, options = nil)
      super(credentials, options)
      @base_url = base_url || 'http://localhost'

      fail ArgumentError, 'credentials is nil' if credentials.nil?
      fail ArgumentError, 'invalid type of credentials input parameter' unless credentials.is_a?(MsRest::ServiceClientCredentials)
      @credentials = credentials

      @http_failure = HttpFailure.new(self)
      @http_success = HttpSuccess.new(self)
      @http_redirects = HttpRedirects.new(self)
      @http_client_failure = HttpClientFailure.new(self)
      @http_server_failure = HttpServerFailure.new(self)
      @http_retry = HttpRetry.new(self)
      @multiple_responses = MultipleResponses.new(self)
    end

  end
end
