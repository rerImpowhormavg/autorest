/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the ByteWrapper class.
 * @constructor
 * @member {buffer} [field]
 * 
 */
function ByteWrapper() {
}

/**
 * Defines the metadata of ByteWrapper
 *
 * @returns {object} metadata of ByteWrapper
 *
 */
ByteWrapper.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'byte-wrapper',
    type: {
      name: 'Composite',
      className: 'ByteWrapper',
      modelProperties: {
        field: {
          required: false,
          serializedName: 'field',
          type: {
            name: 'ByteArray'
          }
        }
      }
    }
  };
};

/**
 * Validate the payload against the ByteWrapper schema
 *
 * @param {JSON} payload
 *
 */
ByteWrapper.prototype.serialize = function () {
  var payload = {};
  if (this['field']) {
    if (!Buffer.isBuffer(this['field'])) {
      throw new Error('this[\'field\'] must be of type buffer.');
    }
    payload['field'] = this['field'].toString('base64');
  }

  return payload;
};

/**
 * Deserialize the instance to ByteWrapper schema
 *
 * @param {JSON} instance
 *
 */
ByteWrapper.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['field']) {
      this['field'] = new Buffer(instance['field'], 'base64');
    }
    else if (instance['field'] !== undefined) {
      this['field'] = instance['field'];
    }
  }

  return this;
};

module.exports = ByteWrapper;
