/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the CatalogArray class.
 * @constructor
 * @member {array} [productArray] Array of products
 * 
 */
function CatalogArray(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.productArray) {
      var tempParametersproductArray = [];
      parameters.productArray.forEach(function(element) {
        if (element) {
          element = new models['Product'](element);
        }
        tempParametersproductArray.push(element);
      });
      this.productArray = tempParametersproductArray;
    }
  }    
}


/**
 * Validate the payload against the CatalogArray schema
 *
 * @param {JSON} payload
 *
 */
CatalogArray.prototype.serialize = function () {
  var payload = {};
  if (util.isArray(this['productArray'])) {
    payload['productArray'] = [];
    for (var i = 0; i < this['productArray'].length; i++) {
      if (this['productArray'][i]) {
        if (payload['productArray'] === null || payload['productArray'] === undefined) {
          payload['productArray'] = {};
        }
        payload['productArray'][i] = this['productArray'][i].serialize();
      }
    }
  }

  return payload;
};

/**
 * Deserialize the instance to CatalogArray schema
 *
 * @param {JSON} instance
 *
 */
CatalogArray.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['productArray']) {
      var tempInstanceproductArray = [];
      instance['productArray'].forEach(function(element1) {
        if (element1) {
          element1 = new models['Product']().deserialize(element1);
        }
        tempInstanceproductArray.push(element1);
      });
      this['productArray'] = tempInstanceproductArray;
    }
  }

  return this;
};

module.exports = CatalogArray;
