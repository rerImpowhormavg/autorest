/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the CatalogDictionary class.
 * @constructor
 * @member {object} [productDictionary] Dictionary of products
 * 
 */
function CatalogDictionary() {
}

/**
 * Defines the metadata of CatalogDictionary
 *
 * @returns {object} metadata of CatalogDictionary
 *
 */
CatalogDictionary.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'CatalogDictionary',
    type: {
      name: 'Composite',
      className: 'CatalogDictionary',
      modelProperties: {
        productDictionary: {
          required: false,
          serializedName: 'productDictionary',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'ProductElementType',
                type: {
                  name: 'Composite',
                  className: 'Product'
                }
            }
          }
        }
      }
    }
  };
};

/**
 * Validate the payload against the CatalogDictionary schema
 *
 * @param {JSON} payload
 *
 */
CatalogDictionary.prototype.serialize = function () {
  var payload = {};
  if (this['productDictionary'] && typeof this['productDictionary'] === 'object') {
    payload['productDictionary'] = {};
    for(var valueElement in this['productDictionary']) {
      if (this['productDictionary'][valueElement]) {
        payload['productDictionary'][valueElement] = this['productDictionary'][valueElement].serialize();
      }
      else {
        payload['productDictionary'][valueElement] = this['productDictionary'][valueElement];
      }
    }
  }

  return payload;
};

/**
 * Deserialize the instance to CatalogDictionary schema
 *
 * @param {JSON} instance
 *
 */
CatalogDictionary.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['productDictionary']) {
      this['productDictionary'] = {};
      for(var valueElement1 in instance['productDictionary']) {
        if (instance['productDictionary'] !== null && instance['productDictionary'] !== undefined) {
          if (instance['productDictionary'][valueElement1]) {
            this['productDictionary'][valueElement1] = new models['Product']().deserialize(instance['productDictionary'][valueElement1]);
          }
        }
      }
    }
  }

  return this;
};

module.exports = CatalogDictionary;
