/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions, RequestOptions, ServiceCallback, ServiceClientCredentials } from 'ms-rest';
import * as models from "./models";

declare class AutoRestResourceFlatteningTestService {
    /**
     * @class
     * Initializes a new instance of the AutoRestResourceFlatteningTestService class.
     * @constructor
     *
     * @param {Credentials} credentials The management credentials for Azure.
     *
     * @param {string} [baseUri] - The base URI of the service.
     *
     * @param {object} [options] - The parameter options
     *
     * @param {Array} [options.filters] - Filters to be added to the request pipeline
     *
     * @param {object} [options.requestOptions] - Options for the underlying request object
     * {@link https://github.com/request/request#requestoptions-callback Options doc}
     *
     * @param {bool} [options.noRetryPolicy] - If set to true, turn off default retry policy
     */
    constructor(credentials: ServiceClientCredentials, baseUri: string, options: ServiceClientOptions);

    credentials: ServiceClientCredentials;

    acceptLanguage: string;

    longRunningOperationRetryTimeout: number;

            /**
         * Put External Resource as an Array
         *
         * @param {array} [resourceArray] External Resource as an Array to put
         * 
         * @param {object} [options]
         *
         * @param {object} [options.customHeaders] headers that will be added to
         * request
         *
         * @param {ServiceCallback} [callback] callback function; see ServiceCallback
         * doc in ms-rest index.d.ts for details
         */
        putArray(resourceArray: models.Resource[], options: RequestOptions, callback: ServiceCallback<void>): void;
        putArray(resourceArray: models.Resource[], callback: ServiceCallback<void>): void;

        /**
         * Get External Resource as an Array
         *
         * @param {object} [options]
         *
         * @param {object} [options.customHeaders] headers that will be added to
         * request
         *
         * @param {ServiceCallback} [callback] callback function; see ServiceCallback
         * doc in ms-rest index.d.ts for details
         */
        getArray(options: RequestOptions, callback: ServiceCallback<models.FlattenedProduct[]>): void;
        getArray(callback: ServiceCallback<models.FlattenedProduct[]>): void;

        /**
         * Put External Resource as a Dictionary
         *
         * @param {object} [resourceDictionary] External Resource as a Dictionary to
         * put
         * 
         * @param {object} [options]
         *
         * @param {object} [options.customHeaders] headers that will be added to
         * request
         *
         * @param {ServiceCallback} [callback] callback function; see ServiceCallback
         * doc in ms-rest index.d.ts for details
         */
        putDictionary(resourceDictionary: { [propertyName: string]: models.FlattenedProduct }, options: RequestOptions, callback: ServiceCallback<void>): void;
        putDictionary(resourceDictionary: { [propertyName: string]: models.FlattenedProduct }, callback: ServiceCallback<void>): void;

        /**
         * Get External Resource as a Dictionary
         *
         * @param {object} [options]
         *
         * @param {object} [options.customHeaders] headers that will be added to
         * request
         *
         * @param {ServiceCallback} [callback] callback function; see ServiceCallback
         * doc in ms-rest index.d.ts for details
         */
        getDictionary(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: models.FlattenedProduct }>): void;
        getDictionary(callback: ServiceCallback<{ [propertyName: string]: models.FlattenedProduct }>): void;

        /**
         * Put External Resource as a ResourceCollection
         *
         * @param {object} [resourceComplexObject] External Resource as a
         * ResourceCollection to put
         * 
         * @param {object} [resourceComplexObject.productresource]
         * 
         * @param {string} [resourceComplexObject.productresource.pname]
         * 
         * @param {string}
         * [resourceComplexObject.productresource.flattenedProductType]
         * 
         * @param {string} [resourceComplexObject.productresource.provisioningState]
         * 
         * @param {object} [resourceComplexObject.productresource.tags]
         * 
         * @param {string} [resourceComplexObject.productresource.location] Resource
         * Location
         * 
         * @param {array} [resourceComplexObject.arrayofresources]
         * 
         * @param {object} [resourceComplexObject.dictionaryofresources]
         * 
         * @param {object} [options]
         *
         * @param {object} [options.customHeaders] headers that will be added to
         * request
         *
         * @param {ServiceCallback} [callback] callback function; see ServiceCallback
         * doc in ms-rest index.d.ts for details
         */
        putResourceCollection(resourceComplexObject: models.ResourceCollection, options: RequestOptions, callback: ServiceCallback<void>): void;
        putResourceCollection(resourceComplexObject: models.ResourceCollection, callback: ServiceCallback<void>): void;

        /**
         * Get External Resource as a ResourceCollection
         *
         * @param {object} [options]
         *
         * @param {object} [options.customHeaders] headers that will be added to
         * request
         *
         * @param {ServiceCallback} [callback] callback function; see ServiceCallback
         * doc in ms-rest index.d.ts for details
         */
        getResourceCollection(options: RequestOptions, callback: ServiceCallback<models.ResourceCollection>): void;
        getResourceCollection(callback: ServiceCallback<models.ResourceCollection>): void;
}

export = AutoRestResourceFlatteningTestService;
