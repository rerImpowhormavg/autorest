/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the ResourceCollection class.
 * @constructor
 * @member {object} [productresource]
 * 
 * @member {string} [productresource.pname]
 * 
 * @member {string} [productresource.flattenedProductType]
 * 
 * @member {string} [productresource.provisioningStateValues] Possible values
 * for this property include: 'Succeeded', 'Failed', 'canceled', 'Accepted',
 * 'Creating', 'Created', 'Updating', 'Updated', 'Deleting', 'Deleted', 'OK'.
 * 
 * @member {string} [productresource.provisioningState]
 * 
 * @member {array} [arrayofresources]
 * 
 * @member {object} [dictionaryofresources]
 * 
 */
function ResourceCollection() {
}

/**
 * Defines the metadata of ResourceCollection
 *
 * @returns {object} metadata of ResourceCollection
 *
 */
ResourceCollection.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'ResourceCollection',
    type: {
      name: 'Composite',
      className: 'ResourceCollection',
      modelProperties: {
        productresource: {
          required: false,
          serializedName: 'productresource',
          type: {
            name: 'Composite',
            className: 'FlattenedProduct'
          }
        },
        arrayofresources: {
          required: false,
          serializedName: 'arrayofresources',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'FlattenedProductElementType',
                type: {
                  name: 'Composite',
                  className: 'FlattenedProduct'
                }
            }
          }
        },
        dictionaryofresources: {
          required: false,
          serializedName: 'dictionaryofresources',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'FlattenedProductElementType',
                type: {
                  name: 'Composite',
                  className: 'FlattenedProduct'
                }
            }
          }
        }
      }
    }
  };
};

/**
 * Validate the payload against the ResourceCollection schema
 *
 * @param {JSON} payload
 *
 */
ResourceCollection.prototype.serialize = function () {
  var payload = {};
  if (this['productresource']) {
    payload['productresource'] = this['productresource'].serialize();
  }

  if (util.isArray(this['arrayofresources'])) {
    payload['arrayofresources'] = [];
    for (var i = 0; i < this['arrayofresources'].length; i++) {
      if (this['arrayofresources'][i]) {
        payload['arrayofresources'][i] = this['arrayofresources'][i].serialize();
      }
    }
  }

  if (this['dictionaryofresources'] && typeof this['dictionaryofresources'] === 'object') {
    payload['dictionaryofresources'] = {};
    for(var valueElement in this['dictionaryofresources']) {
      if (this['dictionaryofresources'][valueElement]) {
        payload['dictionaryofresources'][valueElement] = this['dictionaryofresources'][valueElement].serialize();
      }
      else {
        payload['dictionaryofresources'][valueElement] = this['dictionaryofresources'][valueElement];
      }
    }
  }

  return payload;
};

/**
 * Deserialize the instance to ResourceCollection schema
 *
 * @param {JSON} instance
 *
 */
ResourceCollection.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['productresource']) {
      this['productresource'] = new models['FlattenedProduct']().deserialize(instance['productresource']);
    }

    if (instance['arrayofresources']) {
      var tempInstancearrayofresources = [];
      instance['arrayofresources'].forEach(function(element) {
        if (element) {
          element = new models['FlattenedProduct']().deserialize(element);
        }
        tempInstancearrayofresources.push(element);
      });
      this['arrayofresources'] = tempInstancearrayofresources;
    }

    if (instance['dictionaryofresources']) {
      this['dictionaryofresources'] = {};
      for(var valueElement1 in instance['dictionaryofresources']) {
        if (instance['dictionaryofresources'] !== null && instance['dictionaryofresources'] !== undefined) {
          if (instance['dictionaryofresources'][valueElement1]) {
            this['dictionaryofresources'][valueElement1] = new models['FlattenedProduct']().deserialize(instance['dictionaryofresources'][valueElement1]);
          }
        }
      }
    }
  }

  return this;
};

module.exports = ResourceCollection;
