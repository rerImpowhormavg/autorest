/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Paging
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutoRestPagingTestService.
 */
export interface Paging {

    /**
     * A paging operation that finishes on the first call without a nextlink
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getSinglePages(options: RequestOptions, callback: ServiceCallback<models.ProductResult>): void;
    getSinglePages(callback: ServiceCallback<models.ProductResult>): void;

    /**
     * A paging operation that includes a nextLink that has 10 pages
     *
     * @param {string} [clientRequestId]
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getMultiplePages(clientRequestId: string, options: RequestOptions, callback: ServiceCallback<models.ProductResult>): void;
    getMultiplePages(clientRequestId: string, callback: ServiceCallback<models.ProductResult>): void;

    /**
     * A paging operation that fails on the first call with 500 and then retries
     * and then get a response including a nextLink that has 10 pages
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getMultiplePagesRetryFirst(options: RequestOptions, callback: ServiceCallback<models.ProductResult>): void;
    getMultiplePagesRetryFirst(callback: ServiceCallback<models.ProductResult>): void;

    /**
     * A paging operation that includes a nextLink that has 10 pages, of which the
     * 2nd call fails first with 500. The client should retry and finish all 10
     * pages eventually.
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getMultiplePagesRetrySecond(options: RequestOptions, callback: ServiceCallback<models.ProductResult>): void;
    getMultiplePagesRetrySecond(callback: ServiceCallback<models.ProductResult>): void;

    /**
     * A paging operation that receives a 400 on the first call
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getSinglePagesFailure(options: RequestOptions, callback: ServiceCallback<models.ProductResult>): void;
    getSinglePagesFailure(callback: ServiceCallback<models.ProductResult>): void;

    /**
     * A paging operation that receives a 400 on the second call
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getMultiplePagesFailure(options: RequestOptions, callback: ServiceCallback<models.ProductResult>): void;
    getMultiplePagesFailure(callback: ServiceCallback<models.ProductResult>): void;

    /**
     * A paging operation that receives an invalid nextLink
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getMultiplePagesFailureUri(options: RequestOptions, callback: ServiceCallback<models.ProductResult>): void;
    getMultiplePagesFailureUri(callback: ServiceCallback<models.ProductResult>): void;

    /**
     * A paging operation that finishes on the first call without a nextlink
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getSinglePagesNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.ProductResult>): void;
    getSinglePagesNext(nextPageLink: string, callback: ServiceCallback<models.ProductResult>): void;

    /**
     * A paging operation that includes a nextLink that has 10 pages
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {string} [clientRequestId]
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getMultiplePagesNext(nextPageLink: string, clientRequestId: string, options: RequestOptions, callback: ServiceCallback<models.ProductResult>): void;
    getMultiplePagesNext(nextPageLink: string, clientRequestId: string, callback: ServiceCallback<models.ProductResult>): void;

    /**
     * A paging operation that fails on the first call with 500 and then retries
     * and then get a response including a nextLink that has 10 pages
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getMultiplePagesRetryFirstNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.ProductResult>): void;
    getMultiplePagesRetryFirstNext(nextPageLink: string, callback: ServiceCallback<models.ProductResult>): void;

    /**
     * A paging operation that includes a nextLink that has 10 pages, of which the
     * 2nd call fails first with 500. The client should retry and finish all 10
     * pages eventually.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getMultiplePagesRetrySecondNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.ProductResult>): void;
    getMultiplePagesRetrySecondNext(nextPageLink: string, callback: ServiceCallback<models.ProductResult>): void;

    /**
     * A paging operation that receives a 400 on the first call
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getSinglePagesFailureNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.ProductResult>): void;
    getSinglePagesFailureNext(nextPageLink: string, callback: ServiceCallback<models.ProductResult>): void;

    /**
     * A paging operation that receives a 400 on the second call
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getMultiplePagesFailureNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.ProductResult>): void;
    getMultiplePagesFailureNext(nextPageLink: string, callback: ServiceCallback<models.ProductResult>): void;

    /**
     * A paging operation that receives an invalid nextLink
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getMultiplePagesFailureUriNext(nextPageLink: string, options: RequestOptions, callback: ServiceCallback<models.ProductResult>): void;
    getMultiplePagesFailureUriNext(nextPageLink: string, callback: ServiceCallback<models.ProductResult>): void;
}
