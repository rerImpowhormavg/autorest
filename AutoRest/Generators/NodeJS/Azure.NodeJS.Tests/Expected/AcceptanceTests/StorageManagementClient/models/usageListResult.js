/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the UsageListResult class.
 * @constructor
 * The List Usages operation response.
 * @member {array} [value] Gets or sets the list Storage Resource Usages.
 *
 */
function UsageListResult(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters['value'] !== null && parameters['value'] !== undefined) {
      this['value'] = parameters['value'];
    }
  }    
}


/**
 * Validate the payload against the UsageListResult schema
 *
 * @param {JSON} payload
 *
 */
UsageListResult.prototype.serialize = function () {
  var payload = {};
  if (util.isArray(this['value'])) {
    for (var i = 0; i < this['value'].length; i++) {
      if (this['value'][i]) {
        payload['value'][i] = this['value'][i].serialize();
      }
    }
  }
};

/**
 * Deserialize the instance to UsageListResult schema
 *
 * @param {JSON} instance
 *
 */
UsageListResult.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance.value !== null && instance.value !== undefined) {
      var deserializedArray = [];
      instance.value.forEach(function(element) {
        if (element !== null && element !== undefined) {
          element = new models['Usage']().deserialize(element);
        }
        deserializedArray.push(element);
      });
      this.value = deserializedArray;
    }
  }
  return instance;
};

module.exports = UsageListResult;
