/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the CheckNameAvailabilityResult class.
 * @constructor
 */
function CheckNameAvailabilityResult(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters['nameAvailable'] !== null && parameters['nameAvailable'] !== undefined) {
      this['nameAvailable'] = parameters['nameAvailable'];
    }
    if (parameters['reason'] !== null && parameters['reason'] !== undefined) {
      this['reason'] = parameters['reason'];
    }
    if (parameters['message'] !== null && parameters['message'] !== undefined) {
      this['message'] = parameters['message'];
    }
  }    
}


/**
 * Validate the payload against the CheckNameAvailabilityResult schema
 *
 * @param {JSON} payload
 *
 */
CheckNameAvailabilityResult.prototype.serialize = function () {
  var payload = {};
  if (payload['nameAvailable'] !== null && payload['nameAvailable'] !== undefined && typeof payload['nameAvailable'] !== 'boolean') {
    throw new Error('payload[\'nameAvailable\'] must be of type boolean.');
  }

  if (payload['reason']) {
    var allowedValues = [ 'AccountNameInvalid', 'AlreadyExists' ];
    if (!allowedValues.some( function(item) { return item === payload['reason']; })) {
      throw new Error(payload['reason'] + ' is not a valid value. The valid values are: ' + allowedValues);
    }
  }

  if (payload['message'] !== null && payload['message'] !== undefined && typeof payload['message'].valueOf() !== 'string') {
    throw new Error('payload[\'message\'] must be of type string.');
  }
};

/**
 * Deserialize the instance to CheckNameAvailabilityResult schema
 *
 * @param {JSON} instance
 *
 */
CheckNameAvailabilityResult.prototype.deserialize = function (instance) {
  return instance;
};

module.exports = CheckNameAvailabilityResult;
