// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.


package fixtures.bodyinteger;

import com.microsoft.rest.ServiceException;
import retrofit.Callback;
import retrofit.client.Response;
import retrofit.http.GET;
import retrofit.http.PUT;
import retrofit.http.Body;

public interface IntOperations {
    @GET("/int/null")
    int getNull() throws ServiceException;

    @GET("/int/null")
    void getNullAsync(Callback<Integer> cb);

    @GET("/int/invalid")
    Integer getInvalid() throws ServiceException;

    @GET("/int/invalid")
    void getInvalidAsync(Callback<Integer> cb);

    @GET("/int/overflowint32")
    Integer getOverflowInt32() throws ServiceException;

    @GET("/int/overflowint32")
    void getOverflowInt32Async(Callback<Integer> cb);

    @GET("/int/underflowint32")
    Integer getUnderflowInt32() throws ServiceException;

    @GET("/int/underflowint32")
    void getUnderflowInt32Async(Callback<Integer> cb);

    @GET("/int/overflowint64")
    long getOverflowInt64() throws ServiceException;

    @GET("/int/overflowint64")
    void getOverflowInt64Async(Callback<Long> cb);

    @GET("/int/underflowint64")
    Long getUnderflowInt64() throws ServiceException;

    @GET("/int/underflowint64")
    void getUnderflowInt64Async(Callback<Long> cb);

    @PUT("/int/max/32")
    Response putMax32(@Body Integer intBody) throws ServiceException;

    @PUT("/int/max/32")
    void putMax32Async(@Body Integer intBody, Callback<Response> cb);

    @PUT("/int/max/64")
    Response putMax64(@Body Long intBody) throws ServiceException;

    @PUT("/int/max/64")
    void putMax64Async(@Body Long intBody, Callback<Response> cb);

    @PUT("/int/min/32")
    Response putMin32(@Body Integer intBody) throws ServiceException;

    @PUT("/int/min/32")
    void putMin32Async(@Body Integer intBody, Callback<Response> cb);

    @PUT("/int/min/64")
    Response putMin64(@Body Long intBody) throws ServiceException;

    @PUT("/int/min/64")
    void putMin64Async(@Body Long intBody, Callback<Response> cb);

}
