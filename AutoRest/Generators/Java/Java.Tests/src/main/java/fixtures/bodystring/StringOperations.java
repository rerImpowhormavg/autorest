// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.


package fixtures.bodystring;

import com.microsoft.rest.ServiceCallback;
import com.microsoft.rest.ServiceException;
import com.microsoft.rest.ServiceResponseCallback;
import retrofit.client.Response;
import retrofit.http.GET;
import retrofit.http.PUT;
import retrofit.http.Body;

public interface StringOperations {
    interface StringService {
        @GET("/string/null")
        Response getNull() throws ServiceException;

        @GET("/string/null")
        void getNullAsync(ServiceResponseCallback cb);

        @PUT("/string/null")
        Response putNull(@Body String stringBody) throws ServiceException;

        @PUT("/string/null")
        void putNullAsync(@Body String stringBody, ServiceResponseCallback cb);

        @GET("/string/empty")
        Response getEmpty() throws ServiceException;

        @GET("/string/empty")
        void getEmptyAsync(ServiceResponseCallback cb);

        @PUT("/string/empty")
        Response putEmpty(@Body String stringBody) throws ServiceException;

        @PUT("/string/empty")
        void putEmptyAsync(@Body String stringBody, ServiceResponseCallback cb);

        @GET("/string/mbcs")
        Response getMbcs() throws ServiceException;

        @GET("/string/mbcs")
        void getMbcsAsync(ServiceResponseCallback cb);

        @PUT("/string/mbcs")
        Response putMbcs(@Body String stringBody) throws ServiceException;

        @PUT("/string/mbcs")
        void putMbcsAsync(@Body String stringBody, ServiceResponseCallback cb);

        @GET("/string/whitespace")
        Response getWhitespace() throws ServiceException;

        @GET("/string/whitespace")
        void getWhitespaceAsync(ServiceResponseCallback cb);

        @PUT("/string/whitespace")
        Response putWhitespace(@Body String stringBody) throws ServiceException;

        @PUT("/string/whitespace")
        void putWhitespaceAsync(@Body String stringBody, ServiceResponseCallback cb);

        @GET("/string/notProvided")
        Response getNotProvided() throws ServiceException;

        @GET("/string/notProvided")
        void getNotProvidedAsync(ServiceResponseCallback cb);

    }
    String getNull() throws ServiceException;

    void getNullAsync(final ServiceCallback<String> serviceCallback);

    void putNull(String stringBody) throws ServiceException;

    void putNullAsync(String stringBody, final ServiceCallback<Void> serviceCallback);

    String getEmpty() throws ServiceException;

    void getEmptyAsync(final ServiceCallback<String> serviceCallback);

    void putEmpty(String stringBody) throws ServiceException;

    void putEmptyAsync(String stringBody, final ServiceCallback<Void> serviceCallback);

    String getMbcs() throws ServiceException;

    void getMbcsAsync(final ServiceCallback<String> serviceCallback);

    void putMbcs(String stringBody) throws ServiceException;

    void putMbcsAsync(String stringBody, final ServiceCallback<Void> serviceCallback);

    String getWhitespace() throws ServiceException;

    void getWhitespaceAsync(final ServiceCallback<String> serviceCallback);

    void putWhitespace(String stringBody) throws ServiceException;

    void putWhitespaceAsync(String stringBody, final ServiceCallback<Void> serviceCallback);

    String getNotProvided() throws ServiceException;

    void getNotProvidedAsync(final ServiceCallback<String> serviceCallback);

}
