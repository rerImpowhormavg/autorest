// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.


package fixtures.requiredoptional;

import com.microsoft.rest.ServiceException;
import retrofit.Callback;
import retrofit.client.Response;
import fixtures.requiredoptional.models.IntWrapper;
import fixtures.requiredoptional.models.IntOptionalWrapper;
import fixtures.requiredoptional.models.StringWrapper;
import fixtures.requiredoptional.models.StringOptionalWrapper;
import fixtures.requiredoptional.models.Product;
import fixtures.requiredoptional.models.ClassWrapper;
import fixtures.requiredoptional.models.ClassOptionalWrapper;
import java.util.List;
import fixtures.requiredoptional.models.ArrayWrapper;
import fixtures.requiredoptional.models.ArrayOptionalWrapper;
import fixtures.requiredoptional.models.Error;
import retrofit.http.POST;

public interface Explicit {
    @POST("/reqopt/requied/integer/parameter")
    Error postRequiredIntegerParameter(int bodyParameter) throws ServiceException;

    @POST("/reqopt/requied/integer/parameter")
    void postRequiredIntegerParameterAsync(int bodyParameter, Callback<Error> cb);

    @POST("/reqopt/optional/integer/parameter")
    void postOptionalIntegerParameter(int bodyParameter) throws ServiceException;

    @POST("/reqopt/optional/integer/parameter")
    void postOptionalIntegerParameterAsync(int bodyParameter, Callback<Response> cb);

    @POST("/reqopt/requied/integer/property")
    Error postRequiredIntegerProperty(IntWrapper bodyParameter) throws ServiceException;

    @POST("/reqopt/requied/integer/property")
    void postRequiredIntegerPropertyAsync(IntWrapper bodyParameter, Callback<Error> cb);

    @POST("/reqopt/optional/integer/property")
    void postOptionalIntegerProperty(IntOptionalWrapper bodyParameter) throws ServiceException;

    @POST("/reqopt/optional/integer/property")
    void postOptionalIntegerPropertyAsync(IntOptionalWrapper bodyParameter, Callback<Response> cb);

    @POST("/reqopt/requied/integer/header")
    Error postRequiredIntegerHeader(int headerParameter) throws ServiceException;

    @POST("/reqopt/requied/integer/header")
    void postRequiredIntegerHeaderAsync(int headerParameter, Callback<Error> cb);

    @POST("/reqopt/optional/integer/header")
    void postOptionalIntegerHeader(int headerParameter) throws ServiceException;

    @POST("/reqopt/optional/integer/header")
    void postOptionalIntegerHeaderAsync(int headerParameter, Callback<Response> cb);

    @POST("/reqopt/requied/string/parameter")
    Error postRequiredStringParameter(String bodyParameter) throws ServiceException;

    @POST("/reqopt/requied/string/parameter")
    void postRequiredStringParameterAsync(String bodyParameter, Callback<Error> cb);

    @POST("/reqopt/optional/string/parameter")
    void postOptionalStringParameter(String bodyParameter) throws ServiceException;

    @POST("/reqopt/optional/string/parameter")
    void postOptionalStringParameterAsync(String bodyParameter, Callback<Response> cb);

    @POST("/reqopt/requied/string/property")
    Error postRequiredStringProperty(StringWrapper bodyParameter) throws ServiceException;

    @POST("/reqopt/requied/string/property")
    void postRequiredStringPropertyAsync(StringWrapper bodyParameter, Callback<Error> cb);

    @POST("/reqopt/optional/string/property")
    void postOptionalStringProperty(StringOptionalWrapper bodyParameter) throws ServiceException;

    @POST("/reqopt/optional/string/property")
    void postOptionalStringPropertyAsync(StringOptionalWrapper bodyParameter, Callback<Response> cb);

    @POST("/reqopt/requied/string/header")
    Error postRequiredStringHeader(String headerParameter) throws ServiceException;

    @POST("/reqopt/requied/string/header")
    void postRequiredStringHeaderAsync(String headerParameter, Callback<Error> cb);

    @POST("/reqopt/optional/string/header")
    void postOptionalStringHeader(String bodyParameter) throws ServiceException;

    @POST("/reqopt/optional/string/header")
    void postOptionalStringHeaderAsync(String bodyParameter, Callback<Response> cb);

    @POST("/reqopt/requied/class/parameter")
    Error postRequiredClassParameter(Product bodyParameter) throws ServiceException;

    @POST("/reqopt/requied/class/parameter")
    void postRequiredClassParameterAsync(Product bodyParameter, Callback<Error> cb);

    @POST("/reqopt/optional/class/parameter")
    void postOptionalClassParameter(Product bodyParameter) throws ServiceException;

    @POST("/reqopt/optional/class/parameter")
    void postOptionalClassParameterAsync(Product bodyParameter, Callback<Response> cb);

    @POST("/reqopt/requied/class/property")
    Error postRequiredClassProperty(ClassWrapper bodyParameter) throws ServiceException;

    @POST("/reqopt/requied/class/property")
    void postRequiredClassPropertyAsync(ClassWrapper bodyParameter, Callback<Error> cb);

    @POST("/reqopt/optional/class/property")
    void postOptionalClassProperty(ClassOptionalWrapper bodyParameter) throws ServiceException;

    @POST("/reqopt/optional/class/property")
    void postOptionalClassPropertyAsync(ClassOptionalWrapper bodyParameter, Callback<Response> cb);

    @POST("/reqopt/requied/array/parameter")
    Error postRequiredArrayParameter(List<String> bodyParameter) throws ServiceException;

    @POST("/reqopt/requied/array/parameter")
    void postRequiredArrayParameterAsync(List<String> bodyParameter, Callback<Error> cb);

    @POST("/reqopt/optional/array/parameter")
    void postOptionalArrayParameter(List<String> bodyParameter) throws ServiceException;

    @POST("/reqopt/optional/array/parameter")
    void postOptionalArrayParameterAsync(List<String> bodyParameter, Callback<Response> cb);

    @POST("/reqopt/requied/array/property")
    Error postRequiredArrayProperty(ArrayWrapper bodyParameter) throws ServiceException;

    @POST("/reqopt/requied/array/property")
    void postRequiredArrayPropertyAsync(ArrayWrapper bodyParameter, Callback<Error> cb);

    @POST("/reqopt/optional/array/property")
    void postOptionalArrayProperty(ArrayOptionalWrapper bodyParameter) throws ServiceException;

    @POST("/reqopt/optional/array/property")
    void postOptionalArrayPropertyAsync(ArrayOptionalWrapper bodyParameter, Callback<Response> cb);

    @POST("/reqopt/requied/array/header")
    Error postRequiredArrayHeader(List<String> headerParameter) throws ServiceException;

    @POST("/reqopt/requied/array/header")
    void postRequiredArrayHeaderAsync(List<String> headerParameter, Callback<Error> cb);

    @POST("/reqopt/optional/array/header")
    void postOptionalArrayHeader(List<String> headerParameter) throws ServiceException;

    @POST("/reqopt/optional/array/header")
    void postOptionalArrayHeaderAsync(List<String> headerParameter, Callback<Response> cb);

}
