// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.


package fixtures.bodydate;

import com.microsoft.rest.ServiceCallback;
import com.microsoft.rest.ServiceException;
import com.microsoft.rest.ServiceResponseCallback;
import retrofit.client.Response;
import java.util.Date;
import retrofit.http.GET;
import retrofit.http.PUT;
import retrofit.http.Body;

public interface DateOperations {
    interface DateService {
        @GET("/date/null")
        Response getNull() throws ServiceException;

        @GET("/date/null")
        void getNullAsync(ServiceResponseCallback cb);

        @GET("/date/invaliddate")
        Response getInvalidDate() throws ServiceException;

        @GET("/date/invaliddate")
        void getInvalidDateAsync(ServiceResponseCallback cb);

        @GET("/date/overflowdate")
        Response getOverflowDate() throws ServiceException;

        @GET("/date/overflowdate")
        void getOverflowDateAsync(ServiceResponseCallback cb);

        @GET("/date/underflowdate")
        Response getUnderflowDate() throws ServiceException;

        @GET("/date/underflowdate")
        void getUnderflowDateAsync(ServiceResponseCallback cb);

        @PUT("/date/max")
        Response putMaxDate(@Body Date dateBody) throws ServiceException;

        @PUT("/date/max")
        void putMaxDateAsync(@Body Date dateBody, ServiceResponseCallback cb);

        @GET("/date/max")
        Response getMaxDate() throws ServiceException;

        @GET("/date/max")
        void getMaxDateAsync(ServiceResponseCallback cb);

        @PUT("/date/min")
        Response putMinDate(@Body Date dateBody) throws ServiceException;

        @PUT("/date/min")
        void putMinDateAsync(@Body Date dateBody, ServiceResponseCallback cb);

        @GET("/date/min")
        Response getMinDate() throws ServiceException;

        @GET("/date/min")
        void getMinDateAsync(ServiceResponseCallback cb);

    }
    Date getNull() throws ServiceException;

    void getNullAsync(final ServiceCallback<Date> serviceCallback);

    Date getInvalidDate() throws ServiceException;

    void getInvalidDateAsync(final ServiceCallback<Date> serviceCallback);

    Date getOverflowDate() throws ServiceException;

    void getOverflowDateAsync(final ServiceCallback<Date> serviceCallback);

    Date getUnderflowDate() throws ServiceException;

    void getUnderflowDateAsync(final ServiceCallback<Date> serviceCallback);

    void putMaxDate(Date dateBody) throws ServiceException;

    void putMaxDateAsync(Date dateBody, final ServiceCallback<Void> serviceCallback);

    Date getMaxDate() throws ServiceException;

    void getMaxDateAsync(final ServiceCallback<Date> serviceCallback);

    void putMinDate(Date dateBody) throws ServiceException;

    void putMinDateAsync(Date dateBody, final ServiceCallback<Void> serviceCallback);

    Date getMinDate() throws ServiceException;

    void getMinDateAsync(final ServiceCallback<Date> serviceCallback);

}
