// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.


package fixtures.bodydate;

import com.microsoft.rest.ServiceException;
import retrofit.Callback;
import retrofit.client.Response;
import java.util.Date;
import retrofit.http.GET;
import retrofit.http.PUT;
import retrofit.http.Body;

public interface DateOperations {
    @GET("/date/null")
    Date getNull() throws ServiceException;

    @GET("/date/null")
    void getNullAsync(Callback<Date> cb);

    @GET("/date/invaliddate")
    Date getInvalidDate() throws ServiceException;

    @GET("/date/invaliddate")
    void getInvalidDateAsync(Callback<Date> cb);

    @GET("/date/overflowdate")
    Date getOverflowDate() throws ServiceException;

    @GET("/date/overflowdate")
    void getOverflowDateAsync(Callback<Date> cb);

    @GET("/date/underflowdate")
    Date getUnderflowDate() throws ServiceException;

    @GET("/date/underflowdate")
    void getUnderflowDateAsync(Callback<Date> cb);

    @PUT("/date/max")
    Response putMaxDate(@Body Date dateBody) throws ServiceException;

    @PUT("/date/max")
    void putMaxDateAsync(@Body Date dateBody, Callback<Response> cb);

    @GET("/date/max")
    Date getMaxDate() throws ServiceException;

    @GET("/date/max")
    void getMaxDateAsync(Callback<Date> cb);

    @PUT("/date/min")
    Response putMinDate(@Body Date dateBody) throws ServiceException;

    @PUT("/date/min")
    void putMinDateAsync(@Body Date dateBody, Callback<Response> cb);

    @GET("/date/min")
    Date getMinDate() throws ServiceException;

    @GET("/date/min")
    void getMinDateAsync(Callback<Date> cb);

}
