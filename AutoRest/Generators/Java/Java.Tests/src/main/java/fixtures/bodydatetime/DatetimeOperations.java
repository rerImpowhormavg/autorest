// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.


package fixtures.bodydatetime;

import com.microsoft.rest.ServiceCallback;
import com.microsoft.rest.ServiceException;
import com.microsoft.rest.ServiceResponseCallback;
import retrofit.client.Response;
import java.util.Date;
import retrofit.http.GET;
import retrofit.http.PUT;
import retrofit.http.Body;

public interface DatetimeOperations {
    interface DatetimeService {
        @GET("/datetime/null")
        Response getNull() throws ServiceException;

        @GET("/datetime/null")
        void getNullAsync(ServiceResponseCallback cb);

        @GET("/datetime/invalid")
        Response getInvalid() throws ServiceException;

        @GET("/datetime/invalid")
        void getInvalidAsync(ServiceResponseCallback cb);

        @GET("/datetime/overflow")
        Response getOverflow() throws ServiceException;

        @GET("/datetime/overflow")
        void getOverflowAsync(ServiceResponseCallback cb);

        @GET("/datetime/underflow")
        Response getUnderflow() throws ServiceException;

        @GET("/datetime/underflow")
        void getUnderflowAsync(ServiceResponseCallback cb);

        @PUT("/datetime/max/utc")
        Response putUtcMaxDateTime(@Body Date datetimeBody) throws ServiceException;

        @PUT("/datetime/max/utc")
        void putUtcMaxDateTimeAsync(@Body Date datetimeBody, ServiceResponseCallback cb);

        @GET("/datetime/max/utc/lowercase")
        Response getUtcLowercaseMaxDateTime() throws ServiceException;

        @GET("/datetime/max/utc/lowercase")
        void getUtcLowercaseMaxDateTimeAsync(ServiceResponseCallback cb);

        @GET("/datetime/max/utc/uppercase")
        Response getUtcUppercaseMaxDateTime() throws ServiceException;

        @GET("/datetime/max/utc/uppercase")
        void getUtcUppercaseMaxDateTimeAsync(ServiceResponseCallback cb);

        @PUT("/datetime/max/localpositiveoffset")
        Response putLocalPositiveOffsetMaxDateTime(@Body Date datetimeBody) throws ServiceException;

        @PUT("/datetime/max/localpositiveoffset")
        void putLocalPositiveOffsetMaxDateTimeAsync(@Body Date datetimeBody, ServiceResponseCallback cb);

        @GET("/datetime/max/localpositiveoffset/lowercase")
        Response getLocalPositiveOffsetLowercaseMaxDateTime() throws ServiceException;

        @GET("/datetime/max/localpositiveoffset/lowercase")
        void getLocalPositiveOffsetLowercaseMaxDateTimeAsync(ServiceResponseCallback cb);

        @GET("/datetime/max/localpositiveoffset/uppercase")
        Response getLocalPositiveOffsetUppercaseMaxDateTime() throws ServiceException;

        @GET("/datetime/max/localpositiveoffset/uppercase")
        void getLocalPositiveOffsetUppercaseMaxDateTimeAsync(ServiceResponseCallback cb);

        @PUT("/datetime/max/localnegativeoffset")
        Response putLocalNegativeOffsetMaxDateTime(@Body Date datetimeBody) throws ServiceException;

        @PUT("/datetime/max/localnegativeoffset")
        void putLocalNegativeOffsetMaxDateTimeAsync(@Body Date datetimeBody, ServiceResponseCallback cb);

        @GET("/datetime/max/localnegativeoffset/uppercase")
        Response getLocalNegativeOffsetUppercaseMaxDateTime() throws ServiceException;

        @GET("/datetime/max/localnegativeoffset/uppercase")
        void getLocalNegativeOffsetUppercaseMaxDateTimeAsync(ServiceResponseCallback cb);

        @GET("/datetime/max/localnegativeoffset/lowercase")
        Response getLocalNegativeOffsetLowercaseMaxDateTime() throws ServiceException;

        @GET("/datetime/max/localnegativeoffset/lowercase")
        void getLocalNegativeOffsetLowercaseMaxDateTimeAsync(ServiceResponseCallback cb);

        @PUT("/datetime/min/utc")
        Response putUtcMinDateTime(@Body Date datetimeBody) throws ServiceException;

        @PUT("/datetime/min/utc")
        void putUtcMinDateTimeAsync(@Body Date datetimeBody, ServiceResponseCallback cb);

        @GET("/datetime/min/utc")
        Response getUtcMinDateTime() throws ServiceException;

        @GET("/datetime/min/utc")
        void getUtcMinDateTimeAsync(ServiceResponseCallback cb);

        @PUT("/datetime/min/localpositiveoffset")
        Response putLocalPositiveOffsetMinDateTime(@Body Date datetimeBody) throws ServiceException;

        @PUT("/datetime/min/localpositiveoffset")
        void putLocalPositiveOffsetMinDateTimeAsync(@Body Date datetimeBody, ServiceResponseCallback cb);

        @GET("/datetime/min/localpositiveoffset")
        Response getLocalPositiveOffsetMinDateTime() throws ServiceException;

        @GET("/datetime/min/localpositiveoffset")
        void getLocalPositiveOffsetMinDateTimeAsync(ServiceResponseCallback cb);

        @PUT("/datetime/min/localnegativeoffset")
        Response putLocalNegativeOffsetMinDateTime(@Body Date datetimeBody) throws ServiceException;

        @PUT("/datetime/min/localnegativeoffset")
        void putLocalNegativeOffsetMinDateTimeAsync(@Body Date datetimeBody, ServiceResponseCallback cb);

        @GET("/datetime/min/localnegativeoffset")
        Response getLocalNegativeOffsetMinDateTime() throws ServiceException;

        @GET("/datetime/min/localnegativeoffset")
        void getLocalNegativeOffsetMinDateTimeAsync(ServiceResponseCallback cb);

    }
    Date getNull() throws ServiceException;

    void getNullAsync(final ServiceCallback<Date> serviceCallback);

    Date getInvalid() throws ServiceException;

    void getInvalidAsync(final ServiceCallback<Date> serviceCallback);

    Date getOverflow() throws ServiceException;

    void getOverflowAsync(final ServiceCallback<Date> serviceCallback);

    Date getUnderflow() throws ServiceException;

    void getUnderflowAsync(final ServiceCallback<Date> serviceCallback);

    void putUtcMaxDateTime(Date datetimeBody) throws ServiceException;

    void putUtcMaxDateTimeAsync(Date datetimeBody, final ServiceCallback<Void> serviceCallback);

    Date getUtcLowercaseMaxDateTime() throws ServiceException;

    void getUtcLowercaseMaxDateTimeAsync(final ServiceCallback<Date> serviceCallback);

    Date getUtcUppercaseMaxDateTime() throws ServiceException;

    void getUtcUppercaseMaxDateTimeAsync(final ServiceCallback<Date> serviceCallback);

    void putLocalPositiveOffsetMaxDateTime(Date datetimeBody) throws ServiceException;

    void putLocalPositiveOffsetMaxDateTimeAsync(Date datetimeBody, final ServiceCallback<Void> serviceCallback);

    Date getLocalPositiveOffsetLowercaseMaxDateTime() throws ServiceException;

    void getLocalPositiveOffsetLowercaseMaxDateTimeAsync(final ServiceCallback<Date> serviceCallback);

    Date getLocalPositiveOffsetUppercaseMaxDateTime() throws ServiceException;

    void getLocalPositiveOffsetUppercaseMaxDateTimeAsync(final ServiceCallback<Date> serviceCallback);

    void putLocalNegativeOffsetMaxDateTime(Date datetimeBody) throws ServiceException;

    void putLocalNegativeOffsetMaxDateTimeAsync(Date datetimeBody, final ServiceCallback<Void> serviceCallback);

    Date getLocalNegativeOffsetUppercaseMaxDateTime() throws ServiceException;

    void getLocalNegativeOffsetUppercaseMaxDateTimeAsync(final ServiceCallback<Date> serviceCallback);

    Date getLocalNegativeOffsetLowercaseMaxDateTime() throws ServiceException;

    void getLocalNegativeOffsetLowercaseMaxDateTimeAsync(final ServiceCallback<Date> serviceCallback);

    void putUtcMinDateTime(Date datetimeBody) throws ServiceException;

    void putUtcMinDateTimeAsync(Date datetimeBody, final ServiceCallback<Void> serviceCallback);

    Date getUtcMinDateTime() throws ServiceException;

    void getUtcMinDateTimeAsync(final ServiceCallback<Date> serviceCallback);

    void putLocalPositiveOffsetMinDateTime(Date datetimeBody) throws ServiceException;

    void putLocalPositiveOffsetMinDateTimeAsync(Date datetimeBody, final ServiceCallback<Void> serviceCallback);

    Date getLocalPositiveOffsetMinDateTime() throws ServiceException;

    void getLocalPositiveOffsetMinDateTimeAsync(final ServiceCallback<Date> serviceCallback);

    void putLocalNegativeOffsetMinDateTime(Date datetimeBody) throws ServiceException;

    void putLocalNegativeOffsetMinDateTimeAsync(Date datetimeBody, final ServiceCallback<Void> serviceCallback);

    Date getLocalNegativeOffsetMinDateTime() throws ServiceException;

    void getLocalNegativeOffsetMinDateTimeAsync(final ServiceCallback<Date> serviceCallback);

}
