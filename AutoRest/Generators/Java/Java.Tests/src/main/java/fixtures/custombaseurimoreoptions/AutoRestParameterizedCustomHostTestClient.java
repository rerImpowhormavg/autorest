/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package fixtures.custombaseurimoreoptions;

import java.util.List;
import okhttp3.Interceptor;
import okhttp3.logging.HttpLoggingInterceptor.Level;
import com.microsoft.rest.AutoRestBaseUrl;
import com.microsoft.rest.serializer.JacksonMapperAdapter;

/**
 * The interface for AutoRestParameterizedCustomHostTestClient class.
 */
public interface AutoRestParameterizedCustomHostTestClient {
    /**
     * Gets the URL used as the base for all cloud service requests.
     *
     * @return the BaseUrl object.
     */
    AutoRestBaseUrl getBaseUrl();

    /**
     * Gets the list of interceptors the OkHttp client will execute.
     *
     * @return the list of interceptors.
     */
    List<Interceptor> getClientInterceptors();

    /**
     * Sets the logging level for OkHttp client.
     *
     * @param logLevel the logging level enum.
     */
    void setLogLevel(Level logLevel);

    /**
     * Gets the adapter for {@link com.fasterxml.jackson.databind.ObjectMapper} for serialization
     * and deserialization operations..
     *
     * @return the adapter.
     */
    JacksonMapperAdapter getMapperAdapter();

    /**
     * Gets The subscription id with value 'test12'..
     *
     * @return the subscriptionId value.
     */
    String getSubscriptionId();

    /**
     * Sets The subscription id with value 'test12'..
     *
     * @param subscriptionId the subscriptionId value.
     */
    void setSubscriptionId(String subscriptionId);

    /**
     * Gets A string value that is used as a global part of the parameterized host. Default value 'host'..
     *
     * @return the dnsSuffix value.
     */
    String getDnsSuffix();

    /**
     * Sets A string value that is used as a global part of the parameterized host. Default value 'host'..
     *
     * @param dnsSuffix the dnsSuffix value.
     */
    void setDnsSuffix(String dnsSuffix);

    /**
     * Gets the PathsOperations object to access its operations.
     * @return the PathsOperations object.
     */
    PathsOperations getPathsOperations();

}
