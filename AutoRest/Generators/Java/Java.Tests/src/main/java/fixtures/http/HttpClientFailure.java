// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.


package fixtures.http;

import com.microsoft.rest.ServiceException;
import retrofit.Callback;
import retrofit.client.Response;
import fixtures.http.models.Error;
import retrofit.http.HEAD;
import retrofit.http.GET;
import retrofit.http.PUT;
import retrofit.http.PATCH;
import retrofit.http.POST;
import retrofit.http.DELETE;

public interface HttpClientFailure {
    @HEAD("/http/failure/client/400")
    Error head400() throws ServiceException;

    @HEAD("/http/failure/client/400")
    void head400Async(Callback<Error> cb);

    @GET("/http/failure/client/400")
    Error get400() throws ServiceException;

    @GET("/http/failure/client/400")
    void get400Async(Callback<Error> cb);

    @PUT("/http/failure/client/400")
    Error put400(Boolean booleanValue) throws ServiceException;

    @PUT("/http/failure/client/400")
    void put400Async(Boolean booleanValue, Callback<Error> cb);

    @PATCH("/http/failure/client/400")
    Error patch400(Boolean booleanValue) throws ServiceException;

    @PATCH("/http/failure/client/400")
    void patch400Async(Boolean booleanValue, Callback<Error> cb);

    @POST("/http/failure/client/400")
    Error post400(Boolean booleanValue) throws ServiceException;

    @POST("/http/failure/client/400")
    void post400Async(Boolean booleanValue, Callback<Error> cb);

    @DELETE("/http/failure/client/400")
    Error delete400(Boolean booleanValue) throws ServiceException;

    @DELETE("/http/failure/client/400")
    void delete400Async(Boolean booleanValue, Callback<Error> cb);

    @HEAD("/http/failure/client/401")
    Error head401() throws ServiceException;

    @HEAD("/http/failure/client/401")
    void head401Async(Callback<Error> cb);

    @GET("/http/failure/client/402")
    Error get402() throws ServiceException;

    @GET("/http/failure/client/402")
    void get402Async(Callback<Error> cb);

    @GET("/http/failure/client/403")
    Error get403() throws ServiceException;

    @GET("/http/failure/client/403")
    void get403Async(Callback<Error> cb);

    @PUT("/http/failure/client/404")
    Error put404(Boolean booleanValue) throws ServiceException;

    @PUT("/http/failure/client/404")
    void put404Async(Boolean booleanValue, Callback<Error> cb);

    @PATCH("/http/failure/client/405")
    Error patch405(Boolean booleanValue) throws ServiceException;

    @PATCH("/http/failure/client/405")
    void patch405Async(Boolean booleanValue, Callback<Error> cb);

    @POST("/http/failure/client/406")
    Error post406(Boolean booleanValue) throws ServiceException;

    @POST("/http/failure/client/406")
    void post406Async(Boolean booleanValue, Callback<Error> cb);

    @DELETE("/http/failure/client/407")
    Error delete407(Boolean booleanValue) throws ServiceException;

    @DELETE("/http/failure/client/407")
    void delete407Async(Boolean booleanValue, Callback<Error> cb);

    @PUT("/http/failure/client/409")
    Error put409(Boolean booleanValue) throws ServiceException;

    @PUT("/http/failure/client/409")
    void put409Async(Boolean booleanValue, Callback<Error> cb);

    @HEAD("/http/failure/client/410")
    Error head410() throws ServiceException;

    @HEAD("/http/failure/client/410")
    void head410Async(Callback<Error> cb);

    @GET("/http/failure/client/411")
    Error get411() throws ServiceException;

    @GET("/http/failure/client/411")
    void get411Async(Callback<Error> cb);

    @GET("/http/failure/client/412")
    Error get412() throws ServiceException;

    @GET("/http/failure/client/412")
    void get412Async(Callback<Error> cb);

    @PUT("/http/failure/client/413")
    Error put413(Boolean booleanValue) throws ServiceException;

    @PUT("/http/failure/client/413")
    void put413Async(Boolean booleanValue, Callback<Error> cb);

    @PATCH("/http/failure/client/414")
    Error patch414(Boolean booleanValue) throws ServiceException;

    @PATCH("/http/failure/client/414")
    void patch414Async(Boolean booleanValue, Callback<Error> cb);

    @POST("/http/failure/client/415")
    Error post415(Boolean booleanValue) throws ServiceException;

    @POST("/http/failure/client/415")
    void post415Async(Boolean booleanValue, Callback<Error> cb);

    @GET("/http/failure/client/416")
    Error get416() throws ServiceException;

    @GET("/http/failure/client/416")
    void get416Async(Callback<Error> cb);

    @DELETE("/http/failure/client/417")
    Error delete417(Boolean booleanValue) throws ServiceException;

    @DELETE("/http/failure/client/417")
    void delete417Async(Boolean booleanValue, Callback<Error> cb);

    @HEAD("/http/failure/client/429")
    Error head429() throws ServiceException;

    @HEAD("/http/failure/client/429")
    void head429Async(Callback<Error> cb);

}
