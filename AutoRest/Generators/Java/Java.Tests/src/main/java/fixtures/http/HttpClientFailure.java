// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.


package fixtures.http;

import com.microsoft.rest.ServiceCallback;
import com.microsoft.rest.ServiceException;
import com.microsoft.rest.ServiceResponseCallback;
import retrofit.client.Response;
import fixtures.http.models.Error;
import retrofit.http.HEAD;
import retrofit.http.GET;
import retrofit.http.PUT;
import retrofit.http.Body;
import retrofit.http.PATCH;
import retrofit.http.POST;
import retrofit.http.DELETE;

public interface HttpClientFailure {
    interface HttpClientFailureService {
        @HEAD("/http/failure/client/400")
        Response head400() throws ServiceException;

        @HEAD("/http/failure/client/400")
        void head400Async(ServiceResponseCallback cb);

        @GET("/http/failure/client/400")
        Response get400() throws ServiceException;

        @GET("/http/failure/client/400")
        void get400Async(ServiceResponseCallback cb);

        @PUT("/http/failure/client/400")
        Response put400(@Body boolean booleanValue) throws ServiceException;

        @PUT("/http/failure/client/400")
        void put400Async(@Body boolean booleanValue, ServiceResponseCallback cb);

        @PATCH("/http/failure/client/400")
        Response patch400(@Body boolean booleanValue) throws ServiceException;

        @PATCH("/http/failure/client/400")
        void patch400Async(@Body boolean booleanValue, ServiceResponseCallback cb);

        @POST("/http/failure/client/400")
        Response post400(@Body boolean booleanValue) throws ServiceException;

        @POST("/http/failure/client/400")
        void post400Async(@Body boolean booleanValue, ServiceResponseCallback cb);

        @DELETE("/http/failure/client/400")
        Response delete400(@Body boolean booleanValue) throws ServiceException;

        @DELETE("/http/failure/client/400")
        void delete400Async(@Body boolean booleanValue, ServiceResponseCallback cb);

        @HEAD("/http/failure/client/401")
        Response head401() throws ServiceException;

        @HEAD("/http/failure/client/401")
        void head401Async(ServiceResponseCallback cb);

        @GET("/http/failure/client/402")
        Response get402() throws ServiceException;

        @GET("/http/failure/client/402")
        void get402Async(ServiceResponseCallback cb);

        @GET("/http/failure/client/403")
        Response get403() throws ServiceException;

        @GET("/http/failure/client/403")
        void get403Async(ServiceResponseCallback cb);

        @PUT("/http/failure/client/404")
        Response put404(@Body boolean booleanValue) throws ServiceException;

        @PUT("/http/failure/client/404")
        void put404Async(@Body boolean booleanValue, ServiceResponseCallback cb);

        @PATCH("/http/failure/client/405")
        Response patch405(@Body boolean booleanValue) throws ServiceException;

        @PATCH("/http/failure/client/405")
        void patch405Async(@Body boolean booleanValue, ServiceResponseCallback cb);

        @POST("/http/failure/client/406")
        Response post406(@Body boolean booleanValue) throws ServiceException;

        @POST("/http/failure/client/406")
        void post406Async(@Body boolean booleanValue, ServiceResponseCallback cb);

        @DELETE("/http/failure/client/407")
        Response delete407(@Body boolean booleanValue) throws ServiceException;

        @DELETE("/http/failure/client/407")
        void delete407Async(@Body boolean booleanValue, ServiceResponseCallback cb);

        @PUT("/http/failure/client/409")
        Response put409(@Body boolean booleanValue) throws ServiceException;

        @PUT("/http/failure/client/409")
        void put409Async(@Body boolean booleanValue, ServiceResponseCallback cb);

        @HEAD("/http/failure/client/410")
        Response head410() throws ServiceException;

        @HEAD("/http/failure/client/410")
        void head410Async(ServiceResponseCallback cb);

        @GET("/http/failure/client/411")
        Response get411() throws ServiceException;

        @GET("/http/failure/client/411")
        void get411Async(ServiceResponseCallback cb);

        @GET("/http/failure/client/412")
        Response get412() throws ServiceException;

        @GET("/http/failure/client/412")
        void get412Async(ServiceResponseCallback cb);

        @PUT("/http/failure/client/413")
        Response put413(@Body boolean booleanValue) throws ServiceException;

        @PUT("/http/failure/client/413")
        void put413Async(@Body boolean booleanValue, ServiceResponseCallback cb);

        @PATCH("/http/failure/client/414")
        Response patch414(@Body boolean booleanValue) throws ServiceException;

        @PATCH("/http/failure/client/414")
        void patch414Async(@Body boolean booleanValue, ServiceResponseCallback cb);

        @POST("/http/failure/client/415")
        Response post415(@Body boolean booleanValue) throws ServiceException;

        @POST("/http/failure/client/415")
        void post415Async(@Body boolean booleanValue, ServiceResponseCallback cb);

        @GET("/http/failure/client/416")
        Response get416() throws ServiceException;

        @GET("/http/failure/client/416")
        void get416Async(ServiceResponseCallback cb);

        @DELETE("/http/failure/client/417")
        Response delete417(@Body boolean booleanValue) throws ServiceException;

        @DELETE("/http/failure/client/417")
        void delete417Async(@Body boolean booleanValue, ServiceResponseCallback cb);

        @HEAD("/http/failure/client/429")
        Response head429() throws ServiceException;

        @HEAD("/http/failure/client/429")
        void head429Async(ServiceResponseCallback cb);

    }
    Error head400() throws ServiceException;

    void head400Async(final ServiceCallback<Error> serviceCallback);

    Error get400() throws ServiceException;

    void get400Async(final ServiceCallback<Error> serviceCallback);

    Error put400(boolean booleanValue) throws ServiceException;

    void put400Async(boolean booleanValue, final ServiceCallback<Error> serviceCallback);

    Error patch400(boolean booleanValue) throws ServiceException;

    void patch400Async(boolean booleanValue, final ServiceCallback<Error> serviceCallback);

    Error post400(boolean booleanValue) throws ServiceException;

    void post400Async(boolean booleanValue, final ServiceCallback<Error> serviceCallback);

    Error delete400(boolean booleanValue) throws ServiceException;

    void delete400Async(boolean booleanValue, final ServiceCallback<Error> serviceCallback);

    Error head401() throws ServiceException;

    void head401Async(final ServiceCallback<Error> serviceCallback);

    Error get402() throws ServiceException;

    void get402Async(final ServiceCallback<Error> serviceCallback);

    Error get403() throws ServiceException;

    void get403Async(final ServiceCallback<Error> serviceCallback);

    Error put404(boolean booleanValue) throws ServiceException;

    void put404Async(boolean booleanValue, final ServiceCallback<Error> serviceCallback);

    Error patch405(boolean booleanValue) throws ServiceException;

    void patch405Async(boolean booleanValue, final ServiceCallback<Error> serviceCallback);

    Error post406(boolean booleanValue) throws ServiceException;

    void post406Async(boolean booleanValue, final ServiceCallback<Error> serviceCallback);

    Error delete407(boolean booleanValue) throws ServiceException;

    void delete407Async(boolean booleanValue, final ServiceCallback<Error> serviceCallback);

    Error put409(boolean booleanValue) throws ServiceException;

    void put409Async(boolean booleanValue, final ServiceCallback<Error> serviceCallback);

    Error head410() throws ServiceException;

    void head410Async(final ServiceCallback<Error> serviceCallback);

    Error get411() throws ServiceException;

    void get411Async(final ServiceCallback<Error> serviceCallback);

    Error get412() throws ServiceException;

    void get412Async(final ServiceCallback<Error> serviceCallback);

    Error put413(boolean booleanValue) throws ServiceException;

    void put413Async(boolean booleanValue, final ServiceCallback<Error> serviceCallback);

    Error patch414(boolean booleanValue) throws ServiceException;

    void patch414Async(boolean booleanValue, final ServiceCallback<Error> serviceCallback);

    Error post415(boolean booleanValue) throws ServiceException;

    void post415Async(boolean booleanValue, final ServiceCallback<Error> serviceCallback);

    Error get416() throws ServiceException;

    void get416Async(final ServiceCallback<Error> serviceCallback);

    Error delete417(boolean booleanValue) throws ServiceException;

    void delete417Async(boolean booleanValue, final ServiceCallback<Error> serviceCallback);

    Error head429() throws ServiceException;

    void head429Async(final ServiceCallback<Error> serviceCallback);

}
