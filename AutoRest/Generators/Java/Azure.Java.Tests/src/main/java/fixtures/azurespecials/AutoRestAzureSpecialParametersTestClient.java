/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package fixtures.azurespecials;

import com.microsoft.azure.AzureClient;
import com.microsoft.rest.AutoRestBaseUrl;
import com.microsoft.rest.credentials.ServiceClientCredentials;
import com.microsoft.rest.serializer.JacksonMapperAdapter;
import java.util.List;
import okhttp3.Interceptor;
import okhttp3.logging.HttpLoggingInterceptor.Level;

/**
 * The interface for AutoRestAzureSpecialParametersTestClient class.
 */
public interface AutoRestAzureSpecialParametersTestClient {
    /**
     * Gets the URL used as the base for all cloud service requests.
     *
     * @return the BaseUrl object.
     */
    AutoRestBaseUrl getBaseUrl();

    /**
     * Gets the list of interceptors the OkHttp client will execute.
     * @return the list of interceptors.
     */
    List<Interceptor> getClientInterceptors();

    /**
     * Sets the logging level for OkHttp client.
     *
     * @param logLevel the logging level enum.
     */
    void setLogLevel(Level logLevel);

    /**
     * Gets the adapter for {@link com.fasterxml.jackson.databind.ObjectMapper} for serialization
     * and deserialization operations..
     *
     * @return the adapter.
     */
    JacksonMapperAdapter getMapperAdapter();

    /**
     * Gets the {@link AzureClient} used for long running operations.
     * @return the azure client;
     */
    AzureClient getAzureClient();

    /**
     * Gets Gets Azure subscription credentials..
     *
     * @return the credentials value.
     */
    ServiceClientCredentials getCredentials();

    /**
     * Gets The subscription id, which appears in the path, always modeled in credentials. The value is always '1234-5678-9012-3456'.
     *
     * @return the subscriptionId value.
     */
    String getSubscriptionId();

    /**
     * Sets The subscription id, which appears in the path, always modeled in credentials. The value is always '1234-5678-9012-3456'.
     *
     * @param subscriptionId the subscriptionId value.
     */
    void setSubscriptionId(String subscriptionId);

    /**
     * Gets The api version, which appears in the query, the value is always '2015-07-01-preview'.
     *
     * @return the apiVersion value.
     */
    String getApiVersion();

    /**
     * Gets Gets or sets the preferred language for the response..
     *
     * @return the acceptLanguage value.
     */
    String getAcceptLanguage();

    /**
     * Sets Gets or sets the preferred language for the response..
     *
     * @param acceptLanguage the acceptLanguage value.
     */
    void setAcceptLanguage(String acceptLanguage);

    /**
     * Gets Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30..
     *
     * @return the longRunningOperationRetryTimeout value.
     */
    int getLongRunningOperationRetryTimeout();

    /**
     * Sets Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30..
     *
     * @param longRunningOperationRetryTimeout the longRunningOperationRetryTimeout value.
     */
    void setLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout);

    /**
     * Gets When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true..
     *
     * @return the generateClientRequestId value.
     */
    boolean getGenerateClientRequestId();

    /**
     * Sets When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true..
     *
     * @param generateClientRequestId the generateClientRequestId value.
     */
    void setGenerateClientRequestId(boolean generateClientRequestId);

    /**
     * Gets the XMsClientRequestIdOperations object to access its operations.
     * @return the XMsClientRequestIdOperations object.
     */
    XMsClientRequestIdOperations getXMsClientRequestIdOperations();

    /**
     * Gets the SubscriptionInCredentialsOperations object to access its operations.
     * @return the SubscriptionInCredentialsOperations object.
     */
    SubscriptionInCredentialsOperations getSubscriptionInCredentialsOperations();

    /**
     * Gets the SubscriptionInMethodOperations object to access its operations.
     * @return the SubscriptionInMethodOperations object.
     */
    SubscriptionInMethodOperations getSubscriptionInMethodOperations();

    /**
     * Gets the ApiVersionDefaultOperations object to access its operations.
     * @return the ApiVersionDefaultOperations object.
     */
    ApiVersionDefaultOperations getApiVersionDefaultOperations();

    /**
     * Gets the ApiVersionLocalOperations object to access its operations.
     * @return the ApiVersionLocalOperations object.
     */
    ApiVersionLocalOperations getApiVersionLocalOperations();

    /**
     * Gets the SkipUrlEncodingOperations object to access its operations.
     * @return the SkipUrlEncodingOperations object.
     */
    SkipUrlEncodingOperations getSkipUrlEncodingOperations();

    /**
     * Gets the OdataOperations object to access its operations.
     * @return the OdataOperations object.
     */
    OdataOperations getOdataOperations();

    /**
     * Gets the HeaderOperations object to access its operations.
     * @return the HeaderOperations object.
     */
    HeaderOperations getHeaderOperations();

}
