@using Microsoft.Rest.Generator.ClientModel
@using Microsoft.Rest.Generator.Python
@using Microsoft.Rest.Generator.Python.Templates
@using Microsoft.Rest.Generator.Utilities
@using System.Linq
@inherits Microsoft.Rest.Generator.Template<Microsoft.Rest.Generator.Python.ServiceClientTemplateModel>
# coding=utf-8
# --------------------------------------------------------------------------
@Header("# ")
# --------------------------------------------------------------------------
@EmptyLine
from msrest.service_client import ServiceClient
from msrest import Configuration, Serializer, Deserializer
@if (Model.MethodTemplateModels.Any())
{
<text>
from msrest.service_client import async_request
from msrest.exceptions import DeserializationError, HttpOperationError
</text>
}
@if (Model.MethodGroupModels.Any())
{
  foreach (var modelGroupType in Model.MethodGroupModels)
  {
@:from .operations.@(modelGroupType.MethodGroupType.ToPythonCase()) import @modelGroupType.MethodGroupType
  }
}
@if (Model.ModelTemplateModels.Any())
{
@:from . import models
}
@EmptyLine
@EmptyLine
class @(Model.Name)Configuration(Configuration):
@EmptyLine
    def __init__(self, @(Model.RequiredConstructorParameters)base_url=None, filepath=None):
@EmptyLine
        if not base_url:
            base_url = '@Model.BaseUrl'
@EmptyLine
        super(@(Model.Name)Configuration, self).__init__(base_url, filepath)
@if (Model.Properties.Any())
{
@EmptyLine
  foreach (var property in Model.Properties)
  {
        @:self.@(property.Name) = @(property.Name)
  }
}
@EmptyLine
@EmptyLine
class @(Model.Name)(object):
@EmptyLine
    def __init__(self, config):
@EmptyLine
        self._client = ServiceClient(@(Model.Properties.Any(p => p.Type == PrimaryType.Credentials) ? "config.credentials" : "None"), config)
@EmptyLine
@if (Model.ModelTemplateModels.Any())
{
        @:client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
}
else
{
        @:client_models = {}
}
        self._serialize = Serializer()
        self._deserialize = Deserializer(client_models)
@EmptyLine
        self.config = config
@foreach (var methodGroup in Model.MethodGroupModels)
{
        @:self.@(methodGroup.MethodGroupName) = @(methodGroup.MethodGroupType)(self._client, self.config, self._serialize, self._deserialize)
}
@foreach (var method in Model.MethodTemplateModels)
{
@EmptyLine
@(Include(new MethodTemplate(), method))
}
