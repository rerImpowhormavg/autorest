@using System
@using System.Linq
@using System.Collections.Generic
@using Microsoft.Rest.Generator.ClientModel
@using Microsoft.Rest.Generator.Python
@using Microsoft.Rest.Generator.Python.TemplateModels
@inherits Microsoft.Rest.Generator.Template<Microsoft.Rest.Generator.Python.ModelTemplateModel>
@if (Model.ContainsDecimal)
{
@:from decimal import *
@EmptyLine
}
@if (Model.ContainsDatetime)
{
@:from datetime import *
@EmptyLine
}
class @(Model.Name)(object):
@* Need to handle the base class, default value, comment*@
@{
  var requiredFieldList = Model.GetRequiredFieldsList();
  var requiredStr = String.Empty;
  if (requiredFieldList.Count > 0)
  {
    for (int i = 0; i < requiredFieldList.Count; i++) 
    {
      requiredFieldList[i] = "'" + requiredFieldList[i] + "'";
    }
    requiredStr = string.Join(",", requiredFieldList);
  }
@EmptyLine
    @:_required = [@requiredStr]
}
@EmptyLine
    _attribute_map = {
@{
  var propertyList = new List<Property>(Model.Properties);
  if (propertyList.Count > 0)
  {
    for (int i = 0; i < propertyList.Count; i++) 
    {
        @:@(Model.InitializePythonProperty(propertyList[i]))
    }
  }
}
    }
@EmptyLine
    def __init__(self, *args, **kwargs):
@EmptyLine
@{
  if (propertyList.Count > 0)
  {
    for (int i = 0; i < propertyList.Count; i++) 
    {
        @:@(Model.InitializeProperty("self", propertyList[i]))
    }
  }
}
@EmptyLine
        for k in kwargs:
            if hasattr(self, k):
                setattr(self, k, kwargs[k])

