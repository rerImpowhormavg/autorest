# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource import Resource


class StorageAccount(Resource):
    """
    The storage account.

    :param str provisioning_state: Gets the status of the storage account at
     the time the operation was called. Possible values for this property
     include: 'Creating', 'ResolvingDNS', 'Succeeded'.
    :param str account_type: Gets the type of the storage account. Possible
     values for this property include: 'Standard_LRS', 'Standard_ZRS',
     'Standard_GRS', 'Standard_RAGRS', 'Premium_LRS'.
    :param Endpoints primary_endpoints: Gets the URLs that are used to
     perform a retrieval of a public blob, queue or table object.Note that
     StandardZRS and PremiumLRS accounts only return the blob endpoint.
    :param str primary_location: Gets the location of the primary for the
     storage account.
    :param str status_of_primary: Gets the status indicating whether the
     primary location of the storage account is available or unavailable.
     Possible values for this property include: 'Available', 'Unavailable'.
    :param datetime last_geo_failover_time: Gets the timestamp of the most
     recent instance of a failover to the secondary location. Only the most
     recent timestamp is retained. This element is not returned if there has
     never been a failover instance. Only available if the accountType is
     StandardGRS or StandardRAGRS.
    :param str secondary_location: Gets the location of the geo replicated
     secondary for the storage account. Only available if the accountType is
     StandardGRS or StandardRAGRS.
    :param str status_of_secondary: Gets the status indicating whether the
     secondary location of the storage account is available or unavailable.
     Only available if the accountType is StandardGRS or StandardRAGRS.
     Possible values for this property include: 'Available', 'Unavailable'.
    :param datetime creation_time: Gets the creation date and time of the
     storage account in UTC.
    :param CustomDomain custom_domain: Gets the user assigned custom domain
     assigned to this storage account.
    :param Endpoints secondary_endpoints: Gets the URLs that are used to
     perform a retrieval of a public blob, queue or table object from the
     secondary location of the storage account. Only available if the
     accountType is StandardRAGRS.
    """

    _required = []

    _attribute_map = {
        'provisioning_state': {'key': 'properties.provisioningState', 'type': 'ProvisioningState'},
        'account_type': {'key': 'properties.accountType', 'type': 'AccountType'},
        'primary_endpoints': {'key': 'properties.primaryEndpoints', 'type': 'Endpoints'},
        'primary_location': {'key': 'properties.primaryLocation', 'type': 'str'},
        'status_of_primary': {'key': 'properties.statusOfPrimary', 'type': 'AccountStatus'},
        'last_geo_failover_time': {'key': 'properties.lastGeoFailoverTime', 'type': 'iso-8601'},
        'secondary_location': {'key': 'properties.secondaryLocation', 'type': 'str'},
        'status_of_secondary': {'key': 'properties.statusOfSecondary', 'type': 'AccountStatus'},
        'creation_time': {'key': 'properties.creationTime', 'type': 'iso-8601'},
        'custom_domain': {'key': 'properties.customDomain', 'type': 'CustomDomain'},
        'secondary_endpoints': {'key': 'properties.secondaryEndpoints', 'type': 'Endpoints'},
    }

    def __init__(self, *args, **kwargs):
        self.provisioning_state = None
        self.account_type = None
        self.primary_endpoints = None
        self.primary_location = None
        self.status_of_primary = None
        self.last_geo_failover_time = None
        self.secondary_location = None
        self.status_of_secondary = None
        self.creation_time = None
        self.custom_domain = None
        self.secondary_endpoints = None

        super(StorageAccount, self).__init__(*args, **kwargs)
