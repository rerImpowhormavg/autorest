@using Microsoft.Rest.Generator.Python
@using Microsoft.Rest.Generator.Python.Templates
@using Microsoft.Rest.Generator.Python.TemplateModels
@using Microsoft.Rest.Generator.Utilities
@using System.Linq
@inherits Microsoft.Rest.Generator.Template<Microsoft.Rest.Generator.Azure.Python.AzureModelInitTemplateModel>
# coding=utf-8
# --------------------------------------------------------------------------
@Header("# ").TrimMultilineHeader()
# --------------------------------------------------------------------------
@EmptyLine
@{
  foreach (var modelType in Model.ServiceClient.ModelTypes)
  {
    if (modelType.Extensions.ContainsKey(AzureExtensions.ExternalExtension) &&
      (bool)modelType.Extensions[AzureExtensions.ExternalExtension])
    {
      continue;
    }
@:from .@(modelType.Name.ToPythonCase()) import @modelType.Name@Model.GetExceptionNameIfExist(modelType, false)
  }
  foreach (var pagedName in Model.PagedClasses)
  {
@:from .@pagedName.ToPythonCase() import @pagedName
  }
  if (Model.ServiceClient.EnumTypes.Any())
  {
@:from .@(Model.ServiceClient.Name.ToPythonCase())_enums import (
    foreach (var enumType in @Model.ServiceClient.EnumTypes)
    {
    @:@(enumType.Name),
    }
@:)
  }
@EmptyLine
@:__all__ = [
  foreach (var modelType in Model.ServiceClient.ModelTypes)
  {
    if (modelType.Extensions.ContainsKey(AzureExtensions.ExternalExtension) &&
      (bool)modelType.Extensions[AzureExtensions.ExternalExtension])
    {
      continue;
    }
@:    '@modelType.Name'@Model.GetExceptionNameIfExist(modelType, true),
  }
  foreach (var pagedName in Model.PagedClasses)
  {
@:    '@pagedName',
  }
  foreach (var enumType in @Model.ServiceClient.EnumTypes)
  {
@:    '@(enumType.Name)',
  }
@:]
}
