{
  "id": "http://schema.management.azure.com/schemas/2016-03-30/Microsoft.Compute.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.Compute",
  "description": "Microsoft Compute Resource Types",
  "resourceDefinitions": {
    "availabilitySets": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Compute/availabilitySets"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2016-03-30"
          ]
        },
        "properties": {
          "$ref": "#/definitions/AvailabilitySetProperties"
        }
      },
      "required": [
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Compute/availabilitySets"
    },
    "extensions": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Compute/virtualMachines/extensions"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2016-03-30"
          ]
        },
        "properties": {
          "$ref": "#/definitions/VirtualMachineExtensionProperties"
        }
      },
      "required": [
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Compute/virtualMachines/extensions"
    },
    "virtualMachines": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Compute/virtualMachines"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2016-03-30"
          ]
        },
        "plan": {
          "$ref": "#/definitions/Plan",
          "description": "Gets or sets the purchase plan when deploying virtual machine from VM Marketplace images."
        },
        "properties": {
          "$ref": "#/definitions/VirtualMachineProperties"
        }
      },
      "required": [
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Compute/virtualMachines"
    },
    "virtualMachineScaleSets": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Compute/virtualMachineScaleSets"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2016-03-30"
          ]
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Gets or sets the virtual machine scale set sku."
        },
        "properties": {
          "$ref": "#/definitions/VirtualMachineScaleSetProperties"
        }
      },
      "required": [
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Compute/virtualMachineScaleSets"
    }
  },
  "definitions": {
    "AdditionalUnattendContent": {
      "type": "object",
      "properties": {
        "passName": {
          "type": "string",
          "enum": [
            "oobeSystem"
          ],
          "description": "Gets or sets the pass name. Currently, the only allowable value is oobeSystem. Possible values include: 'oobeSystem'"
        },
        "componentName": {
          "type": "string",
          "enum": [
            "Microsoft-Windows-Shell-Setup"
          ],
          "description": "Gets or sets the component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup. Possible values include: 'Microsoft-Windows-Shell-Setup'"
        },
        "settingName": {
          "type": "string",
          "enum": [
            "AutoLogon",
            "FirstLogonCommands"
          ],
          "description": "Gets or sets setting name (e.g. FirstLogonCommands, AutoLogon ). Possible values include: 'AutoLogon', 'FirstLogonCommands'"
        },
        "content": {
          "type": "string",
          "description": "Gets or sets XML formatted content that is added to the unattend.xml file in the specified pass and component.The XML must be less than 4 KB and must include the root element for the setting or feature that is being inserted."
        }
      },
      "description": "Gets or sets additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is a applied."
    },
    "ApiEntityReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the ARM resource id in the form of /subscriptions/{SubcriptionId}/resourceGroups/{ResourceGroupName}/..."
        }
      },
      "description": "The API entity reference."
    },
    "AvailabilitySetProperties": {
      "type": "object",
      "properties": {
        "platformUpdateDomainCount": {
          "type": "integer",
          "description": "Gets or sets Update Domain count."
        },
        "platformFaultDomainCount": {
          "type": "integer",
          "description": "Gets or sets Fault Domain count."
        },
        "virtualMachines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Gets or sets a list containing reference to all Virtual Machines created under this Availability Set."
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceViewStatus"
          },
          "description": "Gets or sets the resource status information."
        }
      },
      "description": "The instance view of a resource."
    },
    "BootDiagnostics": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Gets or sets whether boot diagnostics should be enabled on the Virtual Machine."
        },
        "storageUri": {
          "type": "string",
          "description": "Gets or sets the boot diagnostics storage Uri. It should be a valid Uri"
        }
      },
      "description": "Describes Boot Diagnostics."
    },
    "DataDisk": {
      "type": "object",
      "properties": {
        "lun": {
          "type": "integer",
          "description": "Gets or sets the logical unit number."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the disk name."
        },
        "vhd": {
          "$ref": "#/definitions/VirtualHardDisk",
          "description": "Gets or sets the Virtual Hard Disk."
        },
        "image": {
          "$ref": "#/definitions/VirtualHardDisk",
          "description": "Gets or sets the Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine.If SourceImage is provided, the destination VirtualHardDisk should not exist."
        },
        "caching": {
          "type": "string",
          "enum": [
            "None",
            "ReadOnly",
            "ReadWrite"
          ],
          "description": "Gets or sets the caching type. Possible values include: 'None', 'ReadOnly', 'ReadWrite'"
        },
        "createOption": {
          "type": "string",
          "enum": [
            "fromImage",
            "empty",
            "attach"
          ],
          "description": "Gets or sets the create option. Possible values include: 'fromImage', 'empty', 'attach'"
        },
        "diskSizeGB": {
          "type": "integer",
          "description": "Gets or sets the initial disk size in GB for blank data disks, and the new desired size for existing OS and Data disks."
        }
      },
      "required": [
        "lun",
        "name",
        "vhd",
        "createOption"
      ],
      "description": "Describes a data disk."
    },
    "DiagnosticsProfile": {
      "type": "object",
      "properties": {
        "bootDiagnostics": {
          "$ref": "#/definitions/BootDiagnostics",
          "description": "Gets or sets the boot diagnostics."
        }
      },
      "description": "Describes a diagnostics profile."
    },
    "DiskEncryptionSettings": {
      "type": "object",
      "properties": {
        "diskEncryptionKey": {
          "$ref": "#/definitions/KeyVaultSecretReference",
          "description": "Gets or sets the disk encryption key which is a KeyVault Secret."
        },
        "keyEncryptionKey": {
          "$ref": "#/definitions/KeyVaultKeyReference",
          "description": "Gets or sets the key encryption key which is KeyVault Key."
        },
        "enabled": {
          "type": "boolean",
          "description": "Gets or sets whether disk encryption should be enabled on the Virtual Machine."
        }
      },
      "description": "Describes a Encryption Settings for a Disk"
    },
    "HardwareProfile": {
      "type": "object",
      "properties": {
        "vmSize": {
          "type": "string",
          "enum": [
            "Basic_A0",
            "Basic_A1",
            "Basic_A2",
            "Basic_A3",
            "Basic_A4",
            "Standard_A0",
            "Standard_A1",
            "Standard_A2",
            "Standard_A3",
            "Standard_A4",
            "Standard_A5",
            "Standard_A6",
            "Standard_A7",
            "Standard_A8",
            "Standard_A9",
            "Standard_A10",
            "Standard_A11",
            "Standard_D1",
            "Standard_D2",
            "Standard_D3",
            "Standard_D4",
            "Standard_D11",
            "Standard_D12",
            "Standard_D13",
            "Standard_D14",
            "Standard_D1_v2",
            "Standard_D2_v2",
            "Standard_D3_v2",
            "Standard_D4_v2",
            "Standard_D5_v2",
            "Standard_D11_v2",
            "Standard_D12_v2",
            "Standard_D13_v2",
            "Standard_D14_v2",
            "Standard_D15_v2",
            "Standard_DS1",
            "Standard_DS2",
            "Standard_DS3",
            "Standard_DS4",
            "Standard_DS11",
            "Standard_DS12",
            "Standard_DS13",
            "Standard_DS14",
            "Standard_DS1_v2",
            "Standard_DS2_v2",
            "Standard_DS3_v2",
            "Standard_DS4_v2",
            "Standard_DS5_v2",
            "Standard_DS11_v2",
            "Standard_DS12_v2",
            "Standard_DS13_v2",
            "Standard_DS14_v2",
            "Standard_DS15_v2",
            "Standard_G1",
            "Standard_G2",
            "Standard_G3",
            "Standard_G4",
            "Standard_G5",
            "Standard_GS1",
            "Standard_GS2",
            "Standard_GS3",
            "Standard_GS4",
            "Standard_GS5"
          ],
          "description": "The virtual machine size name. Possible values include: 'Basic_A0', 'Basic_A1', 'Basic_A2', 'Basic_A3', 'Basic_A4', 'Standard_A0', 'Standard_A1', 'Standard_A2', 'Standard_A3', 'Standard_A4', 'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8', 'Standard_A9', 'Standard_A10', 'Standard_A11', 'Standard_D1', 'Standard_D2', 'Standard_D3', 'Standard_D4', 'Standard_D11', 'Standard_D12', 'Standard_D13', 'Standard_D14', 'Standard_D1_v2', 'Standard_D2_v2', 'Standard_D3_v2', 'Standard_D4_v2', 'Standard_D5_v2', 'Standard_D11_v2', 'Standard_D12_v2', 'Standard_D13_v2', 'Standard_D14_v2', 'Standard_D15_v2', 'Standard_DS1', 'Standard_DS2', 'Standard_DS3', 'Standard_DS4', 'Standard_DS11', 'Standard_DS12', 'Standard_DS13', 'Standard_DS14', 'Standard_DS1_v2', 'Standard_DS2_v2', 'Standard_DS3_v2', 'Standard_DS4_v2', 'Standard_DS5_v2', 'Standard_DS11_v2', 'Standard_DS12_v2', 'Standard_DS13_v2', 'Standard_DS14_v2', 'Standard_DS15_v2', 'Standard_G1', 'Standard_G2', 'Standard_G3', 'Standard_G4', 'Standard_G5', 'Standard_GS1', 'Standard_GS2', 'Standard_GS3', 'Standard_GS4', 'Standard_GS5'"
        }
      },
      "description": "Describes a hardware profile."
    },
    "ImageReference": {
      "type": "object",
      "properties": {
        "publisher": {
          "type": "string",
          "description": "Gets or sets the image publisher."
        },
        "offer": {
          "type": "string",
          "description": "Gets or sets the image offer."
        },
        "sku": {
          "type": "string",
          "description": "Gets or sets the image sku."
        },
        "version": {
          "type": "string",
          "description": "Gets or sets the image version. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor and Build being decimal numbers. Specify 'latest' to use the latest version of image."
        }
      },
      "description": "The image reference."
    },
    "InstanceViewStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Gets the status Code."
        },
        "level": {
          "type": "string",
          "enum": [
            "Info",
            "Warning",
            "Error"
          ],
          "description": "Gets or sets the level Code. Possible values include: 'Info', 'Warning', 'Error'"
        },
        "displayStatus": {
          "type": "string",
          "description": "Gets or sets the short localizable label for the status."
        },
        "message": {
          "type": "string",
          "description": "Gets or sets the detailed Message, including for alerts and error messages."
        },
        "time": {
          "type": "string",
          "description": "Gets or sets the time of the status."
        }
      },
      "description": "Instance view status."
    },
    "KeyVaultKeyReference": {
      "type": "object",
      "properties": {
        "keyUrl": {
          "type": "string",
          "description": "Gets or sets the URL referencing a key in a Key Vault."
        },
        "sourceVault": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets or sets the Relative URL of the Key Vault containing the key"
        }
      },
      "required": [
        "keyUrl",
        "sourceVault"
      ],
      "description": "Describes a reference to Key Vault Key"
    },
    "KeyVaultSecretReference": {
      "type": "object",
      "properties": {
        "secretUrl": {
          "type": "string",
          "description": "Gets or sets the URL referencing a secret in a Key Vault."
        },
        "sourceVault": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets or sets the Relative URL of the Key Vault containing the secret."
        }
      },
      "required": [
        "secretUrl",
        "sourceVault"
      ],
      "description": "Describes a reference to Key Vault Secret"
    },
    "LinuxConfiguration": {
      "type": "object",
      "properties": {
        "disablePasswordAuthentication": {
          "type": "boolean",
          "description": "Gets or sets whether Authentication using user name and password is allowed or not"
        },
        "ssh": {
          "$ref": "#/definitions/SshConfiguration",
          "description": "Gets or sets the SSH configuration for linux VMs"
        }
      },
      "description": "Describes Windows Configuration of the OS Profile."
    },
    "NetworkInterfaceReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id"
        },
        "properties": {
          "$ref": "#/definitions/NetworkInterfaceReferenceProperties"
        }
      },
      "description": "Describes a network interface reference."
    },
    "NetworkInterfaceReferenceProperties": {
      "type": "object",
      "properties": {
        "primary": {
          "type": "boolean",
          "description": "Gets or sets whether this is a primary NIC on a virtual machine"
        }
      },
      "description": "Describes a network interface reference properties."
    },
    "NetworkProfile": {
      "type": "object",
      "properties": {
        "networkInterfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceReference"
          },
          "description": "Gets or sets the network interfaces."
        }
      },
      "description": "Describes a network profile."
    },
    "OSDisk": {
      "type": "object",
      "properties": {
        "osType": {
          "type": "string",
          "enum": [
            "Windows",
            "Linux"
          ],
          "description": "Gets or sets the Operating System type. Possible values include: 'Windows', 'Linux'"
        },
        "encryptionSettings": {
          "$ref": "#/definitions/DiskEncryptionSettings",
          "description": "Gets or sets the disk encryption settings."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the disk name."
        },
        "vhd": {
          "$ref": "#/definitions/VirtualHardDisk",
          "description": "Gets or sets the Virtual Hard Disk."
        },
        "image": {
          "$ref": "#/definitions/VirtualHardDisk",
          "description": "Gets or sets the Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine.If SourceImage is provided, the destination VirtualHardDisk should not exist."
        },
        "caching": {
          "type": "string",
          "enum": [
            "None",
            "ReadOnly",
            "ReadWrite"
          ],
          "description": "Gets or sets the caching type. Possible values include: 'None', 'ReadOnly', 'ReadWrite'"
        },
        "createOption": {
          "type": "string",
          "enum": [
            "fromImage",
            "empty",
            "attach"
          ],
          "description": "Gets or sets the create option. Possible values include: 'fromImage', 'empty', 'attach'"
        },
        "diskSizeGB": {
          "type": "integer",
          "description": "Gets or sets the initial disk size in GB for blank data disks, and the new desired size for existing OS and Data disks."
        }
      },
      "required": [
        "name",
        "vhd",
        "createOption"
      ],
      "description": "Describes an Operating System disk."
    },
    "OSProfile": {
      "type": "object",
      "properties": {
        "computerName": {
          "type": "string",
          "description": "Gets or sets the computer name."
        },
        "adminUsername": {
          "type": "string",
          "description": "Gets or sets the admin user name."
        },
        "adminPassword": {
          "type": "string",
          "description": "Gets or sets the admin user password."
        },
        "customData": {
          "type": "string",
          "description": "Gets or sets a base-64 encoded string of custom data."
        },
        "windowsConfiguration": {
          "$ref": "#/definitions/WindowsConfiguration",
          "description": "Gets or sets the Windows Configuration of the OS profile."
        },
        "linuxConfiguration": {
          "$ref": "#/definitions/LinuxConfiguration",
          "description": "Gets or sets the Linux Configuration of the OS profile."
        },
        "secrets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VaultSecretGroup"
          },
          "description": "Gets or sets the List of certificates for addition to the VM."
        }
      },
      "description": "Describes an OS profile."
    },
    "Plan": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the plan ID."
        },
        "publisher": {
          "type": "string",
          "description": "Gets or sets the publisher ID."
        },
        "product": {
          "type": "string",
          "description": "Gets or sets the offer ID."
        },
        "promotionCode": {
          "type": "string",
          "description": "Gets or sets the promotion code."
        }
      },
      "description": "Plan for the resource."
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the sku name."
        },
        "tier": {
          "type": "string",
          "description": "Gets or sets the sku tier."
        },
        "capacity": {
          "type": "integer",
          "description": "Gets or sets the sku capacity."
        }
      },
      "description": "Describes a virtual machine scale set sku."
    },
    "SshConfiguration": {
      "type": "object",
      "properties": {
        "publicKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SshPublicKey"
          },
          "description": "Gets or sets the list of SSH public keys used to authenticate with linux based VMs"
        }
      },
      "description": "SSH configuration for Linux based VMs running on Azure"
    },
    "SshPublicKey": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Gets or sets the full path on the created VM where SSH public key is stored. If the file already exists, the specified key is appended to the file."
        },
        "keyData": {
          "type": "string",
          "description": "Gets or sets Certificate public key used to authenticate with VM through SSH.The certificate must be in Pem format with or without headers."
        }
      },
      "description": "Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed."
    },
    "StorageProfile": {
      "type": "object",
      "properties": {
        "imageReference": {
          "$ref": "#/definitions/ImageReference",
          "description": "Gets or sets the image reference."
        },
        "osDisk": {
          "$ref": "#/definitions/OSDisk",
          "description": "Gets or sets the OS disk."
        },
        "dataDisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataDisk"
          },
          "description": "Gets or sets the data disks."
        }
      },
      "description": "Describes a storage profile."
    },
    "SubResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id"
        }
      }
    },
    "UpgradePolicy": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "Automatic",
            "Manual"
          ],
          "description": "Gets or sets the upgrade mode. Possible values include: 'Automatic', 'Manual'"
        }
      },
      "description": "Describes an upgrade policy - automatic or manual."
    },
    "VaultCertificate": {
      "type": "object",
      "properties": {
        "certificateUrl": {
          "type": "string",
          "description": "Gets or sets the URL referencing a secret in a Key Vault which contains a properly formatted certificate."
        },
        "certificateStore": {
          "type": "string",
          "description": "Gets or sets the Certificate store in LocalMachine to add the certificate to on Windows, leave empty on Linux."
        }
      },
      "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM."
    },
    "VaultSecretGroup": {
      "type": "object",
      "properties": {
        "sourceVault": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets or sets the Relative URL of the Key Vault containing all of the certificates in VaultCertificates."
        },
        "vaultCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VaultCertificate"
          },
          "description": "Gets or sets the list of key vault references in SourceVault which contain certificates"
        }
      },
      "description": "Describes a set of certificates which are all in the same Key Vault."
    },
    "VirtualHardDisk": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Gets or sets the virtual hard disk's uri. It should be a valid Uri to a virtual hard disk."
        }
      },
      "description": "Describes the uri of a disk."
    },
    "VirtualMachineExtensionInstanceView": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the virtual machine extension name."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the full type of the extension handler which includes both publisher and type."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Gets or sets the type version of the extension handler."
        },
        "substatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceViewStatus"
          },
          "description": "Gets or sets the resource status information."
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceViewStatus"
          },
          "description": "Gets or sets the resource status information."
        }
      },
      "description": "The instance view of a virtual machine extension."
    },
    "VirtualMachineExtensionProperties": {
      "type": "object",
      "properties": {
        "forceUpdateTag": {
          "type": "string",
          "description": "Gets or sets how the extension handler should be forced to update even if the extension configuration has not changed."
        },
        "publisher": {
          "type": "string",
          "description": "Gets or sets the name of the extension handler publisher."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the type of the extension handler."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Gets or sets the type version of the extension handler."
        },
        "autoUpgradeMinorVersion": {
          "type": "boolean",
          "description": "Gets or sets whether the extension handler should be automatically upgraded across minor versions."
        },
        "settings": {
          "type": "object",
          "description": "Gets or sets Json formatted public settings for the extension."
        },
        "protectedSettings": {
          "type": "object",
          "description": "Gets or sets Json formatted protected settings for the extension."
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets or sets the provisioning state, which only appears in the response."
        },
        "instanceView": {
          "$ref": "#/definitions/VirtualMachineExtensionInstanceView",
          "description": "Gets or sets the virtual machine extension instance view."
        }
      },
      "description": "Describes the properties of a Virtual Machine Extension."
    },
    "VirtualMachineProperties": {
      "type": "object",
      "properties": {
        "hardwareProfile": {
          "$ref": "#/definitions/HardwareProfile",
          "description": "Gets or sets the hardware profile."
        },
        "storageProfile": {
          "$ref": "#/definitions/StorageProfile",
          "description": "Gets or sets the storage profile."
        },
        "osProfile": {
          "$ref": "#/definitions/OSProfile",
          "description": "Gets or sets the OS profile."
        },
        "networkProfile": {
          "$ref": "#/definitions/NetworkProfile",
          "description": "Gets or sets the network profile."
        },
        "diagnosticsProfile": {
          "$ref": "#/definitions/DiagnosticsProfile",
          "description": "Gets or sets the diagnostics profile."
        },
        "availabilitySet": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets or sets the reference Id of the availability set to which this virtual machine belongs."
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets or sets the provisioning state, which only appears in the response."
        },
        "licenseType": {
          "type": "string",
          "description": "Gets or sets the license type, which is for bring your own license scenario."
        },
        "vmId": {
          "type": "string",
          "description": "Gets the virtual machine unique id."
        }
      },
      "description": "Describes the properties of a Virtual Machine."
    },
    "VirtualMachineScaleSetExtension": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the extension."
        },
        "properties": {
          "$ref": "#/definitions/VirtualMachineScaleSetExtensionProperties"
        }
      },
      "description": "Describes a Virtual Machine Scale Set Extension."
    },
    "VirtualMachineScaleSetExtensionProfile": {
      "type": "object",
      "properties": {
        "extensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachineScaleSetExtension"
          },
          "description": "Gets the virtual machine scale set child extension resources."
        }
      },
      "description": "Describes a virtual machine scale set extension profile."
    },
    "VirtualMachineScaleSetExtensionProperties": {
      "type": "object",
      "properties": {
        "publisher": {
          "type": "string",
          "description": "Gets or sets the name of the extension handler publisher."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the type of the extension handler."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Gets or sets the type version of the extension handler."
        },
        "autoUpgradeMinorVersion": {
          "type": "boolean",
          "description": "Gets or sets whether the extension handler should be automatically upgraded across minor versions."
        },
        "settings": {
          "type": "object",
          "description": "Gets or sets Json formatted public settings for the extension."
        },
        "protectedSettings": {
          "type": "object",
          "description": "Gets or sets Json formatted protected settings for the extension."
        }
      },
      "description": "Describes the properties of a Virtual Machine Scale Set Extension."
    },
    "VirtualMachineScaleSetIPConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the IP configuration name."
        },
        "properties": {
          "$ref": "#/definitions/VirtualMachineScaleSetIPConfigurationProperties"
        }
      },
      "required": [
        "name"
      ],
      "description": "Describes a virtual machine scale set network profile's IP configuration."
    },
    "VirtualMachineScaleSetIPConfigurationProperties": {
      "type": "object",
      "properties": {
        "subnet": {
          "$ref": "#/definitions/ApiEntityReference",
          "description": "Gets or sets the subnet."
        },
        "applicationGatewayBackendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Gets or sets the application gateway backend address pools."
        },
        "loadBalancerBackendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Gets or sets the load balancer backend address pools."
        },
        "loadBalancerInboundNatPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Gets or sets the load balancer inbound nat pools."
        }
      },
      "required": [
        "subnet"
      ],
      "description": "Describes a virtual machine scale set network profile's IP configuration properties."
    },
    "VirtualMachineScaleSetNetworkConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the network configuration name."
        },
        "properties": {
          "$ref": "#/definitions/VirtualMachineScaleSetNetworkConfigurationProperties"
        }
      },
      "required": [
        "name"
      ],
      "description": "Describes a virtual machine scale set network profile's network configurations."
    },
    "VirtualMachineScaleSetNetworkConfigurationProperties": {
      "type": "object",
      "properties": {
        "primary": {
          "type": "boolean",
          "description": "Gets or sets whether this is a primary NIC on a virtual machine."
        },
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachineScaleSetIPConfiguration"
          },
          "description": "Gets or sets the virtual machine scale set IP Configuration."
        }
      },
      "required": [
        "ipConfigurations"
      ],
      "description": "Describes a virtual machine scale set network profile's IP configuration."
    },
    "VirtualMachineScaleSetNetworkProfile": {
      "type": "object",
      "properties": {
        "networkInterfaceConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachineScaleSetNetworkConfiguration"
          },
          "description": "Gets or sets the list of network configurations."
        }
      },
      "description": "Describes a virtual machine scale set network profile."
    },
    "VirtualMachineScaleSetOSDisk": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the disk name."
        },
        "caching": {
          "type": "string",
          "enum": [
            "None",
            "ReadOnly",
            "ReadWrite"
          ],
          "description": "Gets or sets the caching type. Possible values include: 'None', 'ReadOnly', 'ReadWrite'"
        },
        "createOption": {
          "type": "string",
          "enum": [
            "fromImage",
            "empty",
            "attach"
          ],
          "description": "Gets or sets the create option. Possible values include: 'fromImage', 'empty', 'attach'"
        },
        "osType": {
          "type": "string",
          "enum": [
            "Windows",
            "Linux"
          ],
          "description": "Gets or sets the Operating System type. Possible values include: 'Windows', 'Linux'"
        },
        "image": {
          "$ref": "#/definitions/VirtualHardDisk",
          "description": "Gets or sets the Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine.If SourceImage is provided, the destination VirtualHardDisk should not exist."
        },
        "vhdContainers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the list of virtual hard disk container uris."
        }
      },
      "required": [
        "name",
        "createOption"
      ],
      "description": "Describes a virtual machine scale set operating system disk."
    },
    "VirtualMachineScaleSetOSProfile": {
      "type": "object",
      "properties": {
        "computerNamePrefix": {
          "type": "string",
          "description": "Gets or sets the computer name prefix."
        },
        "adminUsername": {
          "type": "string",
          "description": "Gets or sets the admin user name."
        },
        "adminPassword": {
          "type": "string",
          "description": "Gets or sets the admin user password."
        },
        "customData": {
          "type": "string",
          "description": "Gets or sets a base-64 encoded string of custom data."
        },
        "windowsConfiguration": {
          "$ref": "#/definitions/WindowsConfiguration",
          "description": "Gets or sets the Windows Configuration of the OS profile."
        },
        "linuxConfiguration": {
          "$ref": "#/definitions/LinuxConfiguration",
          "description": "Gets or sets the Linux Configuration of the OS profile."
        },
        "secrets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VaultSecretGroup"
          },
          "description": "Gets or sets the List of certificates for addition to the VM."
        }
      },
      "description": "Describes a virtual machine scale set OS profile."
    },
    "VirtualMachineScaleSetProperties": {
      "type": "object",
      "properties": {
        "upgradePolicy": {
          "$ref": "#/definitions/UpgradePolicy",
          "description": "Gets or sets the upgrade policy."
        },
        "virtualMachineProfile": {
          "$ref": "#/definitions/VirtualMachineScaleSetVMProfile",
          "description": "Gets or sets the virtual machine profile."
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets or sets the provisioning state, which only appears in the response."
        },
        "overProvision": {
          "type": "boolean",
          "description": "Specifies whether the Virtual Machine Scale Set should be overprovisioned."
        }
      },
      "description": "Describes the properties of a Virtual Machine Scale Set."
    },
    "VirtualMachineScaleSetStorageProfile": {
      "type": "object",
      "properties": {
        "imageReference": {
          "$ref": "#/definitions/ImageReference",
          "description": "Gets or sets the image reference."
        },
        "osDisk": {
          "$ref": "#/definitions/VirtualMachineScaleSetOSDisk",
          "description": "Gets or sets the OS disk."
        }
      },
      "description": "Describes a virtual machine scale set storage profile."
    },
    "VirtualMachineScaleSetVMProfile": {
      "type": "object",
      "properties": {
        "osProfile": {
          "$ref": "#/definitions/VirtualMachineScaleSetOSProfile",
          "description": "Gets or sets the virtual machine scale set OS profile."
        },
        "storageProfile": {
          "$ref": "#/definitions/VirtualMachineScaleSetStorageProfile",
          "description": "Gets or sets the virtual machine scale set storage profile."
        },
        "networkProfile": {
          "$ref": "#/definitions/VirtualMachineScaleSetNetworkProfile",
          "description": "Gets or sets the virtual machine scale set network profile."
        },
        "extensionProfile": {
          "$ref": "#/definitions/VirtualMachineScaleSetExtensionProfile",
          "description": "Gets the virtual machine scale set extension profile."
        }
      },
      "description": "Describes a virtual machine scale set virtual machine profile."
    },
    "WindowsConfiguration": {
      "type": "object",
      "properties": {
        "provisionVMAgent": {
          "type": "boolean",
          "description": "Gets or sets whether VM Agent should be provisioned on the Virtual Machine."
        },
        "enableAutomaticUpdates": {
          "type": "boolean",
          "description": "Gets or sets whether Windows updates are automatically installed on the VM"
        },
        "timeZone": {
          "type": "string",
          "description": "Gets or sets the Time Zone of the VM"
        },
        "additionalUnattendContent": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalUnattendContent"
          },
          "description": "Gets or sets the additional base-64 encoded XML formatted information that can be included in the Unattend.xml file."
        },
        "winRM": {
          "$ref": "#/definitions/WinRMConfiguration",
          "description": "Gets or sets the Windows Remote Management configuration of the VM"
        }
      },
      "description": "Describes Windows Configuration of the OS Profile."
    },
    "WinRMConfiguration": {
      "type": "object",
      "properties": {
        "listeners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WinRMListener"
          },
          "description": "Gets or sets the list of Windows Remote Management listeners"
        }
      },
      "description": "Describes Windows Remote Management configuration of the VM"
    },
    "WinRMListener": {
      "type": "object",
      "properties": {
        "protocol": {
          "type": "string",
          "enum": [
            "Http",
            "Https"
          ],
          "description": "Gets or sets the Protocol used by WinRM listener. Currently only Http and Https are supported. Possible values include: 'Http', 'Https'"
        },
        "certificateUrl": {
          "type": "string",
          "description": "Gets or sets the Certificate URL in KMS for Https listeners. Should be null for Http listeners."
        }
      },
      "description": "Describes Protocol and thumbprint of Windows Remote Management listener"
    }
  }
}
