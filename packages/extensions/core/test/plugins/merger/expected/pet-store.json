{
  "openapi": "3.0.0",
  "info": {
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-ms-metadata": {
      "merged": true,
      "apiVersions": [
        "1.0.0",
        "1.0.2"
      ]
    },
    "title": "Swagger Petstore",
    "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "pet",
      "description": "Everything about your Pets",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "store",
      "description": "Access to Petstore orders"
    },
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "pet",
      "description": "v1.0.2 -Everything about your Pets",
      "externalDocs": {
        "description": "v1.0.2 -Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "store",
      "description": "v1.0.2 -Access to Petstore orders"
    },
    {
      "name": "user",
      "description": "v1.0.2 -Operations about user",
      "externalDocs": {
        "description": "v1.0.2 -Find out more about our store",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "path:0": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/pet",
        "originalLocations": [
          "pet-store/input.json#/paths/~1pet"
        ]
      }
    },
    "path:0.post": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/pet",
        "originalLocations": [
          "pet-store/input.json#/paths/~1pet"
        ]
      },
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Add a new pet to the store",
        "description": "",
        "operationId": "addPet",
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
          "x-ms-requestBody-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schemas:4"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/schemas:4"
              }
            }
          },
          "description": "Pet object that needs to be added to the store",
          "required": true
        },
        "x-ms-requestBody-index": 0
      }
    },
    "path:0.put": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/pet",
        "originalLocations": [
          "pet-store/input.json#/paths/~1pet"
        ]
      },
      "put": {
        "tags": [
          "pet"
        ],
        "summary": "Update an existing pet",
        "description": "",
        "operationId": "updatePet",
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
          "x-ms-requestBody-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schemas:4"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/schemas:4"
              }
            }
          },
          "description": "Pet object that needs to be added to the store",
          "required": true
        },
        "x-ms-requestBody-index": 0
      }
    },
    "path:1": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/pet/findByStatus",
        "originalLocations": [
          "pet-store/input.json#/paths/~1pet~1findByStatus"
        ]
      }
    },
    "path:1.get": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/pet/findByStatus",
        "originalLocations": [
          "pet-store/input.json#/paths/~1pet~1findByStatus"
        ]
      },
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "Finds Pets by status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "findPetsByStatus",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "available",
                  "pending",
                  "sold"
                ],
                "default": "available"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/schemas:4"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/schemas:4"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "path:2": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/pet/findByTags",
        "originalLocations": [
          "pet-store/input.json#/paths/~1pet~1findByTags"
        ]
      }
    },
    "path:2.get": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/pet/findByTags",
        "originalLocations": [
          "pet-store/input.json#/paths/~1pet~1findByTags"
        ]
      },
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "Finds Pets by tags",
        "description": "Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
        "operationId": "findPetsByTags",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "Tags to filter by",
            "required": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/schemas:4"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/schemas:4"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "path:3": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/pet/{petId}",
        "originalLocations": [
          "pet-store/input.json#/paths/~1pet~1{petId}"
        ]
      }
    },
    "path:3.get": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/pet/{petId}",
        "originalLocations": [
          "pet-store/input.json#/paths/~1pet~1{petId}"
        ]
      },
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "Find pet by ID",
        "description": "Returns a single pet",
        "operationId": "getPetById",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:4"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:4"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "path:3.post": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/pet/{petId}",
        "originalLocations": [
          "pet-store/input.json#/paths/~1pet~1{petId}"
        ]
      },
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Updates a pet in the store with form data",
        "description": "",
        "operationId": "updatePetWithForm",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
          "x-ms-requestBody-name": "status",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Updated name of the pet",
                    "type": "string"
                  },
                  "status": {
                    "description": "Updated status of the pet",
                    "type": "string"
                  }
                },
                "required": []
              }
            }
          }
        },
        "x-ms-requestBody-index": 2
      }
    },
    "path:3.delete": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/pet/{petId}",
        "originalLocations": [
          "pet-store/input.json#/paths/~1pet~1{petId}"
        ]
      },
      "delete": {
        "tags": [
          "pet"
        ],
        "summary": "Deletes a pet",
        "description": "",
        "operationId": "deletePet",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "petId",
            "in": "path",
            "description": "Pet id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "path:4": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/pet/{petId}/uploadImage",
        "originalLocations": [
          "pet-store/input.json#/paths/~1pet~1{petId}~1uploadImage"
        ]
      }
    },
    "path:4.post": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/pet/{petId}/uploadImage",
        "originalLocations": [
          "pet-store/input.json#/paths/~1pet~1{petId}~1uploadImage"
        ]
      },
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "uploads an image",
        "description": "",
        "operationId": "uploadFile",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:5"
                }
              }
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
          "x-ms-requestBody-name": "file",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "additionalMetadata": {
                    "description": "Additional data to pass to server",
                    "type": "string"
                  },
                  "file": {
                    "description": "file to upload",
                    "type": "file"
                  }
                },
                "required": []
              }
            }
          }
        },
        "x-ms-requestBody-index": 2
      }
    },
    "path:5": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/store/inventory",
        "originalLocations": [
          "pet-store/input.json#/paths/~1store~1inventory"
        ]
      }
    },
    "path:5.get": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/store/inventory",
        "originalLocations": [
          "pet-store/input.json#/paths/~1store~1inventory"
        ]
      },
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Returns pet inventories by status",
        "description": "Returns a map of status codes to quantities",
        "operationId": "getInventory",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "path:6": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/store/order",
        "originalLocations": [
          "pet-store/input.json#/paths/~1store~1order"
        ]
      }
    },
    "path:6.post": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/store/order",
        "originalLocations": [
          "pet-store/input.json#/paths/~1store~1order"
        ]
      },
      "post": {
        "tags": [
          "store"
        ],
        "summary": "Place an order for a pet",
        "description": "",
        "operationId": "placeOrder",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:0"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:0"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Order"
          }
        },
        "requestBody": {
          "x-ms-requestBody-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schemas:0"
              }
            }
          },
          "description": "order placed for purchasing the pet",
          "required": true
        },
        "x-ms-requestBody-index": 0
      }
    },
    "path:7": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/store/order/{orderId}",
        "originalLocations": [
          "pet-store/input.json#/paths/~1store~1order~1{orderId}"
        ]
      }
    },
    "path:7.get": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/store/order/{orderId}",
        "originalLocations": [
          "pet-store/input.json#/paths/~1store~1order~1{orderId}"
        ]
      },
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Find purchase order by ID",
        "description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
        "operationId": "getOrderById",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of pet that needs to be fetched",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:0"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:0"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "path:7.delete": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/store/order/{orderId}",
        "originalLocations": [
          "pet-store/input.json#/paths/~1store~1order~1{orderId}"
        ]
      },
      "delete": {
        "tags": [
          "store"
        ],
        "summary": "Delete purchase order by ID",
        "description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of the order that needs to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "path:8": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/user",
        "originalLocations": [
          "pet-store/input.json#/paths/~1user"
        ]
      }
    },
    "path:8.post": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/user",
        "originalLocations": [
          "pet-store/input.json#/paths/~1user"
        ]
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "x-ms-requestBody-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schemas:2"
              }
            }
          },
          "description": "Created user object",
          "required": true
        },
        "x-ms-requestBody-index": 0
      }
    },
    "path:9": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/user/createWithArray",
        "originalLocations": [
          "pet-store/input.json#/paths/~1user~1createWithArray"
        ]
      }
    },
    "path:9.post": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/user/createWithArray",
        "originalLocations": [
          "pet-store/input.json#/paths/~1user~1createWithArray"
        ]
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates list of users with given input array",
        "description": "",
        "operationId": "createUsersWithArrayInput",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "x-ms-requestBody-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schemas:2"
                }
              }
            }
          },
          "description": "List of user object",
          "required": true
        },
        "x-ms-requestBody-index": 0
      }
    },
    "path:10": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/user/createWithList",
        "originalLocations": [
          "pet-store/input.json#/paths/~1user~1createWithList"
        ]
      }
    },
    "path:10.post": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/user/createWithList",
        "originalLocations": [
          "pet-store/input.json#/paths/~1user~1createWithList"
        ]
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates list of users with given input array",
        "description": "",
        "operationId": "createUsersWithListInput",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "x-ms-requestBody-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schemas:2"
                }
              }
            }
          },
          "description": "List of user object",
          "required": true
        },
        "x-ms-requestBody-index": 0
      }
    },
    "path:11": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/user/login",
        "originalLocations": [
          "pet-store/input.json#/paths/~1user~1login"
        ]
      }
    },
    "path:11.get": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/user/login",
        "originalLocations": [
          "pet-store/input.json#/paths/~1user~1login"
        ]
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "schema": {
              "type": "string",
              "format": "password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "path:12": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/user/logout",
        "originalLocations": [
          "pet-store/input.json#/paths/~1user~1logout"
        ]
      }
    },
    "path:12.get": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/user/logout",
        "originalLocations": [
          "pet-store/input.json#/paths/~1user~1logout"
        ]
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "path:13": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/user/{username}",
        "originalLocations": [
          "pet-store/input.json#/paths/~1user~1{username}"
        ]
      }
    },
    "path:13.get": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/user/{username}",
        "originalLocations": [
          "pet-store/input.json#/paths/~1user~1{username}"
        ]
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "getUserByName",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:2"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "path:13.put": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/user/{username}",
        "originalLocations": [
          "pet-store/input.json#/paths/~1user~1{username}"
        ]
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "requestBody": {
          "x-ms-requestBody-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schemas:2"
              }
            }
          },
          "description": "Updated user object",
          "required": true
        },
        "x-ms-requestBody-index": 1
      }
    },
    "path:13.delete": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.0"
        ],
        "filename": [
          "mem://pet-store/input.json"
        ],
        "path": "/user/{username}",
        "originalLocations": [
          "pet-store/input.json#/paths/~1user~1{username}"
        ]
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "path:14": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/pet",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1pet"
        ]
      }
    },
    "path:14.post": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/pet",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1pet"
        ]
      },
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Add a new pet to the store",
        "description": "v1.0.2 -",
        "operationId": "addPet",
        "responses": {
          "405": {
            "description": "v1.0.2 -Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
          "x-ms-requestBody-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schemas:10"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/schemas:10"
              }
            }
          },
          "description": "v1.0.2 -Pet object that needs to be added to the store",
          "required": true
        },
        "x-ms-requestBody-index": 0
      }
    },
    "path:14.put": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/pet",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1pet"
        ]
      },
      "put": {
        "tags": [
          "pet"
        ],
        "summary": "Update an existing pet",
        "description": "v1.0.2 -",
        "operationId": "updatePet",
        "responses": {
          "400": {
            "description": "v1.0.2 -Invalid ID supplied"
          },
          "404": {
            "description": "v1.0.2 -Pet not found"
          },
          "405": {
            "description": "v1.0.2 -Validation exception"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
          "x-ms-requestBody-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schemas:10"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/schemas:10"
              }
            }
          },
          "description": "v1.0.2 -Pet object that needs to be added to the store",
          "required": true
        },
        "x-ms-requestBody-index": 0
      }
    },
    "path:15": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/pet/findByStatus",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1pet~1findByStatus"
        ]
      }
    },
    "path:15.get": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/pet/findByStatus",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1pet~1findByStatus"
        ]
      },
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "Finds Pets by status",
        "description": "v1.0.2 -Multiple status values can be provided with comma separated strings",
        "operationId": "findPetsByStatus",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "v1.0.2 -Status values that need to be considered for filter",
            "required": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "available",
                  "pending",
                  "sold"
                ],
                "default": "available"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "v1.0.2 -successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/schemas:10"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/schemas:10"
                  }
                }
              }
            }
          },
          "400": {
            "description": "v1.0.2 -Invalid status value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "path:16": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/pet/findByTags",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1pet~1findByTags"
        ]
      }
    },
    "path:16.get": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/pet/findByTags",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1pet~1findByTags"
        ]
      },
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "Finds Pets by tags",
        "description": "v1.0.2 -Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
        "operationId": "findPetsByTags",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "v1.0.2 -Tags to filter by",
            "required": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "v1.0.2 -successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/schemas:10"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/schemas:10"
                  }
                }
              }
            }
          },
          "400": {
            "description": "v1.0.2 -Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "path:17": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/pet/{petId}",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1pet~1{petId}"
        ]
      }
    },
    "path:17.get": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/pet/{petId}",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1pet~1{petId}"
        ]
      },
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "Find pet by ID",
        "description": "v1.0.2 -Returns a single pet",
        "operationId": "getPetById",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "v1.0.2 -ID of pet to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "v1.0.2 -successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:10"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:10"
                }
              }
            }
          },
          "400": {
            "description": "v1.0.2 -Invalid ID supplied"
          },
          "404": {
            "description": "v1.0.2 -Pet not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "path:17.post": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/pet/{petId}",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1pet~1{petId}"
        ]
      },
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Updates a pet in the store with form data",
        "description": "v1.0.2 -",
        "operationId": "updatePetWithForm",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "v1.0.2 -ID of pet that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "v1.0.2 -Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
          "x-ms-requestBody-name": "status",
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "v1.0.2 -Updated name of the pet",
                    "type": "string"
                  },
                  "status": {
                    "description": "v1.0.2 -Updated status of the pet",
                    "type": "string"
                  }
                },
                "required": []
              }
            }
          }
        },
        "x-ms-requestBody-index": 2
      }
    },
    "path:17.delete": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/pet/{petId}",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1pet~1{petId}"
        ]
      },
      "delete": {
        "tags": [
          "pet"
        ],
        "summary": "Deletes a pet",
        "description": "v1.0.2 -",
        "operationId": "deletePet",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "petId",
            "in": "path",
            "description": "v1.0.2 -Pet id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "v1.0.2 -Invalid ID supplied"
          },
          "404": {
            "description": "v1.0.2 -Pet not found"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "path:18": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/pet/{petId}/uploadImage",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1pet~1{petId}~1uploadImage"
        ]
      }
    },
    "path:18.post": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/pet/{petId}/uploadImage",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1pet~1{petId}~1uploadImage"
        ]
      },
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "uploads an image",
        "description": "v1.0.2 -",
        "operationId": "uploadFile",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "v1.0.2 -ID of pet to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "v1.0.2 -successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:11"
                }
              }
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
          "x-ms-requestBody-name": "file",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "additionalMetadata": {
                    "description": "v1.0.2 -Additional data to pass to server",
                    "type": "string"
                  },
                  "file": {
                    "description": "v1.0.2 -file to upload",
                    "type": "file"
                  }
                },
                "required": []
              }
            }
          }
        },
        "x-ms-requestBody-index": 2
      }
    },
    "path:19": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/store/inventory",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1store~1inventory"
        ]
      }
    },
    "path:19.get": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/store/inventory",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1store~1inventory"
        ]
      },
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Returns pet inventories by status",
        "description": "v1.0.2 -Returns a map of status codes to quantities",
        "operationId": "getInventory",
        "responses": {
          "200": {
            "description": "v1.0.2 -successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "path:20": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/store/order",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1store~1order"
        ]
      }
    },
    "path:20.post": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/store/order",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1store~1order"
        ]
      },
      "post": {
        "tags": [
          "store"
        ],
        "summary": "Place an order for a pet",
        "description": "v1.0.2 -",
        "operationId": "placeOrder",
        "responses": {
          "200": {
            "description": "v1.0.2 -successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:6"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:6"
                }
              }
            }
          },
          "400": {
            "description": "v1.0.2 -Invalid Order"
          }
        },
        "requestBody": {
          "x-ms-requestBody-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schemas:6"
              }
            }
          },
          "description": "v1.0.2 -order placed for purchasing the pet",
          "required": true
        },
        "x-ms-requestBody-index": 0
      }
    },
    "path:21": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/store/order/{orderId}",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1store~1order~1{orderId}"
        ]
      }
    },
    "path:21.get": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/store/order/{orderId}",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1store~1order~1{orderId}"
        ]
      },
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Find purchase order by ID",
        "description": "v1.0.2 -For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
        "operationId": "getOrderById",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "v1.0.2 -ID of pet that needs to be fetched",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "v1.0.2 -successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:6"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:6"
                }
              }
            }
          },
          "400": {
            "description": "v1.0.2 -Invalid ID supplied"
          },
          "404": {
            "description": "v1.0.2 -Order not found"
          }
        }
      }
    },
    "path:21.delete": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/store/order/{orderId}",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1store~1order~1{orderId}"
        ]
      },
      "delete": {
        "tags": [
          "store"
        ],
        "summary": "Delete purchase order by ID",
        "description": "v1.0.2 -For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "v1.0.2 -ID of the order that needs to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "400": {
            "description": "v1.0.2 -Invalid ID supplied"
          },
          "404": {
            "description": "v1.0.2 -Order not found"
          }
        }
      }
    },
    "path:22": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/user",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1user"
        ]
      }
    },
    "path:22.post": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/user",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1user"
        ]
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "v1.0.2 -This can only be done by the logged in user.",
        "operationId": "createUser",
        "responses": {
          "default": {
            "description": "v1.0.2 -successful operation"
          }
        },
        "requestBody": {
          "x-ms-requestBody-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schemas:8"
              }
            }
          },
          "description": "v1.0.2 -Created user object",
          "required": true
        },
        "x-ms-requestBody-index": 0
      }
    },
    "path:23": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/user/createWithArray",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1user~1createWithArray"
        ]
      }
    },
    "path:23.post": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/user/createWithArray",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1user~1createWithArray"
        ]
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates list of users with given input array",
        "description": "v1.0.2 -",
        "operationId": "createUsersWithArrayInput",
        "responses": {
          "default": {
            "description": "v1.0.2 -successful operation"
          }
        },
        "requestBody": {
          "x-ms-requestBody-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schemas:8"
                }
              }
            }
          },
          "description": "v1.0.2 -List of user object",
          "required": true
        },
        "x-ms-requestBody-index": 0
      }
    },
    "path:24": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/user/createWithList",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1user~1createWithList"
        ]
      }
    },
    "path:24.post": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/user/createWithList",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1user~1createWithList"
        ]
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates list of users with given input array",
        "description": "v1.0.2 -",
        "operationId": "createUsersWithListInput",
        "responses": {
          "default": {
            "description": "v1.0.2 -successful operation"
          }
        },
        "requestBody": {
          "x-ms-requestBody-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schemas:8"
                }
              }
            }
          },
          "description": "v1.0.2 -List of user object",
          "required": true
        },
        "x-ms-requestBody-index": 0
      }
    },
    "path:25": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/user/login",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1user~1login"
        ]
      }
    },
    "path:25.get": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/user/login",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1user~1login"
        ]
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "v1.0.2 -",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "v1.0.2 -The user name for login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "v1.0.2 -The password for login in clear text",
            "required": true,
            "schema": {
              "type": "string",
              "format": "password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "v1.0.2 -successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "v1.0.2 -calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "v1.0.2 -date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "v1.0.2 -Invalid username/password supplied"
          }
        }
      }
    },
    "path:26": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/user/logout",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1user~1logout"
        ]
      }
    },
    "path:26.get": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/user/logout",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1user~1logout"
        ]
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "v1.0.2 -",
        "operationId": "logoutUser",
        "responses": {
          "default": {
            "description": "v1.0.2 -successful operation"
          }
        }
      }
    },
    "path:27": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/user/{username}",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1user~1{username}"
        ]
      }
    },
    "path:27.get": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/user/{username}",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1user~1{username}"
        ]
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user name",
        "description": "v1.0.2 -",
        "operationId": "getUserByName",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "v1.0.2 -The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "v1.0.2 -successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:8"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schemas:8"
                }
              }
            }
          },
          "400": {
            "description": "v1.0.2 -Invalid username supplied"
          },
          "404": {
            "description": "v1.0.2 -User not found"
          }
        }
      }
    },
    "path:27.put": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/user/{username}",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1user~1{username}"
        ]
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Updated user",
        "description": "v1.0.2 -This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "v1.0.2 -name that need to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "v1.0.2 -Invalid user supplied"
          },
          "404": {
            "description": "v1.0.2 -User not found"
          }
        },
        "requestBody": {
          "x-ms-requestBody-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schemas:8"
              }
            }
          },
          "description": "v1.0.2 -Updated user object",
          "required": true
        },
        "x-ms-requestBody-index": 1
      }
    },
    "path:27.delete": {
      "x-ms-metadata": {
        "apiVersions": [
          "1.0.2"
        ],
        "filename": [
          "mem://pet-store/input2.json"
        ],
        "path": "/user/{username}",
        "originalLocations": [
          "pet-store/input2.json#/paths/~1user~1{username}"
        ]
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "v1.0.2 -This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "v1.0.2 -The name that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "v1.0.2 -Invalid username supplied"
          },
          "404": {
            "description": "v1.0.2 -User not found"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io",
    "x-ms-metadata": [
      {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
      },
      {
        "description": "v1.0.2 -Find out more about Swagger",
        "url": "http://swagger.io"
      }
    ]
  },
  "servers": [
    {
      "url": "http://petstore.swagger.io/v2"
    },
    {
      "url": "http://petstore.swagger.io/v2"
    }
  ],
  "components": {
    "securitySchemes": {
      "securitySchemes:0": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.0"
          ],
          "filename": [
            "mem://pet-store/input.json"
          ],
          "name": "petstore_auth",
          "originalLocations": [
            "pet-store/input.json#/components/securitySchemes/petstore_auth"
          ],
          "x-ms-secondary-file": false
        },
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "securitySchemes:1": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.0"
          ],
          "filename": [
            "mem://pet-store/input.json"
          ],
          "name": "api_key",
          "originalLocations": [
            "pet-store/input.json#/components/securitySchemes/api_key"
          ],
          "x-ms-secondary-file": false
        },
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      },
      "securitySchemes:2": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.2"
          ],
          "filename": [
            "mem://pet-store/input2.json"
          ],
          "name": "petstore_auth",
          "originalLocations": [
            "pet-store/input2.json#/components/securitySchemes/petstore_auth"
          ],
          "x-ms-secondary-file": false
        },
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "securitySchemes:3": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.2"
          ],
          "filename": [
            "mem://pet-store/input2.json"
          ],
          "name": "api_key",
          "originalLocations": [
            "pet-store/input2.json#/components/securitySchemes/api_key"
          ],
          "x-ms-secondary-file": false
        },
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    },
    "schemas": {
      "schemas:0": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.0"
          ],
          "filename": [
            "mem://pet-store/input.json"
          ],
          "name": "Order",
          "originalLocations": [
            "pet-store/input.json#/components/schemas/Order"
          ],
          "x-ms-secondary-file": false
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "petId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "complete": {
            "type": "boolean",
            "default": false
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "schemas:1": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.0"
          ],
          "filename": [
            "mem://pet-store/input.json"
          ],
          "name": "Category",
          "originalLocations": [
            "pet-store/input.json#/components/schemas/Category"
          ],
          "x-ms-secondary-file": false
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Category"
        }
      },
      "schemas:2": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.0"
          ],
          "filename": [
            "mem://pet-store/input.json"
          ],
          "name": "User",
          "originalLocations": [
            "pet-store/input.json#/components/schemas/User"
          ],
          "x-ms-secondary-file": false
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "format": "int32",
            "description": "User Status"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "schemas:3": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.0"
          ],
          "filename": [
            "mem://pet-store/input.json"
          ],
          "name": "Tag",
          "originalLocations": [
            "pet-store/input.json#/components/schemas/Tag"
          ],
          "x-ms-secondary-file": false
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Tag"
        }
      },
      "schemas:4": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.0"
          ],
          "filename": [
            "mem://pet-store/input.json"
          ],
          "name": "Pet",
          "originalLocations": [
            "pet-store/input.json#/components/schemas/Pet"
          ],
          "x-ms-secondary-file": false
        },
        "type": "object",
        "required": [
          "name",
          "photoUrls"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "$ref": "#/components/schemas/schemas:1"
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true
            },
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/schemas:3"
            }
          },
          "status": {
            "type": "string",
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml": {
          "name": "Pet"
        }
      },
      "schemas:5": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.0"
          ],
          "filename": [
            "mem://pet-store/input.json"
          ],
          "name": "ApiResponse",
          "originalLocations": [
            "pet-store/input.json#/components/schemas/ApiResponse"
          ],
          "x-ms-secondary-file": false
        },
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "schemas:6": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.2"
          ],
          "filename": [
            "mem://pet-store/input2.json"
          ],
          "name": "Order",
          "originalLocations": [
            "pet-store/input2.json#/components/schemas/Order"
          ],
          "x-ms-secondary-file": false
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "petId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "v1.0.2 -This is the Order Status description for api 1.0.2",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "complete": {
            "type": "boolean",
            "default": false
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "schemas:7": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.2"
          ],
          "filename": [
            "mem://pet-store/input2.json"
          ],
          "name": "Category",
          "originalLocations": [
            "pet-store/input2.json#/components/schemas/Category"
          ],
          "x-ms-secondary-file": false
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Category"
        }
      },
      "schemas:8": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.2"
          ],
          "filename": [
            "mem://pet-store/input2.json"
          ],
          "name": "User",
          "originalLocations": [
            "pet-store/input2.json#/components/schemas/User"
          ],
          "x-ms-secondary-file": false
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "format": "int32",
            "description": "v1.0.2 -This is the User Status for version 1.0.2"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "schemas:9": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.2"
          ],
          "filename": [
            "mem://pet-store/input2.json"
          ],
          "name": "Tag",
          "originalLocations": [
            "pet-store/input2.json#/components/schemas/Tag"
          ],
          "x-ms-secondary-file": false
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Tag"
        }
      },
      "schemas:10": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.2"
          ],
          "filename": [
            "mem://pet-store/input2.json"
          ],
          "name": "Pet",
          "originalLocations": [
            "pet-store/input2.json#/components/schemas/Pet"
          ],
          "x-ms-secondary-file": false
        },
        "type": "object",
        "required": [
          "name",
          "photoUrls"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "$ref": "#/components/schemas/schemas:7"
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true
            },
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/schemas:9"
            }
          },
          "status": {
            "type": "string",
            "description": "v1.0.2 -this is the pet status in the store for version 1.0.2",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml": {
          "name": "Pet"
        }
      },
      "schemas:11": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.2"
          ],
          "filename": [
            "mem://pet-store/input2.json"
          ],
          "name": "ApiResponse",
          "originalLocations": [
            "pet-store/input2.json#/components/schemas/ApiResponse"
          ],
          "x-ms-secondary-file": false
        },
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}