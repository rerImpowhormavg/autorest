buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
    }
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'checkstyle'

group = 'com.microsoft.rest'
version = '1.0.0-SNAPSHOT'

checkstyle {
    toolVersion = "6.9"
    configFile = new File("$rootDir/Tools/checkstyle/checkstyle.xml")
    configProperties = [samedir: "$rootDir/Tools/checkstyle"]
    reportsDir = new File("$rootDir/Tools/checkstyle/reports")
}

dependencies {
    compile 'com.google.guava:guava:18.0'
    compile 'com.squareup.retrofit:retrofit:2.0.0-beta2'
    compile 'com.squareup.okhttp:okhttp:2.6.0'
    compile 'com.squareup.okhttp:logging-interceptor:2.6.0'
    compile 'com.squareup.retrofit:converter-jackson:2.0.0-beta2'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.7.0'
    testCompile 'junit:junit:4.11'
    testCompile 'junit:junit-dep:4.11'
}

uploadArchives {
    repositories {
        mavenDeployer {
            pom.setArtifactId "client-runtime"
            pom.project {
                name 'Microsoft AutoRest Runtime for Java'
                description 'This is the client runtime for AutoRest generated Java clients.'
            }
        }
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardError"
    }
}

javadoc {
    options.encoding = 'UTF-8'
}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

test {
    reports.getHtml()
    reports.html.destination = file("${projectDir}/../../../TestResults/JavaRuntime")
}

tasks.compileJava.dependsOn 'clean'