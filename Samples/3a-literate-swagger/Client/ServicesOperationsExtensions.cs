// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ServicesOperations.
    /// </summary>
    public static partial class ServicesOperationsExtensions
    {
            /// <summary>
            /// Creates or updates a Search service in the given resource group.
            /// If the Search service already exists, all properties will be updated with
            /// the given values.
            /// <see href="https://msdn.microsoft.com/library/azure/dn832687.aspx" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the current subscription.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Search service to operate on.
            /// </param>
            /// <param name='parameters'>
            /// The properties to set or update on the Search service.
            /// </param>
            public static SearchServiceResource CreateOrUpdate(this IServicesOperations operations, string resourceGroupName, string serviceName, SearchServiceCreateOrUpdateParameters parameters)
            {
                return operations.CreateOrUpdateAsync(resourceGroupName, serviceName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a Search service in the given resource group.
            /// If the Search service already exists, all properties will be updated with
            /// the given values.
            /// <see href="https://msdn.microsoft.com/library/azure/dn832687.aspx" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the current subscription.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Search service to operate on.
            /// </param>
            /// <param name='parameters'>
            /// The properties to set or update on the Search service.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SearchServiceResource> CreateOrUpdateAsync(this IServicesOperations operations, string resourceGroupName, string serviceName, SearchServiceCreateOrUpdateParameters parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(resourceGroupName, serviceName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a Search service in the given resource group, along with its
            /// associated resources.
            /// <see href="https://msdn.microsoft.com/library/azure/dn832692.aspx" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the current subscription.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Search service to operate on.
            /// </param>
            public static void Delete(this IServicesOperations operations, string resourceGroupName, string serviceName)
            {
                operations.DeleteAsync(resourceGroupName, serviceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a Search service in the given resource group, along with its
            /// associated resources.
            /// <see href="https://msdn.microsoft.com/library/azure/dn832692.aspx" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the current subscription.
            /// </param>
            /// <param name='serviceName'>
            /// The name of the Search service to operate on.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IServicesOperations operations, string resourceGroupName, string serviceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(resourceGroupName, serviceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Returns a list of all Search services in the given resource group.
            /// <see href="https://msdn.microsoft.com/library/azure/dn832688.aspx" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the current subscription.
            /// </param>
            public static SearchServiceListResult List(this IServicesOperations operations, string resourceGroupName)
            {
                return operations.ListAsync(resourceGroupName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Returns a list of all Search services in the given resource group.
            /// <see href="https://msdn.microsoft.com/library/azure/dn832688.aspx" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group within the current subscription.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SearchServiceListResult> ListAsync(this IServicesOperations operations, string resourceGroupName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
