  "content": "---\ndirective:\n  - from: swagger-document\n    where: $.definitions.*.additionalProperties\n    transform: |\n      return typeof $ === \"boolean\"\n        ? ($ ? { type: \"object\" } : undefined)\n        : $\n    reason: polyfill\n  - from: openapi-document\n    where: $.definitions.*.additionalProperties\n    transform: |\n      return typeof $ === \"boolean\"\n        ? ($ ? { type: \"object\" } : undefined)\n        : $\n    reason: polyfill\n  - from: swagger-document\n    where: >-\n      $..*[?(typeof @.modelAsString === \"boolean\" && typeof @.oldModelAsString\n      !== \"boolean\")]\n    transform: $.oldModelAsString = $.modelAsString\ninput-file:\n  - tiny.yaml\noutput-artifact:\n  - configuration.yaml\n  - preserved-files\n  - source-file-csharp\n  - source-file-jsonrpcclient\nrequire:\n  - >-\n    autorest-core/resources//plugin-azureresourceschema.md\n  - autorest-core/resources//directives.md'\n  - >-\n    autorest-core/resources//pipeline-merger.md\n  - >-\n    autorest-core/resources//pipeline-composer.md\n  - >-\n    autorest-core/resources//pipeline-tree-shaker.md\n  - >-\n    autorest-core/resources//loader-openapi2.md\n  - >-\n    autorest-core/resources//loader-openapi3.md\n  - >-\n    autorest-core/resources//markdown-documentation.md\n  - autorest-core/resources//miscellaneous.md'\n  - autorest-core/resources//patches.md'\n  - autorest-core/resources//plugin-csharp.md'\n  - autorest-core/resources//plugin-go.md'\n  - autorest-core/resources//plugin-java.md'\n  - autorest-core/resources//plugin-nodejs.md'\n  - autorest-core/resources//plugin-php.md'\n  - autorest-core/resources//plugin-python.md'\n  - autorest-core/resources//plugin-ruby.md'\n  - >-\n    autorest-core/resources//plugin-typescript.md\n  - >-\n    autorest-core/resources//plugin-validators.md\n  - autorest-core/resources//graphs.md'\n  - >-\n    autorest-core/resources//help-configuration.md\ntry-require:\n  - readme.clear-output-folder.md\n  - readme.no-upgrade-check.md\n  - readme.skip-upgrade-check.md\n  - ./readme.csharp.md\nuse: []\nclear-output-folder: {}\nversion: autorest-core\nno-upgrade-check: {}\nskip-upgrade-check: {}\noutput-folder: 'stdout://'\nmessage-format: json\ncsharp: true\ninfo: yaml\nazure-arm: false\nopenapi-type: arm\nuse-extension:\n  '@microsoft.azure/autorest.csharp': ~2.3.79\n  '@microsoft.azure/autorest.modeler': 2.3.55\nperform-load: true\ndeclare-directive:\n  set: '{ transform: return ${JSON.stringify($)} }'\n  where-operation: |-\n    (() => {\n      switch ($context.from) {\n        case \"code-model-v1\":\n          return { from: \"code-model-v1\", where: $.operations[*].methods[?(@.serializedName == ${JSON.stringify($)})] };\n        case \"swagger-document\":\n        default:\n          return { from: \"swagger-document\", where: $.paths.*[?(@.operationId == ${JSON.stringify($)})] };\n      }\n    })()\n  where-model: |-\n    (() => {\n      switch ($context.from) {\n        case \"code-model-v1\":\n          throw \"not implemented\";\n        case \"swagger-document\":\n        default:\n          return { from: \"swagger-document\", where: $.definitions[${JSON.stringify($)}] };\n      }\n    })()\n  remove-operation: |-\n    {\n      from: 'swagger-document',\n      \"where-operation\": $,\n      transform: 'return undefined'\n    }\n  rename-operation: |-\n    {\n      from: 'swagger-document',\n      \"where-operation\": $.from,\n      transform: $.operationId = ${JSON.stringify($.to)}\n    }\n  remove-model: |-\n    {\n      from: 'swagger-document',\n      \"where-model\": $,\n      transform: 'return undefined'\n    }\n  rename-model: |-\n    [{\n      from: 'swagger-document',\n      where: '$.definitions',\n      transform: if ($[${JSON.stringify($.from)}]) { $[${JSON.stringify($.to)}] = $[${JSON.stringify($.from)}]; delete $[${JSON.stringify($.from)}]; }\n    }, {\n      from: 'swagger-document',\n      where: $..['$ref'],\n      transform: $ = $ === \"#/definitions/${$.from}\" ? \"#/definitions/${$.to}\" : $\n    },  {\n      from: 'swagger-document',\n      where: $..['$ref'],\n      transform: $ = $ === ($documentPath + \"#/definitions/${$.from}\") ? ($documentPath + \"#/definitions/${$.to}\") : $\n    }]\n  remove-property: |-\n    {\n      from: 'swagger-document',\n      transform: delete $.properties[${JSON.stringify($)}]\n    }\n  rename-property: |-\n    {\n      from: 'swagger-document',\n      transform: if ($.properties[${JSON.stringify($.from)}]) { $.properties[${JSON.stringify($.to)}] = $.properties[${JSON.stringify($.from)}]; delete $.properties[${JSON.stringify($.from)}]; }\n    }\npipeline:\n  openapi-document/multi-api-merger:\n    input: tree-shaker\n    output-artifact: openapi-document\n    suffixes:\n      - ''\n  openapi-document/component-modifiers:\n    input: multi-api-merger\n    output-artifact: openapi-document\n    suffixes:\n      - ''\n  openapi-document/api-version-parameter-handler:\n    input: component-modifiers\n    output-artifact: openapi-document\n    suffixes:\n      - ''\n  openapi-document/profile-filter:\n    input: api-version-parameter-handler\n    output-artifact: openapi-document\n    suffixes:\n      - ''\n  openapi-document/model-deduplicator:\n    input: profile-filter\n    output-artifact: openapi-document\n    suffixes:\n      - ''\n  openapi-document/compose:\n    input: openapi-document/model-deduplicator\n    output-artifact: openapi-document\n    suffixes:\n      - ''\n  openapi-document/identity:\n    input: compose\n    output-artifact: openapi-document\n    suffixes:\n      - ''\n  openapi-document/emitter:\n    input: openapi-document/identity\n    scope: scope-openapi-document/emitter\n    suffixes:\n      - ''\n  openapi-document/transform:\n    input:\n      - openapi-document/openapi-document-converter\n      - openapi-document/transform-immediate\n    output-artifact: openapi-document\n    suffixes:\n      - ''\n  openapi-document/tree-shaker:\n    input: openapi-document/transform\n    output-artifact: openapi-document\n    suffixes:\n      - ''\n  swagger-document/loader-swagger:\n    output-artifact: swagger-document\n    scope: perform-load\n    suffixes:\n      - ''\n  swagger-document/individual/transform:\n    input: loader-swagger\n    output-artifact: swagger-document\n    suffixes:\n      - ''\n  swagger-document/individual/schema-validator-swagger:\n    input: individual/transform\n    output-artifact: swagger-document\n    suffixes:\n      - ''\n  swagger-document/individual/identity:\n    input: individual/schema-validator-swagger\n    output-artifact: swagger-document\n    suffixes:\n      - ''\n  swagger-document/identity:\n    input: individual/schema-validator-swagger\n    output-artifact: swagger-document\n    suffixes:\n      - ''\n  openapi-document/openapi-document-converter:\n    input: swagger-document/identity\n    output-artifact: openapi-document\n    suffixes:\n      - ''\n  openapi-document/loader-openapi:\n    output-artifact: openapi-document\n    scope: perform-load\n    suffixes:\n      - ''\n  openapi-document/individual/transform:\n    input: loader-openapi\n    output-artifact: openapi-document\n    suffixes:\n      - ''\n  openapi-document/individual/schema-validator-openapi:\n    input: individual/transform\n    output-artifact: openapi-document\n    suffixes:\n      - ''\n  openapi-document/individual/identity:\n    input: individual/schema-validator-openapi\n    output-artifact: openapi-document\n    suffixes:\n      - ''\n  openapi-document/transform-immediate:\n    input:\n      - openapi-document-override/md-override-loader-openapi\n      - individual/identity\n    output-artifact: openapi-document\n    suffixes:\n      - ''\n  swagger-document-override/md-override-loader-swagger:\n    output-artifact: immediate-config\n    scope: perform-load\n    suffixes:\n      - ''\n  openapi-document-override/md-override-loader-openapi:\n    output-artifact: immediate-config\n    scope: perform-load\n    suffixes:\n      - ''\n  swagger-document/reflect-api-versions-cs:\n    input:\n      - identity\n      - individual/identity\n      - csharp/emitter\n    scope: reflect-api-versions\n    suffixes: []\n  swagger-document/reflect-api-versions-cs/emitter:\n    input: reflect-api-versions-cs\n    scope: scope-reflect-api-versions-cs-emitter\n    suffixes: []\n  openapi-document/reflect-api-versions-cs:\n    input:\n      - identity\n      - individual/identity\n      - csharp/emitter\n    scope: reflect-api-versions\n    suffixes: []\n  openapi-document/reflect-api-versions-cs/emitter:\n    input: reflect-api-versions-cs\n    scope: scope-reflect-api-versions-cs-emitter\n    suffixes: []\n  swagger-document/model-validator:\n    input: swagger-document/identity\n    scope: model-validator\n    suffixes: []\n  swagger-document/semantic-validator:\n    input: swagger-document/identity\n    scope: semantic-validator\n    suffixes: []\n  pipeline-emitter:\n    scope: scope-pipeline-emitter\n    suffixes:\n      - ''\n  configuration-emitter:\n    scope: scope-configuration-emitter\n    suffixes:\n      - ''\n  csharp/imodeler1:\n    input: openapi-document/identity\n    output-artifact: code-model-v1\n    scope: csharp\n    suffixes:\n      - ''\n  csharp/commonmarker:\n    input: imodeler1\n    output-artifact: code-model-v1\n    suffixes:\n      - ''\n  csharp/cm/transform:\n    input: commonmarker\n    output-artifact: code-model-v1\n    suffixes:\n      - ''\n  csharp/cm/emitter:\n    input: transform\n    scope: scope-cm/emitter\n    suffixes:\n      - ''\n  csharp/generate:\n    plugin: csharp\n    input: cm/transform\n    output-artifact: source-file-csharp\n    suffixes:\n      - ''\n  csharp/simplifier:\n    plugin: csharp-simplifier\n    input: generate\n    output-artifact: source-file-csharp\n    suffixes:\n      - ''\n  csharp/transform:\n    input: simplifier\n    output-artifact: source-file-csharp\n    scope: scope-transform-string\n    suffixes:\n      - ''\n  csharp/emitter:\n    input: transform\n    scope: scope-csharp/emitter\n    suffixes:\n      - ''\n  jsonrpcclient/imodeler1:\n    input: openapi-document/identity\n    output-artifact: code-model-v1\n    scope: jsonrpcclient\n    suffixes: []\n  jsonrpcclient/generate:\n    plugin: jsonrpcclient\n    input: imodeler1\n    output-artifact: source-file-jsonrpcclient\n    suffixes: []\n  jsonrpcclient/transform:\n    input: generate\n    output-artifact: source-file-jsonrpcclient\n    scope: scope-transform-string\n    suffixes: []\n  jsonrpcclient/emitter:\n    input: transform\n    scope: scope-jsonrpcclient/emitter\n    suffixes: []\nscope-swagger-document/emitter:\n  input-artifact: swagger-document\n  is-object: true\n  output-uri-expr: >\n    $config[\"output-file\"] ||\n\n    ($config.namespace ? $config.namespace.replace(/:/g,'_') : undefined) ||\n\n    $config[\"input-file\"][0].split('/').reverse()[0].split('\\\\').reverse()[0].replace(/\\.json$/,\n    \"\")\nscope-openapi-document/emitter:\n  input-artifact: openapi-document\n  is-object: true\n  output-uri-expr: >\n    $config[\"output-file\"] ||\n\n    ($config.namespace ? $config.namespace.replace(/:/g,'_') : undefined) ||\n\n    $config[\"input-file\"][0].split('/').reverse()[0].split('\\\\').reverse()[0].replace(/\\.json$/,\n    \"\")\nscope-cm/emitter:\n  input-artifact: code-model-v1\n  is-object: true\n  output-uri-expr: |\n    \"code-model-v1\"\nscope-reflect-api-versions-cs-emitter:\n  input-artifact: source-file-csharp\n  output-uri-expr: $key\nclient-side-validation: true\nscope-pipeline-emitter:\n  input-artifact: pipeline\n  is-object: true\n  output-uri-expr: |\n    \"pipeline\"\nscope-configuration-emitter:\n  input-artifact: configuration\n  is-object: true\n  output-uri-expr: |\n    \"configuration\"\nused-extension:\n  - '[\"@microsoft.azure/autorest.csharp\",\"~2.3.79\"]'\n  - '[\"@microsoft.azure/autorest.modeler\",\"2.3.55\"]'\nskip-simplifier-on-namespace:\n  - System.Security.Permissions\nscope-csharp/emitter:\n  input-artifact: source-file-csharp\nscope-jsonrpcclient/emitter:\n  input-artifact: source-file-jsonrpcclient\nhelp-content:\n  csharp:\n    activationScope: csharp\n    categoryFriendlyName: 'C# Generator'\n    settings:\n      - key: azure-arm\n        description: generate code in Azure flavor\n      - key: fluent\n        description: generate code in fluent flavor\n      - key: namespace\n        description: determines the root namespace to be used in generated code\n        type: string\n        required: true\n      - key: license-header\n        description: >-\n          text to include as a header comment in generated files (magic strings:\n          MICROSOFT_MIT, MICROSOFT_APACHE, MICROSOFT_MIT_NO_VERSION,\n          MICROSOFT_APACHE_NO_VERSION, MICROSOFT_MIT_NO_CODEGEN)\n        type: string\n      - key: payload-flattening-threshold\n        description: >-\n          max. number of properties in a request body. If the number of\n          properties in the request body is less than or equal to this value,\n          these properties will be represented as individual method arguments\n          instead\n        type: number\n      - key: add-credentials\n        description: >-\n          include a credential property and constructor parameter supporting\n          different authentication behaviors\n      - key: override-client-name\n        description: >-\n          overrides the name of the client class (usually derived from\n          $.info.title)\n        type: string\n      - key: use-internal-constructors\n        description: >-\n          generate constructors with internal instead of public visibility\n          (useful for convenience layers)\n      - key: sync-methods\n        description: >-\n          determines amount of synchronous wrappers to generate; default:\n          essential\n        type: '\"essential\" | \"all\" | \"none\"'\n      - key: use-datetimeoffset\n        description: use DateTimeOffset instead of DateTime to model date/time types\n      - key: client-side-validation\n        description: >-\n          whether to validate parametersat ...
  "content": "// <auto-generated>\r\n// Code generated by Microsoft (R) AutoRest Code Generator.\r\n// Changes may cause incorrect behavior and will be lost if the code is\r\n// regenerated.\r\n// </auto-generated>\r\n\r\nnamespace Tiny.Models\r\n{\r\n    using Microsoft.Rest;\r\n    using Newtonsoft.Json;\r\n    using System.Linq;\r\n\r\n    /// <summary>\r\n    /// A cowbell.\r\n    /// </summary>\r\n    public partial class Cowbell\r\n    {\r\n        /// <summary>\r\n        /// Initializes a new instance of the Cowbell class.\r\n        /// </summary>\r\n        public Cowbell()\r\n        {\r\n            CustomInit();\r\n        }\r\n\r\n        /// <summary>\r\n        /// Initializes a new instance of the Cowbell class.\r\n        /// </summary>\r\n        public Cowbell(string name, long? id = default(long?))\r\n        {\r\n            Id = id;\r\n            Name = name;\r\n            CustomInit();\r\n        }\r\n\r\n        /// <summary>\r\n        /// An initialization method that performs custom operations like setting defaults\r\n        /// </summary>\r\n        partial void CustomInit();\r\n\r\n        /// <summary>\r\n        /// </summary>\r\n        [JsonProperty(PropertyName = \"id\")]\r\n        public long? Id { get; set; }\r\n\r\n        /// <summary>\r\n        /// </summary>\r\n        [JsonProperty(PropertyName = \"name\")]\r\n        public string Name { get; set; }\r\n\r\n        /// <summary>\r\n        /// Validate the object.\r\n        /// </summary>\r\n        /// <exception cref=\"ValidationException\">\r\n        /// Thrown if validation fails\r\n        /// </exception>\r\n        public virtual void Validate()\r\n        {\r\n            if (Name == null)\r\n            {\r\n                throw new ValidationException(ValidationRules.CannotBeNull, \"Name\");\r\n            }\r\n        }\r\n    }\r\n}\r\n",
  "content": "// <auto-generated>\r\n// Code generated by Microsoft (R) AutoRest Code Generator.\r\n// Changes may cause incorrect behavior and will be lost if the code is\r\n// regenerated.\r\n// </auto-generated>\r\n\r\nnamespace Tiny\r\n{\r\n    using Microsoft.Rest;\r\n    using Microsoft.Rest.Serialization;\r\n    using Models;\r\n    using Newtonsoft.Json;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Net;\r\n    using System.Net.Http;\r\n\r\n    /// <summary>\r\n    /// This is a sample.\r\n    /// </summary>\r\n    public partial class CowbellFactory : ServiceClient<CowbellFactory>, ICowbellFactory\r\n    {\r\n        /// <summary>\r\n        /// The base URI of the service.\r\n        /// </summary>\r\n        public System.Uri BaseUri { get; set; }\r\n\r\n        /// <summary>\r\n        /// Gets or sets json serialization settings.\r\n        /// </summary>\r\n        public JsonSerializerSettings SerializationSettings { get; private set; }\r\n\r\n        /// <summary>\r\n        /// Gets or sets json deserialization settings.\r\n        /// </summary>\r\n        public JsonSerializerSettings DeserializationSettings { get; private set; }\r\n\r\n        /// <summary>\r\n        /// Client API version.\r\n        /// </summary>\r\n        public string ApiVersion { get; private set; }\r\n\r\n        /// <summary>\r\n        /// Gets the ICowbellOperations.\r\n        /// </summary>\r\n        public virtual ICowbellOperations Cowbell { get; private set; }\r\n\r\n        /// <summary>\r\n        /// Initializes a new instance of the CowbellFactory class.\r\n        /// </summary>\r\n        /// <param name='httpClient'>\r\n        /// HttpClient to be used\r\n        /// </param>\r\n        /// <param name='disposeHttpClient'>\r\n        /// True: will dispose the provided httpClient on calling CowbellFactory.Dispose(). False: will not dispose provided httpClient</param>\r\n        public CowbellFactory(HttpClient httpClient, bool disposeHttpClient) : base(httpClient, disposeHttpClient)\r\n        {\r\n            Initialize();\r\n        }\r\n\r\n        /// <summary>\r\n        /// Initializes a new instance of the CowbellFactory class.\r\n        /// </summary>\r\n        /// <param name='handlers'>\r\n        /// Optional. The delegating handlers to add to the http client pipeline.\r\n        /// </param>\r\n        public CowbellFactory(params DelegatingHandler[] handlers) : base(handlers)\r\n        {\r\n            Initialize();\r\n        }\r\n\r\n        /// <summary>\r\n        /// Initializes a new instance of the CowbellFactory class.\r\n        /// </summary>\r\n        /// <param name='rootHandler'>\r\n        /// Optional. The http client handler used to handle http transport.\r\n        /// </param>\r\n        /// <param name='handlers'>\r\n        /// Optional. The delegating handlers to add to the http client pipeline.\r\n        /// </param>\r\n        public CowbellFactory(HttpClientHandler rootHandler, params DelegatingHandler[] handlers) : base(rootHandler, handlers)\r\n        {\r\n            Initialize();\r\n        }\r\n\r\n        /// <summary>\r\n        /// Initializes a new instance of the CowbellFactory class.\r\n        /// </summary>\r\n        /// <param name='baseUri'>\r\n        /// Optional. The base URI of the service.\r\n        /// </param>\r\n        /// <param name='handlers'>\r\n        /// Optional. The delegating handlers to add to the http client pipeline.\r\n        /// </param>\r\n        /// <exception cref=\"System.ArgumentNullException\">\r\n        /// Thrown when a required parameter is null\r\n        /// </exception>\r\n        public CowbellFactory(System.Uri baseUri, params DelegatingHandler[] handlers) : this(handlers)\r\n        {\r\n            if (baseUri == null)\r\n            {\r\n                throw new System.ArgumentNullException(\"baseUri\");\r\n            }\r\n            BaseUri = baseUri;\r\n        }\r\n\r\n        /// <summary>\r\n        /// Initializes a new instance of the CowbellFactory class.\r\n        /// </summary>\r\n        /// <param name='baseUri'>\r\n        /// Optional. The base URI of the service.\r\n        /// </param>\r\n        /// <param name='rootHandler'>\r\n        /// Optional. The http client handler used to handle http transport.\r\n        /// </param>\r\n        /// <param name='handlers'>\r\n        /// Optional. The delegating handlers to add to the http client pipeline.\r\n        /// </param>\r\n        /// <exception cref=\"System.ArgumentNullException\">\r\n        /// Thrown when a required parameter is null\r\n        /// </exception>\r\n        public CowbellFactory(System.Uri baseUri, HttpClientHandler rootHandler, params DelegatingHandler[] handlers) : this(rootHandler, handlers)\r\n        {\r\n            if (baseUri == null)\r\n            {\r\n                throw new System.ArgumentNullException(\"baseUri\");\r\n            }\r\n            BaseUri = baseUri;\r\n        }\r\n\r\n        /// <summary>\r\n        /// An optional partial-method to perform custom initialization.\r\n        ///</summary>\r\n        partial void CustomInitialize();\r\n        /// <summary>\r\n        /// Initializes client properties.\r\n        /// </summary>\r\n        private void Initialize()\r\n        {\r\n            Cowbell = new CowbellOperations(this);\r\n            BaseUri = new System.Uri(\"https://localhost\");\r\n            ApiVersion = \"1.0.0\";\r\n            SerializationSettings = new JsonSerializerSettings\r\n            {\r\n                Formatting = Newtonsoft.Json.Formatting.Indented,\r\n                DateFormatHandling = Newtonsoft.Json.DateFormatHandling.IsoDateFormat,\r\n                DateTimeZoneHandling = Newtonsoft.Json.DateTimeZoneHandling.Utc,\r\n                NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore,\r\n                ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Serialize,\r\n                ContractResolver = new ReadOnlyJsonContractResolver(),\r\n                Converters = new  List<JsonConverter>\r\n                    {\r\n                        new Iso8601TimeSpanConverter()\r\n                    }\r\n            };\r\n            DeserializationSettings = new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = Newtonsoft.Json.DateFormatHandling.IsoDateFormat,\r\n                DateTimeZoneHandling = Newtonsoft.Json.DateTimeZoneHandling.Utc,\r\n                NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore,\r\n                ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Serialize,\r\n                ContractResolver = new ReadOnlyJsonContractResolver(),\r\n                Converters = new List<JsonConverter>\r\n                    {\r\n                        new Iso8601TimeSpanConverter()\r\n                    }\r\n            };\r\n            CustomInitialize();\r\n        }\r\n    }\r\n}\r\n",
  "content": "// <auto-generated>\r\n// Code generated by Microsoft (R) AutoRest Code Generator.\r\n// Changes may cause incorrect behavior and will be lost if the code is\r\n// regenerated.\r\n// </auto-generated>\r\n\r\nnamespace Tiny\r\n{\r\n    using Microsoft.Rest;\r\n    using Models;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.IO;\r\n    using System.Linq;\r\n    using System.Net;\r\n    using System.Net.Http;\r\n    using System.Threading;\r\n    using System.Threading.Tasks;\r\n\r\n    /// <summary>\r\n    /// CowbellOperations operations.\r\n    /// </summary>\r\n    public partial class CowbellOperations : IServiceOperations<CowbellFactory>, ICowbellOperations\r\n    {\r\n        /// <summary>\r\n        /// Initializes a new instance of the CowbellOperations class.\r\n        /// </summary>\r\n        /// <param name='client'>\r\n        /// Reference to the service client.\r\n        /// </param>\r\n        /// <exception cref=\"System.ArgumentNullException\">\r\n        /// Thrown when a required parameter is null\r\n        /// </exception>\r\n        public CowbellOperations(CowbellFactory client)\r\n        {\r\n            if (client == null)\r\n            {\r\n                throw new System.ArgumentNullException(\"client\");\r\n            }\r\n            Client = client;\r\n        }\r\n\r\n        /// <summary>\r\n        /// Gets a reference to the CowbellFactory\r\n        /// </summary>\r\n        public CowbellFactory Client { get; private set; }\r\n\r\n        /// <summary>\r\n        /// A good description.\r\n        /// </summary>\r\n        /// <param name='body'>\r\n        /// </param>\r\n        /// <param name='customHeaders'>\r\n        /// Headers that will be added to request.\r\n        /// </param>\r\n        /// <param name='cancellationToken'>\r\n        /// The cancellation token.\r\n        /// </param>\r\n        /// <exception cref=\"HttpOperationException\">\r\n        /// Thrown when the operation returned an invalid status code\r\n        /// </exception>\r\n        /// <exception cref=\"ValidationException\">\r\n        /// Thrown when a required parameter is null\r\n        /// </exception>\r\n        /// <exception cref=\"System.ArgumentNullException\">\r\n        /// Thrown when a required parameter is null\r\n        /// </exception>\r\n        /// <return>\r\n        /// A response object containing the response body and response headers.\r\n        /// </return>\r\n        public async Task<HttpOperationResponse> AddWithHttpMessagesAsync(Cowbell body, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken))\r\n        {\r\n            if (body == null)\r\n            {\r\n                throw new ValidationException(ValidationRules.CannotBeNull, \"body\");\r\n            }\r\n            if (body != null)\r\n            {\r\n                body.Validate();\r\n            }\r\n            // Tracing\r\n            bool _shouldTrace = ServiceClientTracing.IsEnabled;\r\n            string _invocationId = null;\r\n            if (_shouldTrace)\r\n            {\r\n                _invocationId = ServiceClientTracing.NextInvocationId.ToString();\r\n                Dictionary<string, object> tracingParameters = new Dictionary<string, object>();\r\n                tracingParameters.Add(\"body\", body);\r\n                tracingParameters.Add(\"cancellationToken\", cancellationToken);\r\n                ServiceClientTracing.Enter(_invocationId, this, \"Add\", tracingParameters);\r\n            }\r\n            // Construct URL\r\n            var _baseUrl = Client.BaseUri.AbsoluteUri;\r\n            var _url = new System.Uri(new System.Uri(_baseUrl + (_baseUrl.EndsWith(\"/\") ? \"\" : \"/\")), \"cowbell\").ToString();\r\n            // Create HTTP transport objects\r\n            var _httpRequest = new HttpRequestMessage();\r\n            HttpResponseMessage _httpResponse = null;\r\n            _httpRequest.Method = new HttpMethod(\"POST\");\r\n            _httpRequest.RequestUri = new System.Uri(_url);\r\n            // Set Headers\r\n\r\n\r\n            if (customHeaders != null)\r\n            {\r\n                foreach(var _header in customHeaders)\r\n                {\r\n                    if (_httpRequest.Headers.Contains(_header.Key))\r\n                    {\r\n                        _httpRequest.Headers.Remove(_header.Key);\r\n                    }\r\n                    _httpRequest.Headers.TryAddWithoutValidation(_header.Key, _header.Value);\r\n                }\r\n            }\r\n\r\n            // Serialize Request\r\n            string _requestContent = null;\r\n            if(body != null)\r\n            {\r\n                _requestContent = Microsoft.Rest.Serialization.SafeJsonConvert.SerializeObject(body, Client.SerializationSettings);\r\n                _httpRequest.Content = new StringContent(_requestContent, System.Text.Encoding.UTF8);\r\n                _httpRequest.Content.Headers.ContentType =System.Net.Http.Headers.MediaTypeHeaderValue.Parse(\"application/json; charset=utf-8\");\r\n            }\r\n            // Send Request\r\n            if (_shouldTrace)\r\n            {\r\n                ServiceClientTracing.SendRequest(_invocationId, _httpRequest);\r\n            }\r\n            cancellationToken.ThrowIfCancellationRequested();\r\n            _httpResponse = await Client.HttpClient.SendAsync(_httpRequest, cancellationToken).ConfigureAwait(false);\r\n            if (_shouldTrace)\r\n            {\r\n                ServiceClientTracing.ReceiveResponse(_invocationId, _httpResponse);\r\n            }\r\n            HttpStatusCode _statusCode = _httpResponse.StatusCode;\r\n            cancellationToken.ThrowIfCancellationRequested();\r\n            string _responseContent = null;\r\n            if ((int)_statusCode != 200)\r\n            {\r\n                var ex = new HttpOperationException(string.Format(\"Operation returned an invalid status code '{0}'\", _statusCode));\r\n                if (_httpResponse.Content != null) {\r\n                    _responseContent = await _httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);\r\n                }\r\n                else {\r\n                    _responseContent = string.Empty;\r\n                }\r\n                ex.Request = new HttpRequestMessageWrapper(_httpRequest, _requestContent);\r\n                ex.Response = new HttpResponseMessageWrapper(_httpResponse, _responseContent);\r\n                if (_shouldTrace)\r\n                {\r\n                    ServiceClientTracing.Error(_invocationId, ex);\r\n                }\r\n                _httpRequest.Dispose();\r\n                if (_httpResponse != null)\r\n                {\r\n                    _httpResponse.Dispose();\r\n                }\r\n                throw ex;\r\n            }\r\n            // Create Result\r\n            var _result = new HttpOperationResponse();\r\n            _result.Request = _httpRequest;\r\n            _result.Response = _httpResponse;\r\n            if (_shouldTrace)\r\n            {\r\n                ServiceClientTracing.Exit(_invocationId, _result);\r\n            }\r\n            return _result;\r\n        }\r\n\r\n    }\r\n}\r\n",
  "content": "// <auto-generated>\r\n// Code generated by Microsoft (R) AutoRest Code Generator.\r\n// Changes may cause incorrect behavior and will be lost if the code is\r\n// regenerated.\r\n// </auto-generated>\r\n\r\nnamespace Tiny\r\n{\r\n    using Microsoft.Rest;\r\n    using Models;\r\n    using System.Collections;\r\n    using System.Collections.Generic;\r\n    using System.Threading;\r\n    using System.Threading.Tasks;\r\n\r\n    /// <summary>\r\n    /// CowbellOperations operations.\r\n    /// </summary>\r\n    public partial interface ICowbellOperations\r\n    {\r\n        /// <summary>\r\n        /// A good description.\r\n        /// </summary>\r\n        /// <param name='body'>\r\n        /// </param>\r\n        /// <param name='customHeaders'>\r\n        /// The headers that will be added to request.\r\n        /// </param>\r\n        /// <param name='cancellationToken'>\r\n        /// The cancellation token.\r\n        /// </param>\r\n        /// <exception cref=\"Microsoft.Rest.HttpOperationException\">\r\n        /// Thrown when the operation returned an invalid status code\r\n        /// </exception>\r\n        /// <exception cref=\"Microsoft.Rest.ValidationException\">\r\n        /// Thrown when a required parameter is null\r\n        /// </exception>\r\n        Task<HttpOperationResponse> AddWithHttpMessagesAsync(Cowbell body, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));\r\n    }\r\n}\r\n",
  "content": "// <auto-generated>\r\n// Code generated by Microsoft (R) AutoRest Code Generator.\r\n// Changes may cause incorrect behavior and will be lost if the code is\r\n// regenerated.\r\n// </auto-generated>\r\n\r\nnamespace Tiny\r\n{\r\n    using Models;\r\n    using Newtonsoft.Json;\r\n\r\n    /// <summary>\r\n    /// This is a sample.\r\n    /// </summary>\r\n    public partial interface ICowbellFactory : System.IDisposable\r\n    {\r\n        /// <summary>\r\n        /// The base URI of the service.\r\n        /// </summary>\r\n        System.Uri BaseUri { get; set; }\r\n\r\n        /// <summary>\r\n        /// Gets or sets json serialization settings.\r\n        /// </summary>\r\n        JsonSerializerSettings SerializationSettings { get; }\r\n\r\n        /// <summary>\r\n        /// Gets or sets json deserialization settings.\r\n        /// </summary>\r\n        JsonSerializerSettings DeserializationSettings { get; }\r\n\r\n        /// <summary>\r\n        /// Client API version.\r\n        /// </summary>\r\n        string ApiVersion { get; }\r\n\r\n\r\n        /// <summary>\r\n        /// Gets the ICowbellOperations.\r\n        /// </summary>\r\n        ICowbellOperations Cowbell { get; }\r\n\r\n    }\r\n}\r\n",
  "content": "// <auto-generated>\r\n// Code generated by Microsoft (R) AutoRest Code Generator.\r\n// Changes may cause incorrect behavior and will be lost if the code is\r\n// regenerated.\r\n// </auto-generated>\r\n\r\nnamespace Tiny\r\n{\r\n    using Models;\r\n    using System.Threading;\r\n    using System.Threading.Tasks;\r\n\r\n    /// <summary>\r\n    /// Extension methods for CowbellOperations.\r\n    /// </summary>\r\n    public static partial class CowbellOperationsExtensions\r\n    {\r\n            /// <summary>\r\n            /// A good description.\r\n            /// </summary>\r\n            /// <param name='operations'>\r\n            /// The operations group for this extension method.\r\n            /// </param>\r\n            /// <param name='body'>\r\n            /// </param>\r\n            public static void Add(this ICowbellOperations operations, Cowbell body)\r\n            {\r\n                operations.AddAsync(body).GetAwaiter().GetResult();\r\n            }\r\n\r\n            /// <summary>\r\n            /// A good description.\r\n            /// </summary>\r\n            /// <param name='operations'>\r\n            /// The operations group for this extension method.\r\n            /// </param>\r\n            /// <param name='body'>\r\n            /// </param>\r\n            /// <param name='cancellationToken'>\r\n            /// The cancellation token.\r\n            /// </param>\r\n            public static async Task AddAsync(this ICowbellOperations operations, Cowbell body, CancellationToken cancellationToken = default(CancellationToken))\r\n            {\r\n                (await operations.AddWithHttpMessagesAsync(body, null, cancellationToken).ConfigureAwait(false)).Dispose();\r\n            }\r\n\r\n    }\r\n}\r\n",
  "sources": []
  "sources": []
  "sources": []
  "sources": []
  "sources": []
  "sources": []
  "type": "configuration.yaml",
  "type": "source-file-csharp",
  "type": "source-file-csharp",
  "type": "source-file-csharp",
  "type": "source-file-csharp",
  "type": "source-file-csharp",
  "type": "source-file-csharp",
  "uri": "stdout:///configuration.yaml",
  "uri": "stdout:///CowbellFactory.cs",
  "uri": "stdout:///CowbellOperations.cs",
  "uri": "stdout:///CowbellOperationsExtensions.cs",
  "uri": "stdout:///ICowbellFactory.cs",
  "uri": "stdout:///ICowbellOperations.cs",
  "uri": "stdout:///Models/Cowbell.cs",
"sources": []
{
{
{
{
{
{
{
}
}
}
}
}
}
}
https://aka.ms/autorest
