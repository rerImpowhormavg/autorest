{
  "name": "autorest",
  "version": "3.0.0",
  "description": "The AutoRest tool generates client libraries for accessing RESTful web services. Input to AutoRest is an OpenAPI spec that describes the REST API.",
  "engines": {
    "node": ">=10.13.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Azure/autorest"
  },
  "readme": "https://github.com/Azure/AutoRest/readme.md",
  "keywords": [
    "autorest",
    "rest",
    "swagger"
  ],
  "author": "Microsoft Corporation",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Azure/autorest/issues"
  },
  "homepage": "https://github.com/Azure/autorest/blob/master/README.md",
  "main": "./dist/exports.js",
  "bin": {
    "autorest": "./entrypoints/app.js"
  },
  "scripts": {
    "start": "node ./dist/app.js",
    "test": "./node_modules/.bin/mocha ./dist/test",
    "build": "npm run before-build && tsc -p .",
    "watch": "npm run before-build && tsc -p . --watch",
    "eslint-fix": "eslint  . --fix --ext .ts",
    "eslint": "eslint  . --ext .ts",
    "set-version": "node -e \"let pkg = require('./package.json'); require('child_process').exec('git rev-list --parents HEAD --count --full-history .', (o,stdout) => { const v = pkg.version.split('.'); v[v.length-1] = (parseInt(stdout.trim()) + 4000); const orig=JSON.stringify(pkg,null,2);  pkg.version = v.join('.'); const delta = JSON.stringify(pkg,null,2 ); if( orig !== delta) require('fs').writeFileSync('./package.json',delta)})\"",
    "reset-version": "node -e \"let pkg = require('./package.json'); const v = pkg.version.split('.'); v[v.length-1] = 0; const orig=JSON.stringify(pkg,null,2);  pkg.version = v.join('.'); const delta = JSON.stringify(pkg,null,2 ); if( orig !== delta) require('fs').writeFileSync('./package.json',delta)\"",
    "static-link": "static-link --force --no-node-modules",
    "preinstall": "node ./.scripts/preinstall-check",
    "prepack": "npm run static-link && npm run build",
    "clean": "ver > nul 2>&1 nul && npm run --silent clean-cmd || npm run --silent clean-bash",
    "clean-cmd": "if exist dist rmdir /s /q dist && exit 0 || exit 0 ",
    "clean-bash": "rm nul && rm -rf dist && exit 0 || exit 0",
    "before-build": "pwsh -noprofile -command \"new-item -type directory -ea 0 ./dist/interfaces; copy-item -ea 0 ./interfaces/*.d.ts dist/interfaces\""
  },
  "typings": "./dist/main.d.ts",
  "devDependencies": {
    "@types/commonmark": "^0.27.0",
    "@types/node": "12.7.2",
    "@types/semver": "5.5.0",
    "@types/mocha": "5.2.5",
    "mocha": "5.2.0",
    "mocha-typescript": "1.1.17",
    "typescript": "~3.6.2",
    "@typescript-eslint/eslint-plugin": "~2.0.0",
    "@typescript-eslint/parser": "~2.0.0",
    "eslint": "~6.2.2",
    "static-link": "^0.2.4",
    "@autorest/core": "~3.0.0",
    "@azure-tools/async-io": "~3.0.0",
    "@azure-tools/extension": "~3.0.0",
    "@azure-tools/tasks": "~3.0.0",
    "semver": "^5.5.1",
    "chalk": "2.3.0",
    "pwsh": "0.2.0"
  },
  "static-link": {
    "entrypoints": [],
    "dependencies": {
      "@azure-tools/async-io": "~3.0.0",
      "@azure-tools/extension": "~3.0.0",
      "@azure-tools/tasks": "~3.0.0",
      "semver": "^5.5.1",
      "chalk": "2.3.0"
    }
  }
}