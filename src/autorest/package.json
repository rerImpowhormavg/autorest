{
  "name": "autorest",
  "version": "2.0.0",
  "description": "The AutoRest tool generates client libraries for accessing RESTful web services. Input to AutoRest is an OpenAPI spec that describes the REST API.",
  "engines": {
    "node": ">=7.10.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Azure/autorest"
  },
  "readme": "https://github.com/Azure/AutoRest/readme.md",
  "keywords": [
    "autorest",
    "rest",
    "swagger"
  ],
  "author": "Microsoft Corporation",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Azure/autorest/issues"
  },
  "homepage": "https://github.com/Azure/autorest/blob/master/README.md",
  "main": "./dist/main.js",
  "bin": {
    "autorest": "./dist/app.js"
  },
  "scripts": {
    "start": "node ./dist/app.js",
    "test": "./node_modules/.bin/mocha ./dist/test",
    "build": "cd .. && cd autorest-core && npm run build && cd .. && cd autorest && tsc -p .&& shx mkdir -p ./dist/interfaces && shx cp -r ./interfaces/*.d.ts ./dist/interfaces ",
    "static-link": "static-link",
    "postinstall": "node ./post-install --force",
    "preinstall": "node ./preinstall-check",
    "reinstall": "shx rm ./package-lock.json && shx rm -rf ./node_modules && npm install",
    "prepack": "static-link & npm run build"
  },
  "typings": "./dist/main.d.ts",
  "devDependencies": {
    "@types/commonmark": "^0.22.29",
    "@types/node": "^7.0.5",
    "@types/semver": "^5.3.30",
    "@types/yargs": "^6.6.0",
    "mocha": "3.2.0",
    "mocha-typescript": "1.0.22",
    "typescript": "2.5.3",
    "static-link": "^0.2.2",
    "shx": "0.2.2"
  },
  "static-link": {
    "entrypoints": [],
    "dependencies": {
      "@microsoft.azure/async-io": "~1.0.22",
      "@microsoft.azure/console": "~1.0.31",
      "@microsoft.azure/extension": "~1.2.12",
      "@microsoft.azure/polyfill": "~1.0.17",
      "linq-es2015": "^2.4.24",
      "semver": "^5.3.0"
    },
    "patch": "const fs = require(`fs`); let txt = fs.readFileSync('./node_modules/npm/lib/install/action/extract.js','utf8').replace(`const ENABLE_WORKERS = process.platform === 'darwin'`, `const ENABLE_WORKERS = false;`); fs.writeFileSync('./node_modules/npm/lib/install/action/extract.js', txt ); txt = fs.readFileSync(`./node_modules/npm/lib/npm.js`,`utf8`).replace(`var j = parseJSON(fs.readFileSync(`, `var j = require(path.join(__dirname, '../package.json'));` ).replace(`path.join(__dirname, '../package.json')) + '')`,``); fs.writeFileSync(`./node_modules/npm/lib/npm.js`, txt ); "
  }
}
