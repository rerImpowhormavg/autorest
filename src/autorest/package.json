{
  "name": "autorest",
  "version": "3.0.0",
  "description": "The AutoRest tool generates client libraries for accessing RESTful web services. Input to AutoRest is an OpenAPI spec that describes the REST API.",
  "engines": {
    "node": ">=10.13.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Azure/autorest"
  },
  "readme": "https://github.com/Azure/AutoRest/readme.md",
  "keywords": [
    "autorest",
    "rest",
    "swagger"
  ],
  "author": "Microsoft Corporation",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Azure/autorest/issues"
  },
  "homepage": "https://github.com/Azure/autorest/blob/master/README.md",
  "main": "./dist/exports.js",
  "bin": {
    "autorest": "./entrypoints/app.js"
  },
  "scripts": {
    "start": "node ./dist/app.js",
    "test": "./node_modules/.bin/mocha ./dist/test",
    "build": "npm run before-build && tsc -p .",
    "watch": "npm run before-build && tsc -p . --watch",
    "set-version": "node -e \"let pkg = require('./package.json'); require('child_process').exec('git rev-list --parents HEAD --count --full-history .', (o,stdout) => { const v = pkg.version.split('.'); v[v.length-1] = parseInt(stdout.trim()); const orig=JSON.stringify(pkg,null,2);  pkg.version = v.join('.'); const delta = JSON.stringify(pkg,null,2 ); if( orig !== delta) require('fs').writeFileSync('./package.json',delta)})\"",
    "static-link": "static-link --force --no-node-modules",
    "preinstall": "node ./.scripts/preinstall-check",
    "prepack": "static-link --force --no-node-modules && npm run build",
    "run-pwsh": "pwsh -command \"& {param($script) pwsh -command ((convertfrom-json (get-content -raw ./package.json)).'pwsh-scripts'.$script) }\"",
    "clean": "npm run run-pwsh clean",
    "before-build": "npm run run-pwsh before-build"
  },
  "pwsh-scripts": {
    "clean": "remove-item -recurse -ea 0 ./dist ; remove-item -ea 0 ./*.log ",
    "before-build": "$shh= new-item -type directory -ea 0 ./dist/interfaces; copy-item -ea 0 ./interfaces/*.d.ts dist/interfaces"
  },
  "typings": "./dist/main.d.ts",
  "devDependencies": {
    "@types/commonmark": "^0.27.0",
    "@types/node": "^10.11.4",
    "@types/semver": "5.5.0",
    "@types/mocha": "5.2.5",
    "mocha": "5.2.0",
    "mocha-typescript": "1.1.17",
    "typescript": "^3.1.3",
    "tslint": "^5.11.0",
    "tslint-language-service": "^0.9.9",
    "tslint-microsoft-contrib": "^5.2.1",
    "static-link": "^0.2.4",
    "@microsoft.azure/autorest-core": "^3.0.0",
    "@microsoft.azure/async-io": "^2.1.40",
    "@microsoft.azure/extension": "^2.1.37",
    "@microsoft.azure/tasks": "^2.1.39",
    "semver": "^5.5.1",
    "chalk": "2.3.0"
  },
  "static-link": {
    "entrypoints": [],
    "dependencies": {
      "@microsoft.azure/async-io": "^2.1.40",
      "@microsoft.azure/extension": "^2.1.37",
      "@microsoft.azure/tasks": "^2.1.39",
      "semver": "^5.5.1",
      "chalk": "2.3.0"
    },
    "patch": "const fs = require(`fs`); let txt = fs.readFileSync('./node_modules/npm/lib/install/action/extract.js','utf8').replace(`const ENABLE_WORKERS = process.platform === 'darwin'`, `const ENABLE_WORKERS = false;`); fs.writeFileSync('./node_modules/npm/lib/install/action/extract.js', txt ); txt = fs.readFileSync(`./node_modules/npm/lib/npm.js`,`utf8`).replace(`var j = parseJSON(fs.readFileSync(`, `var j = require(path.join(__dirname, '../package.json'));` ).replace(`path.join(__dirname, '../package.json')) + '')`,``); fs.writeFileSync(`./node_modules/npm/lib/npm.js`, txt );   txt = fs.readFileSync('./node_modules/npm/lib/pack.js','utf8').replace(`require.main.filename`, `require.resolve('../bin/npm-cli.js')`); fs.writeFileSync('./node_modules/npm/lib/pack.js', txt ); "
  }
}