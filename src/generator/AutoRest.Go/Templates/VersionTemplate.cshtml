@using AutoRest.Go
@using AutoRest.Core.Model
@using AutoRest.Go.Templates
@using AutoRest.Go.Model
@using AutoRest.Core.Utilities
@using System.Linq
@using System.Collections.Generic;

@inherits AutoRest.Core.Template<AutoRest.Go.Model.CodeModelGo>
package @Model.Namespace
@EmptyLine
@Header("// ")

@EmptyLine
import (
    "bytes"
    "fmt"
    "strings"
)
@EmptyLine

const (
    major = "@(Model.Version[0])"
    minor = "@(Model.Version[1])"
    patch = "@(Model.Version[2])"
    tag   = "@(Model.Version[3])"

    userAgentFormat = "Azure-SDK-For-Go/%s arm-%s/%s"
)

// cached results of UserAgent and Version to prevent repeated operations.
var (
    userAgent string
    version string
)

@EmptyLine
// UserAgent returns the UserAgent string to use when sending http.Requests.
func UserAgent() string {
    if userAgent == "" {
        userAgent = fmt.Sprintf(userAgentFormat, Version(), "@(Model.Namespace)", "@(Model.ApiVersion)")
    }
    return userAgent
}

@EmptyLine
// Version returns the semantic version (see http://semver.org) of the client.
func Version() string {
    if version == "" {
        versionBuilder := bytes.NewBufferString(fmt.Sprintf("%d.%d.%d", major, minor, patch))
        if tag != "" {
            versionBuilder.WriteRune('-')
            versionBuilder.WriteString(strings.TrimPrefix(tag, "-"))
        }
        version = string(versionBuilder.Bytes())
    }
    return version
}
