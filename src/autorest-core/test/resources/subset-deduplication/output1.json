{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger Petstore",
    "license": {
      "name": "MIT"
    }
  },
  "servers": [
    {
      "url": "http://petstore.swagger.io/v1"
    }
  ],
  "paths": {
    "/pets": {
      "get": {
        "summary": "List all pets",
        "operationId": "listPets",
        "tags": [
          "pets"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many items to return at one time (max 100)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of pets",
            "headers": {
              "x-next": {
                "description": "A link to the next page of responses",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pets"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a pet",
        "operationId": "createPets",
        "tags": [
          "pets"
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/pets/{petId}": {
      "get": {
        "summary": "Info for a specific pet",
        "operationId": "showPetById",
        "tags": [
          "pets"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "description": "The id of the pet to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pets"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "schema:1": {
        "x-ms-metadata": {
          "apiVersions": [
            "3.0.0"
          ],
          "filename": [
            "mem:///petsdadasfasfasf.json"
          ],
          "name": "VirtualMachine",
          "originalLocations": [
            "file:///sdadasdasdasdfafge"
          ]
        },
        "properties": {
          "zones": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The virtual machine zones."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/schema:3"
          }
        ]
      },
      "schema:2": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.0"
          ],
          "filename": [
            "mem:///petsdadasfasfasf.json"
          ],
          "name": "VirtualMachine",
          "originalLocations": [
            "file:///sdadasdasdasdfafge"
          ]
        },
        "properties": {
          "plan": {
            "$ref": "#/components/schemas/Plan",
            "description": "Specifies information about the marketplace image used to create the virtual machine..."
          },
          "properties": {
            "x-ms-client-flatten": true,
            "$ref": "#/components/schemas/VirtualMachineProperties"
          },
          "resources": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VirtualMachineExtension"
            },
            "description": "The virtual machine child extension resources."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Describes a Virtual Machine."
      },
      "schema:3": {
        "x-ms-metadata": {
          "apiVersions": [
            "2.0.0"
          ],
          "filename": [
            "mem:///petsdadasfasfasf.json"
          ],
          "name": "VirtualMachine",
          "originalLocations": [
            "file:///sdadasdasdasdfafge"
          ]
        },
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/VirtualMachineIdentity",
            "description": "The identity of the virtual machine, if configured."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/schema:2"
          }
        ]
      },
      "schema:4": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.0"
          ],
          "filename": [
            "mem:///petsdadasfasfasf.json"
          ],
          "name": "VirtualMachine",
          "originalLocations": [
            "file:///sdadasdasdasdfafge"
          ]
        },
        "properties": {
          "Plan": {
            "$ref": "#/components/schemas/Plan",
            "description": "Specifies information about the marketplace image used to create the virtual machine..."
          },
          "Properties": {
            "x-ms-client-flatten": true,
            "$ref": "#/components/schemas/VirtualMachineProperties"
          },
          "resources": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VirtualMachineExtension"
            },
            "description": "The virtual machine child extension resources."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Describes a Virtual Machine."
      },
      "schema:5": {
        "x-ms-metadata": {
          "apiVersions": [
            "1.0.0"
          ],
          "filename": [
            "mem:///petsdadasfasfasf.json"
          ],
          "name": "DiskEncryptionSettings",
          "originalLocations": [
            "file:///sdadasdasdasdfafge"
          ]
        },
        "properties": {
          "diskEncryptionKey": {
            "$ref": "#/definitions/KeyVaultSecretReference",
            "description": "Specifies the location of the disk encryption key, which is a Key Vault Secret."
          },
          "keyEncryptionKey": {
            "readOnly": true,
            "$ref": "#/definitions/KeyVaultKeyReference",
            "description": "NEW: Specifies the location of the key encryption key in Key Vault."
          },
          "enabled": {
            "readOnly": true,
            "type": "boolean",
            "description": "NEW: Specifies whether disk encryption should be enabled on the virtual machine."
          }
        },
        "required": [
          "diskEncryptionKey"
        ],
        "description": "Describes a Encryption Settings for a Disk"
      },
      "schema:6": {
        "x-ms-metadata": {
          "apiVersions": [
            "5.0.0"
          ],
          "filename": [
            "mem:///petsdadasfasfasf.json"
          ],
          "name": "DiskEncryptionSettings",
          "originalLocations": [
            "file:///sdadasdasdasdfafge"
          ]
        },
        "properties": {
          "interestingKeyEncryptionKey": {
            "readOnly": true,
            "$ref": "#/definitions/KeyVaultKeyReference",
            "description": "NEW: Specifies the location of the key encryption key in Key Vault."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/schema:5"
          }
        ]
      }
    }
  }
}