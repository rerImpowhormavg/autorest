{
 "openapi": "3.0.0",
 "info": {
  "title": "SqlManagementClient",
  "description": "The Azure SQL Database management API provides a RESTful set of web services that interact with Azure SQL Database services to manage your databases. The API enables you to create, retrieve, update, and delete databases.",
  "x-ms-metadata": {
   "apiVersions": [
    "2014-04-01",
    "2015-05-01-preview",
    "2017-03-01-preview",
    "2017-10-01-preview"
   ]
  },
  "version": "2014-04-01"
 },
 "paths": {
  "path:0": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///844?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fbackups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recoverableDatabases/{databaseName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/backups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1recoverableDatabases~1{databaseName}"
    ]
   },
   "get": {
    "tags": [
     "RecoverableDatabases"
    ],
    "operationId": "RecoverableDatabases_Get",
    "description": "Gets a recoverable database, which is a resource representing a database's geo backup",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:1"
        }
       }
      }
     }
    }
   }
  },
  "path:1": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///844?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fbackups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recoverableDatabases",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/backups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1recoverableDatabases"
    ]
   },
   "get": {
    "tags": [
     "RecoverableDatabases"
    ],
    "operationId": "RecoverableDatabases_ListByServer",
    "description": "Gets a list of recoverable databases",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:0"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:2"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:2": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///844?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fbackups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/restorableDroppedDatabases/{restorableDroppededDatabaseId}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/backups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1restorableDroppedDatabases~1{restorableDroppededDatabaseId}"
    ]
   },
   "get": {
    "tags": [
     "RestorableDroppedDatabases"
    ],
    "operationId": "RestorableDroppedDatabases_Get",
    "description": "Gets a deleted database that can be restored",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:0"
     },
     {
      "name": "restorableDroppededDatabaseId",
      "in": "path",
      "description": "The id of the deleted database in the form of databaseName,deletionTimeInFileTimeFormat",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:4"
        }
       }
      }
     }
    }
   }
  },
  "path:3": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///844?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fbackups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/restorableDroppedDatabases",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/backups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1restorableDroppedDatabases"
    ]
   },
   "get": {
    "tags": [
     "RestorableDroppedDatabases"
    ],
    "operationId": "RestorableDroppedDatabases_ListByServer",
    "description": "Gets a list of deleted databases that can be restored",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:0"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:5"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:4": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///845?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FcheckNameAvailability.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/checkNameAvailability",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/checkNameAvailability.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Sql~1checkNameAvailability"
    ]
   },
   "post": {
    "tags": [
     "Servers"
    ],
    "operationId": "Servers_CheckNameAvailability",
    "description": "Determines whether a resource can be created with the specified name.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:6"
       }
      }
     },
     "required": true,
     "description": "The parameters to request for name availability.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 2,
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:7"
        }
       }
      }
     }
    }
   }
  },
  "path:5": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///846?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FconnectionPolicies.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/connectionPolicies/{connectionPolicyName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/connectionPolicies.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1connectionPolicies~1{connectionPolicyName}"
    ]
   },
   "put": {
    "tags": [
     "ConnectionPolicies"
    ],
    "operationId": "ServerConnectionPolicies_CreateOrUpdate",
    "description": "Creates or updates the server's connection policy.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:6"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:9"
       }
      }
     },
     "required": true,
     "description": "The required parameters for updating a secure connection policy.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:9"
        }
       }
      }
     },
     "201": {
      "description": "Created",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:9"
        }
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "ConnectionPolicies"
    ],
    "operationId": "ServerConnectionPolicies_Get",
    "description": "Gets the server's secure connection policy.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:5"
     },
     {
      "$ref": "#/components/parameters/parameters:6"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:9"
        }
       }
      }
     }
    }
   }
  },
  "path:6": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///847?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FdatabaseSecurityAlertPolicies.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/securityAlertPolicies/{securityAlertPolicyName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/databaseSecurityAlertPolicies.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1securityAlertPolicies~1{securityAlertPolicyName}"
    ]
   },
   "get": {
    "tags": [
     "SecurityAlert"
    ],
    "description": "Gets a database's threat detection policy.",
    "operationId": "DatabaseThreatDetectionPolicies_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:7"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database for which database Threat Detection policy is defined.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "securityAlertPolicyName",
      "in": "path",
      "description": "The name of the security alert policy.",
      "required": true,
      "x-ms-enum": {
       "modelAsString": true,
       "name": "SecurityAlertPolicyName",
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:352"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the database Threat Detection policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:10"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 500 GetDatabaseSecurityAlertPolicyFailed - Failed to get database Threat Detection security alert policies. * 500 DatabaseIsUnavailable - Your settings are currently unavailable, please try again later"
     }
    }
   },
   "put": {
    "tags": [
     "SecurityAlert"
    ],
    "description": "Creates or updates a database's threat detection policy.",
    "operationId": "DatabaseThreatDetectionPolicies_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:7"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database for which database Threat Detection policy is defined.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "securityAlertPolicyName",
      "in": "path",
      "description": "The name of the security alert policy.",
      "required": true,
      "x-ms-enum": {
       "modelAsString": true,
       "name": "SecurityAlertPolicyName",
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:352"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:10"
       }
      }
     },
     "required": true,
     "description": "The database Threat Detection policy.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "Successfully updated the database Threat Detection policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:10"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the database Threat Detection policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:10"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 500 UpsertDatabaseSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later * 500 DatabaseIsUnavailable - Your settings are currently unavailable, please try again later"
     }
    }
   }
  },
  "path:7": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///848?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FdataMasking.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/dataMaskingPolicies/{dataMaskingPolicyName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/dataMasking.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1dataMaskingPolicies~1{dataMaskingPolicyName}"
    ]
   },
   "put": {
    "tags": [
     "DataMaskingPolicies"
    ],
    "operationId": "DataMaskingPolicies_CreateOrUpdate",
    "description": "Creates or updates a database data masking policy",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:8"
     },
     {
      "$ref": "#/components/parameters/parameters:9"
     },
     {
      "$ref": "#/components/parameters/parameters:10"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:13"
       }
      }
     },
     "required": true,
     "description": "Parameters for creating or updating a data masking policy.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 6,
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:13"
        }
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "DataMaskingPolicies"
    ],
    "operationId": "DataMaskingPolicies_Get",
    "description": "Gets a database data masking policy.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:8"
     },
     {
      "$ref": "#/components/parameters/parameters:9"
     },
     {
      "$ref": "#/components/parameters/parameters:10"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:13"
        }
       }
      }
     }
    }
   }
  },
  "path:8": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///848?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FdataMasking.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/dataMaskingPolicies/{dataMaskingPolicyName}/rules/{dataMaskingRuleName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/dataMasking.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1dataMaskingPolicies~1{dataMaskingPolicyName}~1rules~1{dataMaskingRuleName}"
    ]
   },
   "put": {
    "tags": [
     "DataMaskingRules"
    ],
    "operationId": "DataMaskingRules_CreateOrUpdate",
    "description": "Creates or updates a database data masking rule.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:8"
     },
     {
      "$ref": "#/components/parameters/parameters:9"
     },
     {
      "$ref": "#/components/parameters/parameters:10"
     },
     {
      "name": "dataMaskingRuleName",
      "in": "path",
      "description": "The name of the data masking rule.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:15"
       }
      }
     },
     "required": true,
     "description": "The required parameters for creating or updating a data masking rule.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 7,
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:15"
        }
       }
      }
     },
     "201": {
      "description": "Created",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:15"
        }
       }
      }
     }
    }
   }
  },
  "path:9": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///848?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FdataMasking.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/dataMaskingPolicies/{dataMaskingPolicyName}/rules",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/dataMasking.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1dataMaskingPolicies~1{dataMaskingPolicyName}~1rules"
    ]
   },
   "get": {
    "tags": [
     "DataMaskingRules"
    ],
    "operationId": "DataMaskingRules_ListByDatabase",
    "description": "Gets a list of database data masking rules.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:8"
     },
     {
      "$ref": "#/components/parameters/parameters:9"
     },
     {
      "$ref": "#/components/parameters/parameters:10"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:16"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:10": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///849?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FfirewallRules.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules/{firewallRuleName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/firewallRules.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1firewallRules~1{firewallRuleName}"
    ]
   },
   "put": {
    "tags": [
     "FirewallRules"
    ],
    "operationId": "FirewallRules_CreateOrUpdate",
    "description": "Creates or updates a firewall rule.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:11"
     },
     {
      "name": "firewallRuleName",
      "in": "path",
      "description": "The name of the firewall rule.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:18"
       }
      }
     },
     "required": true,
     "description": "The required parameters for creating or updating a firewall rule.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:18"
        }
       }
      }
     },
     "201": {
      "description": "Created",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:18"
        }
       }
      }
     }
    }
   },
   "delete": {
    "tags": [
     "FirewallRules"
    ],
    "operationId": "FirewallRules_Delete",
    "description": "Deletes a firewall rule.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:11"
     },
     {
      "name": "firewallRuleName",
      "in": "path",
      "description": "The name of the firewall rule.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK"
     },
     "204": {
      "description": "NoContent"
     }
    }
   },
   "get": {
    "tags": [
     "FirewallRules"
    ],
    "operationId": "FirewallRules_Get",
    "description": "Gets a firewall rule.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:11"
     },
     {
      "name": "firewallRuleName",
      "in": "path",
      "description": "The name of the firewall rule.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:18"
        }
       }
      }
     }
    }
   }
  },
  "path:11": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///849?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FfirewallRules.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/firewallRules.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1firewallRules"
    ]
   },
   "get": {
    "tags": [
     "FirewallRules"
    ],
    "operationId": "FirewallRules_ListByServer",
    "description": "Returns a list of firewall rules.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:11"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:19"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:12": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///850?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FgeoBackupPolicies.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/geoBackupPolicies/{geoBackupPolicyName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/geoBackupPolicies.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1geoBackupPolicies~1{geoBackupPolicyName}"
    ]
   },
   "put": {
    "tags": [
     "GeoBackupPolicies"
    ],
    "operationId": "GeoBackupPolicies_CreateOrUpdate",
    "description": "Updates a database geo backup policy.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:12"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:13"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:21"
       }
      }
     },
     "required": true,
     "description": "The required parameters for creating or updating the geo backup policy.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 6,
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:21"
        }
       }
      }
     },
     "201": {
      "description": "Created",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:21"
        }
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "GeoBackupPolicies"
    ],
    "operationId": "GeoBackupPolicies_Get",
    "description": "Gets a geo backup policy.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:12"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:13"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:21"
        }
       }
      }
     }
    }
   }
  },
  "path:13": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///850?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FgeoBackupPolicies.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/geoBackupPolicies",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/geoBackupPolicies.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1geoBackupPolicies"
    ]
   },
   "get": {
    "tags": [
     "GeoBackupPolicies"
    ],
    "operationId": "GeoBackupPolicies_ListByDatabase",
    "description": "Returns a list of geo backup policies.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:12"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:22"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:14": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///851?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FimportExport.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/import",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/importExport.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1import"
    ]
   },
   "post": {
    "tags": [
     "ImportExport"
    ],
    "operationId": "Databases_Import",
    "description": "Imports a bacpac into a new database. ",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:14"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:27"
       }
      }
     },
     "required": true,
     "description": "The required parameters for importing a Bacpac into a database.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 4,
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:25"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:15": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///851?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FimportExport.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/extensions/{extensionName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/importExport.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1extensions~1{extensionName}"
    ]
   },
   "put": {
    "tags": [
     "ImportExport"
    ],
    "operationId": "Databases_CreateImportOperation",
    "description": "Creates an import operation that imports a bacpac into an existing database. The existing database must be empty.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:14"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database to import into",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "extensionName",
      "in": "path",
      "description": "The name of the operation to perform",
      "required": true,
      "x-ms-enum": {
       "name": "ExtensionName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "import"
       ],
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:24"
       }
      }
     },
     "required": true,
     "description": "The required parameters for importing a Bacpac into a database.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 6,
    "responses": {
     "201": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:25"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:16": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///851?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FimportExport.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/export",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/importExport.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1export"
    ]
   },
   "post": {
    "tags": [
     "ImportExport"
    ],
    "operationId": "Databases_Export",
    "description": "Exports a database to a bacpac.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:14"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database to be exported.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:28"
       }
      }
     },
     "required": true,
     "description": "The required parameters for exporting a database.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:25"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:17": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///852?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fmetrics.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/metrics",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/metrics.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1metrics"
    ]
   },
   "get": {
    "tags": [
     "Databases"
    ],
    "operationId": "Databases_ListMetrics",
    "description": "Returns database metrics.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:15"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "$filter",
      "in": "query",
      "description": "An OData filter expression that describes a subset of metrics to return.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:32"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:18": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///852?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fmetrics.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/metricDefinitions",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/metrics.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1metricDefinitions"
    ]
   },
   "get": {
    "tags": [
     "Databases"
    ],
    "operationId": "Databases_ListMetricDefinitions",
    "description": "Returns database metric definitions.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:15"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:35"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:19": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///852?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fmetrics.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/metrics",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/metrics.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1elasticPools~1{elasticPoolName}~1metrics"
    ]
   },
   "get": {
    "tags": [
     "ElasticPools"
    ],
    "operationId": "ElasticPools_ListMetrics",
    "description": "Returns elastic pool  metrics.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:15"
     },
     {
      "name": "elasticPoolName",
      "in": "path",
      "description": "The name of the elastic pool.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "$filter",
      "in": "query",
      "description": "An OData filter expression that describes a subset of metrics to return.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:32"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:20": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///852?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fmetrics.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/metricDefinitions",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/metrics.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1elasticPools~1{elasticPoolName}~1metricDefinitions"
    ]
   },
   "get": {
    "tags": [
     "ElasticPools"
    ],
    "operationId": "ElasticPools_ListMetricDefinitions",
    "description": "Returns elastic pool metric definitions.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:15"
     },
     {
      "name": "elasticPoolName",
      "in": "path",
      "description": "The name of the elastic pool.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:35"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:21": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///853?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FrecommendedElasticPoolsDecoupled.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recommendedElasticPools/{recommendedElasticPoolName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/recommendedElasticPoolsDecoupled.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1recommendedElasticPools~1{recommendedElasticPoolName}"
    ]
   },
   "get": {
    "tags": [
     "RecommendedElasticPools"
    ],
    "operationId": "RecommendedElasticPools_Get",
    "description": "Gets a recommented elastic pool.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:16"
     },
     {
      "name": "recommendedElasticPoolName",
      "in": "path",
      "description": "The name of the recommended elastic pool to be retrieved.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:38"
        }
       }
      }
     }
    }
   }
  },
  "path:22": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///853?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FrecommendedElasticPoolsDecoupled.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recommendedElasticPools",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/recommendedElasticPoolsDecoupled.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1recommendedElasticPools"
    ]
   },
   "get": {
    "tags": [
     "RecommendedElasticPools"
    ],
    "operationId": "RecommendedElasticPools_ListByServer",
    "description": "Returns recommended elastic pools.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:16"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:39"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:23": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///853?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FrecommendedElasticPoolsDecoupled.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recommendedElasticPools/{recommendedElasticPoolName}/metrics",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/recommendedElasticPoolsDecoupled.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1recommendedElasticPools~1{recommendedElasticPoolName}~1metrics"
    ]
   },
   "get": {
    "tags": [
     "RecommendedElasticPools"
    ],
    "operationId": "RecommendedElasticPools_ListMetrics",
    "description": "Returns recommented elastic pool metrics.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:16"
     },
     {
      "name": "recommendedElasticPoolName",
      "in": "path",
      "description": "The name of the recommended elastic pool to be retrieved.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:40"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:24": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///854?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FreplicationLinks.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/replicationLinks/{linkId}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/replicationLinks.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1replicationLinks~1{linkId}"
    ]
   },
   "delete": {
    "tags": [
     "DatabaseReplicationLinks"
    ],
    "operationId": "ReplicationLinks_Delete",
    "description": "Deletes a database replication link. Cannot be done during failover.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:17"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database that has the replication link to be dropped.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "linkId",
      "in": "path",
      "description": "The ID of the replication link to be deleted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK"
     },
     "204": {
      "description": "NoContent"
     }
    }
   },
   "get": {
    "tags": [
     "DatabaseReplicationLinks"
    ],
    "operationId": "ReplicationLinks_Get",
    "description": "Gets a database replication link.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:17"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database to get the link for.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "linkId",
      "in": "path",
      "description": "The replication link ID to be retrieved.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:42"
        }
       }
      }
     }
    }
   }
  },
  "path:25": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///854?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FreplicationLinks.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/replicationLinks/{linkId}/failover",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/replicationLinks.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1replicationLinks~1{linkId}~1failover"
    ]
   },
   "post": {
    "tags": [
     "DatabaseReplicationLinks"
    ],
    "operationId": "ReplicationLinks_Failover",
    "description": "Sets which replica database is primary by failing over from the current primary replica database.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:17"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database that has the replication link to be failed over.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "linkId",
      "in": "path",
      "description": "The ID of the replication link to be failed over.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "202": {
      "description": "Accepted"
     },
     "204": {
      "description": "No Content"
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:26": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///854?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FreplicationLinks.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/replicationLinks/{linkId}/forceFailoverAllowDataLoss",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/replicationLinks.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1replicationLinks~1{linkId}~1forceFailoverAllowDataLoss"
    ]
   },
   "post": {
    "tags": [
     "DatabaseReplicationLinks"
    ],
    "operationId": "ReplicationLinks_FailoverAllowDataLoss",
    "description": "Sets which replica database is primary by failing over from the current primary replica database. This operation might result in data loss.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:17"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database that has the replication link to be failed over.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "linkId",
      "in": "path",
      "description": "The ID of the replication link to be failed over.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "202": {
      "description": "Accepted"
     },
     "204": {
      "description": "No Content"
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:27": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///854?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FreplicationLinks.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/replicationLinks",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/replicationLinks.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1replicationLinks"
    ]
   },
   "get": {
    "tags": [
     "DatabaseReplicationLinks"
    ],
    "operationId": "ReplicationLinks_ListByDatabase",
    "description": "Lists a database's replication links.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:17"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database to retrieve links for.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:43"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:28": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///855?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserverAzureADAdministrators.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/administrators/{administratorName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serverAzureADAdministrators.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1administrators~1{administratorName}"
    ]
   },
   "put": {
    "tags": [
     "ServerAdministrators"
    ],
    "operationId": "ServerAzureADAdministrators_CreateOrUpdate",
    "description": "Creates a new Server Active Directory Administrator or updates an existing server Active Directory Administrator.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:18"
     },
     {
      "$ref": "#/components/parameters/parameters:20"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:45"
       }
      }
     },
     "required": true,
     "description": "The required parameters for creating or updating an Active Directory Administrator.",
     "x-ms-requestBody-name": "properties"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:45"
        }
       }
      }
     },
     "201": {
      "description": "Created",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:45"
        }
       }
      }
     },
     "202": {
      "description": "Accepted",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:45"
        }
       }
      }
     }
    },
    "x-ms-long-running-operation": true
   },
   "delete": {
    "tags": [
     "ServerAdministrators"
    ],
    "operationId": "ServerAzureADAdministrators_Delete",
    "description": "Deletes an existing server Active Directory Administrator.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:18"
     },
     {
      "$ref": "#/components/parameters/parameters:20"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:45"
        }
       }
      }
     },
     "202": {
      "description": "Accepted",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:45"
        }
       }
      }
     },
     "204": {
      "description": "No Content",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:45"
        }
       }
      }
     }
    },
    "x-ms-long-running-operation": true
   },
   "get": {
    "tags": [
     "ServerAdministrators"
    ],
    "operationId": "ServerAzureADAdministrators_Get",
    "description": "Returns an server Administrator.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:18"
     },
     {
      "$ref": "#/components/parameters/parameters:20"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:45"
        }
       }
      }
     }
    }
   }
  },
  "path:29": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///855?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserverAzureADAdministrators.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/administrators",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serverAzureADAdministrators.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1administrators"
    ]
   },
   "get": {
    "tags": [
     "ServerAdministrators"
    ],
    "operationId": "ServerAzureADAdministrators_ListByServer",
    "description": "Returns a list of server Administrators.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:18"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:46"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:30": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///856?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserverCommunicationLinks.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/communicationLinks/{communicationLinkName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serverCommunicationLinks.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1communicationLinks~1{communicationLinkName}"
    ]
   },
   "delete": {
    "tags": [
     "ServerCommunicationLinks"
    ],
    "operationId": "ServerCommunicationLinks_Delete",
    "description": "Deletes a server communication link.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:21"
     },
     {
      "name": "communicationLinkName",
      "in": "path",
      "description": "The name of the server communication link.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK"
     }
    }
   },
   "get": {
    "tags": [
     "ServerCommunicationLinks"
    ],
    "operationId": "ServerCommunicationLinks_Get",
    "description": "Returns a server communication link.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:21"
     },
     {
      "name": "communicationLinkName",
      "in": "path",
      "description": "The name of the server communication link.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:48"
        }
       }
      }
     }
    }
   },
   "put": {
    "tags": [
     "ServerCommunicationLinks"
    ],
    "operationId": "ServerCommunicationLinks_CreateOrUpdate",
    "description": "Creates a server communication link.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:21"
     },
     {
      "name": "communicationLinkName",
      "in": "path",
      "description": "The name of the server communication link.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:48"
       }
      }
     },
     "required": true,
     "description": "The required parameters for creating a server communication link.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "201": {
      "description": "Created",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:48"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:31": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///856?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserverCommunicationLinks.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/communicationLinks",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serverCommunicationLinks.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1communicationLinks"
    ]
   },
   "get": {
    "tags": [
     "ServerCommunicationLinks"
    ],
    "operationId": "ServerCommunicationLinks_ListByServer",
    "description": "Gets a list of server communication links.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:21"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:49"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:32": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///857?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserviceObjectives.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/serviceObjectives/{serviceObjectiveName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serviceObjectives.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1serviceObjectives~1{serviceObjectiveName}"
    ]
   },
   "get": {
    "tags": [
     "ServiceObjectives"
    ],
    "operationId": "ServiceObjectives_Get",
    "description": "Gets a database service objective.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     },
     {
      "name": "serviceObjectiveName",
      "in": "path",
      "description": "The name of the service objective to retrieve.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:50"
        }
       }
      }
     }
    }
   }
  },
  "path:33": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///857?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserviceObjectives.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/serviceObjectives",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serviceObjectives.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1serviceObjectives"
    ]
   },
   "get": {
    "tags": [
     "ServiceObjectives"
    ],
    "operationId": "ServiceObjectives_ListByServer",
    "description": "Returns database service objectives.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:22"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:52"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:34": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/elasticPoolActivity",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1elasticPools~1{elasticPoolName}~1elasticPoolActivity"
    ]
   },
   "get": {
    "tags": [
     "ElasticPools"
    ],
    "operationId": "ElasticPoolActivities_ListByElasticPool",
    "description": "Returns elastic pool activities.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "name": "elasticPoolName",
      "in": "path",
      "description": "The name of the elastic pool for which to get the current activity.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:55"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:35": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/elasticPoolDatabaseActivity",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1elasticPools~1{elasticPoolName}~1elasticPoolDatabaseActivity"
    ]
   },
   "get": {
    "tags": [
     "ElasticPools"
    ],
    "operationId": "ElasticPoolDatabaseActivities_ListByElasticPool",
    "description": "Returns activity on databases inside of an elastic pool.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "name": "elasticPoolName",
      "in": "path",
      "description": "The name of the elastic pool.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:58"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:36": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/serviceTierAdvisors/{serviceTierAdvisorName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1serviceTierAdvisors~1{serviceTierAdvisorName}"
    ]
   },
   "get": {
    "tags": [
     "ServiceTierAdvisors"
    ],
    "operationId": "ServiceTierAdvisors_Get",
    "description": "Gets a service tier advisor.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of database.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "serviceTierAdvisorName",
      "in": "path",
      "description": "The name of service tier advisor.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:64"
        }
       }
      }
     }
    }
   }
  },
  "path:37": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/serviceTierAdvisors",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1serviceTierAdvisors"
    ]
   },
   "get": {
    "tags": [
     "ServiceTierAdvisors"
    ],
    "operationId": "ServiceTierAdvisors_ListByDatabase",
    "description": "Returns service tier advisors for specified database.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of database.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:67"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:38": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/transparentDataEncryption/{transparentDataEncryptionName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1transparentDataEncryption~1{transparentDataEncryptionName}"
    ]
   },
   "put": {
    "tags": [
     "TransparentDataEncryption"
    ],
    "operationId": "TransparentDataEncryptions_CreateOrUpdate",
    "description": "Creates or updates a database's transparent data encryption configuration.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database for which setting the transparent data encryption applies.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:25"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:62"
       }
      }
     },
     "required": true,
     "description": "The required parameters for creating or updating transparent data encryption.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 6,
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:62"
        }
       }
      }
     },
     "201": {
      "description": "Created",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:62"
        }
       }
      }
     }
    }
   },
   "get": {
    "tags": [
     "TransparentDataEncryption"
    ],
    "operationId": "TransparentDataEncryptions_Get",
    "description": "Gets a database's transparent data encryption configuration.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database for which the transparent data encryption applies.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:25"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:62"
        }
       }
      }
     }
    }
   }
  },
  "path:39": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/transparentDataEncryption/{transparentDataEncryptionName}/operationResults",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1transparentDataEncryption~1{transparentDataEncryptionName}~1operationResults"
    ]
   },
   "get": {
    "tags": [
     "TransparentDataEncryption"
    ],
    "operationId": "TransparentDataEncryptionActivities_ListByConfiguration",
    "description": "Returns a database's transparent data encryption operation result.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:23"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database for which the transparent data encryption applies.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:25"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:70"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:40": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///859?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fusages.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/usages",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/usages.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1usages"
    ]
   },
   "get": {
    "tags": [
     "Servers"
    ],
    "operationId": "ServerUsages_ListByServer",
    "description": "Returns server usages.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:26"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:72"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:41": {
   "x-ms-metadata": {
    "apiVersions": [
     "2014-04-01"
    ],
    "filename": [
     "mem:///859?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fusages.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/usages",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/usages.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1usages"
    ]
   },
   "get": {
    "tags": [
     "Databases"
    ],
    "operationId": "DatabaseUsages_ListByDatabase",
    "description": "Returns database usages.",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:352"
     },
     {
      "$ref": "#/components/parameters/parameters:351"
     },
     {
      "$ref": "#/components/parameters/parameters:353"
     },
     {
      "$ref": "#/components/parameters/parameters:26"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database.",
      "required": true,
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:74"
        }
       }
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   }
  },
  "path:42": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///860?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FdatabaseAutomaticTuning.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/automaticTuning/current",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/databaseAutomaticTuning.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1automaticTuning~1current"
    ]
   },
   "get": {
    "tags": [
     "DatabaseAutomaticTuning"
    ],
    "description": "Gets a database's automatic tuning.",
    "operationId": "DatabaseAutomaticTuning_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:29"
     },
     {
      "$ref": "#/components/parameters/parameters:30"
     },
     {
      "$ref": "#/components/parameters/parameters:32"
     },
     {
      "$ref": "#/components/parameters/parameters:27"
     },
     {
      "$ref": "#/components/parameters/parameters:28"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved database automatic tuning properties.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:77"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - The requested database was not found\n\n * 404 SubscriptionDoesNotHaveElasticPool - The requested elastic pool was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 405 NotSupported - This functionality is not supported.\n\n * 409 Conflict - Request could not be processed because of conflict in the request.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable."
     }
    }
   },
   "patch": {
    "tags": [
     "DatabaseAutomaticTuning"
    ],
    "description": "Update automatic tuning properties for target database.",
    "operationId": "DatabaseAutomaticTuning_Update",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:29"
     },
     {
      "$ref": "#/components/parameters/parameters:30"
     },
     {
      "$ref": "#/components/parameters/parameters:32"
     },
     {
      "$ref": "#/components/parameters/parameters:27"
     },
     {
      "$ref": "#/components/parameters/parameters:28"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:77"
       }
      }
     },
     "required": true,
     "description": "The requested automatic tuning resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the specified database automatic tuning settings.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:77"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 InvalidAutomaticTuningUpsertRequest - The update automatic tuning request body does not exist or has no properties object.\n\n * 400 InvalidAdvisorAutoExecuteStatus - Specified auto-execute status for the advisor is not allowed.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - The requested database was not found\n\n * 404 SubscriptionDoesNotHaveElasticPool - The requested elastic pool was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 405 NotSupported - This functionality is not supported.\n\n * 409 Conflict - Request could not be processed because of conflict in the request.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable."
     }
    }
   }
  },
  "path:43": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///861?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FencryptionProtectors.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/encryptionProtector",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/encryptionProtectors.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1encryptionProtector"
    ]
   },
   "get": {
    "tags": [
     "EncryptionProtectors"
    ],
    "description": "Gets a list of server encryption protectors",
    "operationId": "EncryptionProtectors_ListByServer",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:38"
     },
     {
      "$ref": "#/components/parameters/parameters:39"
     },
     {
      "$ref": "#/components/parameters/parameters:36"
     },
     {
      "$ref": "#/components/parameters/parameters:37"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of server encryption protector.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:78"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidKeyName - An invalid value was given for the server key name.\n\n * 400 InvalidKeyType - The create server key type is not supported.\n\n * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.\n\n * 400 InvalidEncryptionProtectorName - The encryption protector key name is not supported.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:44": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///861?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FencryptionProtectors.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/encryptionProtector/{encryptionProtectorName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/encryptionProtectors.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1encryptionProtector~1{encryptionProtectorName}"
    ]
   },
   "get": {
    "tags": [
     "EncryptionProtectors"
    ],
    "description": "Gets a server encryption protector.",
    "operationId": "EncryptionProtectors_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:38"
     },
     {
      "$ref": "#/components/parameters/parameters:39"
     },
     {
      "name": "encryptionProtectorName",
      "in": "path",
      "description": "The name of the encryption protector to be retrieved.",
      "required": true,
      "x-ms-enum": {
       "name": "EncryptionProtectorName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "current"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:36"
     },
     {
      "$ref": "#/components/parameters/parameters:37"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the specified server encryption protector.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:80"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidKeyName - An invalid value was given for the server key name.\n\n * 400 InvalidKeyType - The create server key type is not supported.\n\n * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.\n\n * 400 InvalidEncryptionProtectorName - The encryption protector key name is not supported.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   },
   "put": {
    "tags": [
     "EncryptionProtectors"
    ],
    "description": "Updates an existing encryption protector.",
    "operationId": "EncryptionProtectors_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:38"
     },
     {
      "$ref": "#/components/parameters/parameters:39"
     },
     {
      "name": "encryptionProtectorName",
      "in": "path",
      "description": "The name of the encryption protector to be updated.",
      "required": true,
      "x-ms-enum": {
       "name": "EncryptionProtectorName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "current"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:36"
     },
     {
      "$ref": "#/components/parameters/parameters:37"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:80"
       }
      }
     },
     "required": true,
     "description": "The requested encryption protector resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the encryption protector.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:80"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidKeyName - An invalid value was given for the server key name.\n\n * 400 InvalidKeyType - The create server key type is not supported.\n\n * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.\n\n * 400 InvalidEncryptionProtectorName - The encryption protector key name is not supported.\n\n * 400 AzureKeyVaultInvalidExpirationDate - The operation could not be completed because the Azure Key Vault key expiration date is invalid.\n\n * 400 AzureKeyVaultInvalidUri - An invalid response from Azure Key Vault. Please use a valid Azure Key Vault URI.\n\n * 400 AzureKeyVaultMalformedVaultUri - The provided Key Vault uri is not valid.\n\n * 401 AzureKeyVaultKeyDisabled - The operation could not be completed on the server because the Azure Key Vault key is disabled.\n\n * 401 AzureKeyVaultNoServerIdentity - The server identity is not correctly configured on server. Please contact support.\n\n * 401 AzureKeyVaultMissingPermissions - The server is mising required permissions on the Azure Key Vault. \n\n * 401 AdalGenericError - The operation could not be completed because an Azure Active Directory error was encountered.\n\n * 401 AdalServicePrincipalNotFound - The operation could not be completed because an Azure Active Directory library Serivce Principal not found error was encountered.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 ServerKeyNotFound - The requested server key was not found on the current subscription.\n\n * 409 ServerKeyUriAlreadyExists - The server key URI already exists on the server.\n\n * 409 ServerKeyDoesNotExists - The server key does not exist.\n\n * 409 AzureKeyVaultKeyNameNotFound - The operation could not be completed because the Azure Key Vault Key name does not exist.\n\n * 409 AzureKeyVaultKeyInUse - The key is currently being used by the server.\n\n * 409 ServerKeyNameAlreadyExists - The server key already exists on the server.\n\n * 503 AzureKeyVaultConnectionFailed - The operation could not be completed on the server because attempts to connect to Azure Key Vault have failed\n\n * 503 AzureKeyVaultGenericConnectionError - The operation could not be completed because an error was encountered when attempting to retrieve Key Vault information ."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:45": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1failoverGroups~1{failoverGroupName}"
    ]
   },
   "get": {
    "tags": [
     "FailoverGroups"
    ],
    "description": "Gets a failover group.",
    "operationId": "FailoverGroups_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:43"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server containing the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "failoverGroupName",
      "in": "path",
      "description": "The name of the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:41"
     },
     {
      "$ref": "#/components/parameters/parameters:42"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the specified failover group.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:85"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidDatabases - The provided databases in the request are not valid database resource IDs.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidPartner - The given partners field in create or update failover group request body is empty or invalid.\n\n * 400 FailoverGroupCreateOrUpdateRequestDuplicatePartner - One or more of the provided partner servers are already part of the failover group. Please make sure the primary server and all of the given partner servers are unique.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidDatabaseServer - One or more of the provided databases do not exist on the primary server of the failover group. Please make sure that all the databases exist on the primary server.\n\n * 400 FailoverGroupCreateOrUpdateRequestUnsupportedPartnerCount - Only one partner server is supported.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpoint - The readWriteEndpoint field is required for create or update requests.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalid - The create or update failover group request body is empty or invalid.\n\n * 400 FailoverGroupUpdateOrDeleteRequestOnSecondary - Modifications to the failover group are not allowed on a secondary server. Execute the request on the primary server.\n\n * 400 FailoverGroupCreateOrUpdateRequestNegativeGracePeriodValues - Grace period value for the read-write endpoint must be non-negative.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFields - The property failoverWithDataLossGracePeriodMinutes must be provided when failover policy Automatic is selected for the read-write endpoint.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteFailoverPolicy - The failoverPolicy field for the read-write endpoint is required for create or update requests.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFieldsForManualPolicy - Grace period value should not be provided when failover policy Manual is selected for the read-write endpoint.\n\n * 400 FailoverGroupCreateOrUpdateRequestReadOnlyPropertyModified - The create or update failover group request body should not modify the read-only property '{0}'.\n\n * 400 FailoverGroupFailoverRequestOnPrimary - The failover request should be initiated on the secondary server of failover group.\n\n * 400 FailoverGroupPartnerServerFromDifferentSubscription - Primary server and the partner servers of failover group are from different subscriptions. Cross subscription for servers of failover group is not allowed.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 400 InvalidFailoverGroupRegion - Servers specified in a Failover Group need to reside in different regions to provide isolation.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 FailoverGroupDoesNotExist - Failover group does not exist on a server.\n\n * 400 FailoverGroupNotSecondary - Failover cannot be initiated from the primary server in a Failover Group.\n\n * 400 PlannedFailoverTimedOutForDatabase - User invoked planned failover, it timed out, and a specific database appears to be to blame.\n\n * 400 PlannedFailoverTimedOut - User invoked planned failover, and it timed out while trying to contact the partner management service.\n\n * 400 DatabaseInFailoverGroupNotPrimary - GeoDR link for the database already exists, but its role is not 'Primary' or it is not continuous copy link.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 PartnerServerNotCompetible - The user is attempting to copy a database from a SAWA V1 server to a Sterling server or vice versa.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 ResourcePoolNotFound - Specified elastic pool does not exist in the specified logical server.\n\n * 400 GeoReplicationDatabaseNotSecondary - The operation expects the database to be a replication target.\n\n * 400 GeoReplicaLimitReached - The per-replica replication limit was reached.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 409 FailoverGroupAlreadyExists - Failover group already exists on a given server.\n\n * 409 FailoverGroupBusy - Failover Group is busy with another operation.\n\n * 409 DatabaseBelongsToOtherFailoverGroup - Database belongs to other Failover Group and cannot be consider a part of this one.\n\n * 409 DatabaseBeingAddedToFailoverGroup - The database is currently being added to Failover Group, customer needs to wait for this operation to finish to issue remove.\n\n * 409 DatabaseBeingRemovedFromFailoverGroup - The database is currently being removed from failover group, customer needs to wait for this operation to finish to issue add.\n\n * 409 FailoverGroupDnsRecordInUse - A duplicate DNS record exists for the requested endpoint.\n\n * 409 InvalidFailoverGroupName - Invalid Failover Group name was supplied.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidDatabaseStateForOperation - The operation is not allowed on the database in its current replication state.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 GeoReplicationCannotBecomePrimaryDuringUndo - User attempted to failover or force-terminate a geo-link while the secondary is in a state where it may not be physically consistent and so cannot enter the primary role.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 429 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    }
   },
   "put": {
    "tags": [
     "FailoverGroups"
    ],
    "description": "Creates or updates a failover group.",
    "operationId": "FailoverGroups_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:43"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server containing the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "failoverGroupName",
      "in": "path",
      "description": "The name of the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:41"
     },
     {
      "$ref": "#/components/parameters/parameters:42"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:85"
       }
      }
     },
     "required": true,
     "description": "The failover group parameters.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the failover group.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:85"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the failover group.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:85"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidDatabases - The provided databases in the request are not valid database resource IDs.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidPartner - The given partners field in create or update failover group request body is empty or invalid.\n\n * 400 FailoverGroupCreateOrUpdateRequestDuplicatePartner - One or more of the provided partner servers are already part of the failover group. Please make sure the primary server and all of the given partner servers are unique.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidDatabaseServer - One or more of the provided databases do not exist on the primary server of the failover group. Please make sure that all the databases exist on the primary server.\n\n * 400 FailoverGroupCreateOrUpdateRequestUnsupportedPartnerCount - Only one partner server is supported.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpoint - The readWriteEndpoint field is required for create or update requests.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalid - The create or update failover group request body is empty or invalid.\n\n * 400 FailoverGroupUpdateOrDeleteRequestOnSecondary - Modifications to the failover group are not allowed on a secondary server. Execute the request on the primary server.\n\n * 400 FailoverGroupCreateOrUpdateRequestNegativeGracePeriodValues - Grace period value for the read-write endpoint must be non-negative.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFields - The property failoverWithDataLossGracePeriodMinutes must be provided when failover policy Automatic is selected for the read-write endpoint.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteFailoverPolicy - The failoverPolicy field for the read-write endpoint is required for create or update requests.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFieldsForManualPolicy - Grace period value should not be provided when failover policy Manual is selected for the read-write endpoint.\n\n * 400 FailoverGroupCreateOrUpdateRequestReadOnlyPropertyModified - The create or update failover group request body should not modify the read-only property '{0}'.\n\n * 400 FailoverGroupFailoverRequestOnPrimary - The failover request should be initiated on the secondary server of failover group.\n\n * 400 FailoverGroupPartnerServerFromDifferentSubscription - Primary server and the partner servers of failover group are from different subscriptions. Cross subscription for servers of failover group is not allowed.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 400 InvalidFailoverGroupRegion - Servers specified in a Failover Group need to reside in different regions to provide isolation.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 FailoverGroupDoesNotExist - Failover group does not exist on a server.\n\n * 400 FailoverGroupNotSecondary - Failover cannot be initiated from the primary server in a Failover Group.\n\n * 400 PlannedFailoverTimedOutForDatabase - User invoked planned failover, it timed out, and a specific database appears to be to blame.\n\n * 400 PlannedFailoverTimedOut - User invoked planned failover, and it timed out while trying to contact the partner management service.\n\n * 400 DatabaseInFailoverGroupNotPrimary - GeoDR link for the database already exists, but its role is not 'Primary' or it is not continuous copy link.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 PartnerServerNotCompetible - The user is attempting to copy a database from a SAWA V1 server to a Sterling server or vice versa.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 ResourcePoolNotFound - Specified elastic pool does not exist in the specified logical server.\n\n * 400 GeoReplicationDatabaseNotSecondary - The operation expects the database to be a replication target.\n\n * 400 GeoReplicaLimitReached - The per-replica replication limit was reached.\n\n * 400 FailoverGroupCreateOrUpdatePartiallySucceeded - Some databases could not be added or removed.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 409 FailoverGroupAlreadyExists - Failover group already exists on a given server.\n\n * 409 FailoverGroupBusy - Failover Group is busy with another operation.\n\n * 409 DatabaseBelongsToOtherFailoverGroup - Database belongs to other Failover Group and cannot be consider a part of this one.\n\n * 409 DatabaseBeingAddedToFailoverGroup - The database is currently being added to Failover Group, customer needs to wait for this operation to finish to issue remove.\n\n * 409 DatabaseBeingRemovedFromFailoverGroup - The database is currently being removed from failover group, customer needs to wait for this operation to finish to issue add.\n\n * 409 FailoverGroupDnsRecordInUse - A duplicate DNS record exists for the requested endpoint.\n\n * 409 InvalidFailoverGroupName - Invalid Failover Group name was supplied.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidDatabaseStateForOperation - The operation is not allowed on the database in its current replication state.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 GeoReplicationCannotBecomePrimaryDuringUndo - User attempted to failover or force-terminate a geo-link while the secondary is in a state where it may not be physically consistent and so cannot enter the primary role.\n\n * 409 FailoverGroupUnableToPerformGroupOperationOnDatabases - The list of databases to add/remove to/from Failover Group contains errors that are preventing operation to complete.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 429 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   },
   "delete": {
    "tags": [
     "FailoverGroups"
    ],
    "description": "Deletes a failover group.",
    "operationId": "FailoverGroups_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:43"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server containing the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "failoverGroupName",
      "in": "path",
      "description": "The name of the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:41"
     },
     {
      "$ref": "#/components/parameters/parameters:42"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the failover group."
     },
     "202": {
      "description": "Accepted"
     },
     "204": {
      "description": "The specified failover group does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidDatabases - The provided databases in the request are not valid database resource IDs.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidPartner - The given partners field in create or update failover group request body is empty or invalid.\n\n * 400 FailoverGroupCreateOrUpdateRequestDuplicatePartner - One or more of the provided partner servers are already part of the failover group. Please make sure the primary server and all of the given partner servers are unique.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidDatabaseServer - One or more of the provided databases do not exist on the primary server of the failover group. Please make sure that all the databases exist on the primary server.\n\n * 400 FailoverGroupCreateOrUpdateRequestUnsupportedPartnerCount - Only one partner server is supported.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpoint - The readWriteEndpoint field is required for create or update requests.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalid - The create or update failover group request body is empty or invalid.\n\n * 400 FailoverGroupUpdateOrDeleteRequestOnSecondary - Modifications to the failover group are not allowed on a secondary server. Execute the request on the primary server.\n\n * 400 FailoverGroupCreateOrUpdateRequestNegativeGracePeriodValues - Grace period value for the read-write endpoint must be non-negative.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFields - The property failoverWithDataLossGracePeriodMinutes must be provided when failover policy Automatic is selected for the read-write endpoint.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteFailoverPolicy - The failoverPolicy field for the read-write endpoint is required for create or update requests.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFieldsForManualPolicy - Grace period value should not be provided when failover policy Manual is selected for the read-write endpoint.\n\n * 400 FailoverGroupCreateOrUpdateRequestReadOnlyPropertyModified - The create or update failover group request body should not modify the read-only property '{0}'.\n\n * 400 FailoverGroupFailoverRequestOnPrimary - The failover request should be initiated on the secondary server of failover group.\n\n * 400 FailoverGroupPartnerServerFromDifferentSubscription - Primary server and the partner servers of failover group are from different subscriptions. Cross subscription for servers of failover group is not allowed.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 400 InvalidFailoverGroupRegion - Servers specified in a Failover Group need to reside in different regions to provide isolation.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 FailoverGroupDoesNotExist - Failover group does not exist on a server.\n\n * 400 FailoverGroupNotSecondary - Failover cannot be initiated from the primary server in a Failover Group.\n\n * 400 PlannedFailoverTimedOutForDatabase - User invoked planned failover, it timed out, and a specific database appears to be to blame.\n\n * 400 PlannedFailoverTimedOut - User invoked planned failover, and it timed out while trying to contact the partner management service.\n\n * 400 DatabaseInFailoverGroupNotPrimary - GeoDR link for the database already exists, but its role is not 'Primary' or it is not continuous copy link.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 PartnerServerNotCompetible - The user is attempting to copy a database from a SAWA V1 server to a Sterling server or vice versa.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 ResourcePoolNotFound - Specified elastic pool does not exist in the specified logical server.\n\n * 400 GeoReplicationDatabaseNotSecondary - The operation expects the database to be a replication target.\n\n * 400 GeoReplicaLimitReached - The per-replica replication limit was reached.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 409 FailoverGroupAlreadyExists - Failover group already exists on a given server.\n\n * 409 FailoverGroupBusy - Failover Group is busy with another operation.\n\n * 409 DatabaseBelongsToOtherFailoverGroup - Database belongs to other Failover Group and cannot be consider a part of this one.\n\n * 409 DatabaseBeingAddedToFailoverGroup - The database is currently being added to Failover Group, customer needs to wait for this operation to finish to issue remove.\n\n * 409 DatabaseBeingRemovedFromFailoverGroup - The database is currently being removed from failover group, customer needs to wait for this operation to finish to issue add.\n\n * 409 FailoverGroupDnsRecordInUse - A duplicate DNS record exists for the requested endpoint.\n\n * 409 InvalidFailoverGroupName - Invalid Failover Group name was supplied.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidDatabaseStateForOperation - The operation is not allowed on the database in its current replication state.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 GeoReplicationCannotBecomePrimaryDuringUndo - User attempted to failover or force-terminate a geo-link while the secondary is in a state where it may not be physically consistent and so cannot enter the primary role.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 429 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   },
   "patch": {
    "tags": [
     "FailoverGroups"
    ],
    "description": "Updates a failover group.",
    "operationId": "FailoverGroups_Update",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:43"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server containing the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "failoverGroupName",
      "in": "path",
      "description": "The name of the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:41"
     },
     {
      "$ref": "#/components/parameters/parameters:42"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:86"
       }
      }
     },
     "required": true,
     "description": "The failover group parameters.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the failover group.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:85"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidDatabases - The provided databases in the request are not valid database resource IDs.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidPartner - The given partners field in create or update failover group request body is empty or invalid.\n\n * 400 FailoverGroupCreateOrUpdateRequestDuplicatePartner - One or more of the provided partner servers are already part of the failover group. Please make sure the primary server and all of the given partner servers are unique.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidDatabaseServer - One or more of the provided databases do not exist on the primary server of the failover group. Please make sure that all the databases exist on the primary server.\n\n * 400 FailoverGroupCreateOrUpdateRequestUnsupportedPartnerCount - Only one partner server is supported.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpoint - The readWriteEndpoint field is required for create or update requests.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalid - The create or update failover group request body is empty or invalid.\n\n * 400 FailoverGroupUpdateOrDeleteRequestOnSecondary - Modifications to the failover group are not allowed on a secondary server. Execute the request on the primary server.\n\n * 400 FailoverGroupCreateOrUpdateRequestNegativeGracePeriodValues - Grace period value for the read-write endpoint must be non-negative.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFields - The property failoverWithDataLossGracePeriodMinutes must be provided when failover policy Automatic is selected for the read-write endpoint.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteFailoverPolicy - The failoverPolicy field for the read-write endpoint is required for create or update requests.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFieldsForManualPolicy - Grace period value should not be provided when failover policy Manual is selected for the read-write endpoint.\n\n * 400 FailoverGroupCreateOrUpdateRequestReadOnlyPropertyModified - The create or update failover group request body should not modify the read-only property '{0}'.\n\n * 400 FailoverGroupFailoverRequestOnPrimary - The failover request should be initiated on the secondary server of failover group.\n\n * 400 FailoverGroupPartnerServerFromDifferentSubscription - Primary server and the partner servers of failover group are from different subscriptions. Cross subscription for servers of failover group is not allowed.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 400 InvalidFailoverGroupRegion - Servers specified in a Failover Group need to reside in different regions to provide isolation.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 FailoverGroupDoesNotExist - Failover group does not exist on a server.\n\n * 400 FailoverGroupNotSecondary - Failover cannot be initiated from the primary server in a Failover Group.\n\n * 400 PlannedFailoverTimedOutForDatabase - User invoked planned failover, it timed out, and a specific database appears to be to blame.\n\n * 400 PlannedFailoverTimedOut - User invoked planned failover, and it timed out while trying to contact the partner management service.\n\n * 400 DatabaseInFailoverGroupNotPrimary - GeoDR link for the database already exists, but its role is not 'Primary' or it is not continuous copy link.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 PartnerServerNotCompetible - The user is attempting to copy a database from a SAWA V1 server to a Sterling server or vice versa.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 ResourcePoolNotFound - Specified elastic pool does not exist in the specified logical server.\n\n * 400 GeoReplicationDatabaseNotSecondary - The operation expects the database to be a replication target.\n\n * 400 GeoReplicaLimitReached - The per-replica replication limit was reached.\n\n * 400 FailoverGroupCreateOrUpdatePartiallySucceeded - Some databases could not be added or removed.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 409 FailoverGroupAlreadyExists - Failover group already exists on a given server.\n\n * 409 FailoverGroupBusy - Failover Group is busy with another operation.\n\n * 409 DatabaseBelongsToOtherFailoverGroup - Database belongs to other Failover Group and cannot be consider a part of this one.\n\n * 409 DatabaseBeingAddedToFailoverGroup - The database is currently being added to Failover Group, customer needs to wait for this operation to finish to issue remove.\n\n * 409 DatabaseBeingRemovedFromFailoverGroup - The database is currently being removed from failover group, customer needs to wait for this operation to finish to issue add.\n\n * 409 FailoverGroupDnsRecordInUse - A duplicate DNS record exists for the requested endpoint.\n\n * 409 InvalidFailoverGroupName - Invalid Failover Group name was supplied.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidDatabaseStateForOperation - The operation is not allowed on the database in its current replication state.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 GeoReplicationCannotBecomePrimaryDuringUndo - User attempted to failover or force-terminate a geo-link while the secondary is in a state where it may not be physically consistent and so cannot enter the primary role.\n\n * 409 FailoverGroupUnableToPerformGroupOperationOnDatabases - The list of databases to add/remove to/from Failover Group contains errors that are preventing operation to complete.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 429 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:46": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1failoverGroups"
    ]
   },
   "get": {
    "tags": [
     "FailoverGroups"
    ],
    "description": "Lists the failover groups in a server.",
    "operationId": "FailoverGroups_ListByServer",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:43"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server containing the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:41"
     },
     {
      "$ref": "#/components/parameters/parameters:42"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the failover groups.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:88"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidDatabases - The provided databases in the request are not valid database resource IDs.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidPartner - The given partners field in create or update failover group request body is empty or invalid.\n\n * 400 FailoverGroupCreateOrUpdateRequestDuplicatePartner - One or more of the provided partner servers are already part of the failover group. Please make sure the primary server and all of the given partner servers are unique.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidDatabaseServer - One or more of the provided databases do not exist on the primary server of the failover group. Please make sure that all the databases exist on the primary server.\n\n * 400 FailoverGroupCreateOrUpdateRequestUnsupportedPartnerCount - Only one partner server is supported.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpoint - The readWriteEndpoint field is required for create or update requests.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalid - The create or update failover group request body is empty or invalid.\n\n * 400 FailoverGroupUpdateOrDeleteRequestOnSecondary - Modifications to the failover group are not allowed on a secondary server. Execute the request on the primary server.\n\n * 400 FailoverGroupCreateOrUpdateRequestNegativeGracePeriodValues - Grace period value for the read-write endpoint must be non-negative.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFields - The property failoverWithDataLossGracePeriodMinutes must be provided when failover policy Automatic is selected for the read-write endpoint.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteFailoverPolicy - The failoverPolicy field for the read-write endpoint is required for create or update requests.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFieldsForManualPolicy - Grace period value should not be provided when failover policy Manual is selected for the read-write endpoint.\n\n * 400 FailoverGroupCreateOrUpdateRequestReadOnlyPropertyModified - The create or update failover group request body should not modify the read-only property '{0}'.\n\n * 400 FailoverGroupFailoverRequestOnPrimary - The failover request should be initiated on the secondary server of failover group.\n\n * 400 FailoverGroupPartnerServerFromDifferentSubscription - Primary server and the partner servers of failover group are from different subscriptions. Cross subscription for servers of failover group is not allowed.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 400 InvalidFailoverGroupRegion - Servers specified in a Failover Group need to reside in different regions to provide isolation.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 FailoverGroupDoesNotExist - Failover group does not exist on a server.\n\n * 400 FailoverGroupNotSecondary - Failover cannot be initiated from the primary server in a Failover Group.\n\n * 400 PlannedFailoverTimedOutForDatabase - User invoked planned failover, it timed out, and a specific database appears to be to blame.\n\n * 400 PlannedFailoverTimedOut - User invoked planned failover, and it timed out while trying to contact the partner management service.\n\n * 400 DatabaseInFailoverGroupNotPrimary - GeoDR link for the database already exists, but its role is not 'Primary' or it is not continuous copy link.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 PartnerServerNotCompetible - The user is attempting to copy a database from a SAWA V1 server to a Sterling server or vice versa.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 ResourcePoolNotFound - Specified elastic pool does not exist in the specified logical server.\n\n * 400 GeoReplicationDatabaseNotSecondary - The operation expects the database to be a replication target.\n\n * 400 GeoReplicaLimitReached - The per-replica replication limit was reached.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 409 FailoverGroupAlreadyExists - Failover group already exists on a given server.\n\n * 409 FailoverGroupBusy - Failover Group is busy with another operation.\n\n * 409 DatabaseBelongsToOtherFailoverGroup - Database belongs to other Failover Group and cannot be consider a part of this one.\n\n * 409 DatabaseBeingAddedToFailoverGroup - The database is currently being added to Failover Group, customer needs to wait for this operation to finish to issue remove.\n\n * 409 DatabaseBeingRemovedFromFailoverGroup - The database is currently being removed from failover group, customer needs to wait for this operation to finish to issue add.\n\n * 409 FailoverGroupDnsRecordInUse - A duplicate DNS record exists for the requested endpoint.\n\n * 409 InvalidFailoverGroupName - Invalid Failover Group name was supplied.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidDatabaseStateForOperation - The operation is not allowed on the database in its current replication state.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 GeoReplicationCannotBecomePrimaryDuringUndo - User attempted to failover or force-terminate a geo-link while the secondary is in a state where it may not be physically consistent and so cannot enter the primary role.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 429 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:47": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}/failover",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1failoverGroups~1{failoverGroupName}~1failover"
    ]
   },
   "post": {
    "tags": [
     "FailoverGroups"
    ],
    "description": "Fails over from the current primary server to this server.",
    "operationId": "FailoverGroups_Failover",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:43"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server containing the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "failoverGroupName",
      "in": "path",
      "description": "The name of the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:41"
     },
     {
      "$ref": "#/components/parameters/parameters:42"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully failed over.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:85"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidDatabases - The provided databases in the request are not valid database resource IDs.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidPartner - The given partners field in create or update failover group request body is empty or invalid.\n\n * 400 FailoverGroupCreateOrUpdateRequestDuplicatePartner - One or more of the provided partner servers are already part of the failover group. Please make sure the primary server and all of the given partner servers are unique.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidDatabaseServer - One or more of the provided databases do not exist on the primary server of the failover group. Please make sure that all the databases exist on the primary server.\n\n * 400 FailoverGroupCreateOrUpdateRequestUnsupportedPartnerCount - Only one partner server is supported.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpoint - The readWriteEndpoint field is required for create or update requests.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalid - The create or update failover group request body is empty or invalid.\n\n * 400 FailoverGroupUpdateOrDeleteRequestOnSecondary - Modifications to the failover group are not allowed on a secondary server. Execute the request on the primary server.\n\n * 400 FailoverGroupCreateOrUpdateRequestNegativeGracePeriodValues - Grace period value for the read-write endpoint must be non-negative.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFields - The property failoverWithDataLossGracePeriodMinutes must be provided when failover policy Automatic is selected for the read-write endpoint.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteFailoverPolicy - The failoverPolicy field for the read-write endpoint is required for create or update requests.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFieldsForManualPolicy - Grace period value should not be provided when failover policy Manual is selected for the read-write endpoint.\n\n * 400 FailoverGroupCreateOrUpdateRequestReadOnlyPropertyModified - The create or update failover group request body should not modify the read-only property '{0}'.\n\n * 400 FailoverGroupFailoverRequestOnPrimary - The failover request should be initiated on the secondary server of failover group.\n\n * 400 FailoverGroupPartnerServerFromDifferentSubscription - Primary server and the partner servers of failover group are from different subscriptions. Cross subscription for servers of failover group is not allowed.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 400 InvalidFailoverGroupRegion - Servers specified in a Failover Group need to reside in different regions to provide isolation.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 FailoverGroupDoesNotExist - Failover group does not exist on a server.\n\n * 400 FailoverGroupNotSecondary - Failover cannot be initiated from the primary server in a Failover Group.\n\n * 400 PlannedFailoverTimedOutForDatabase - User invoked planned failover, it timed out, and a specific database appears to be to blame.\n\n * 400 PlannedFailoverTimedOut - User invoked planned failover, and it timed out while trying to contact the partner management service.\n\n * 400 DatabaseInFailoverGroupNotPrimary - GeoDR link for the database already exists, but its role is not 'Primary' or it is not continuous copy link.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 PartnerServerNotCompetible - The user is attempting to copy a database from a SAWA V1 server to a Sterling server or vice versa.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 ResourcePoolNotFound - Specified elastic pool does not exist in the specified logical server.\n\n * 400 GeoReplicationDatabaseNotSecondary - The operation expects the database to be a replication target.\n\n * 400 GeoReplicaLimitReached - The per-replica replication limit was reached.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 409 FailoverGroupAlreadyExists - Failover group already exists on a given server.\n\n * 409 FailoverGroupBusy - Failover Group is busy with another operation.\n\n * 409 DatabaseBelongsToOtherFailoverGroup - Database belongs to other Failover Group and cannot be consider a part of this one.\n\n * 409 DatabaseBeingAddedToFailoverGroup - The database is currently being added to Failover Group, customer needs to wait for this operation to finish to issue remove.\n\n * 409 DatabaseBeingRemovedFromFailoverGroup - The database is currently being removed from failover group, customer needs to wait for this operation to finish to issue add.\n\n * 409 FailoverGroupDnsRecordInUse - A duplicate DNS record exists for the requested endpoint.\n\n * 409 InvalidFailoverGroupName - Invalid Failover Group name was supplied.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidDatabaseStateForOperation - The operation is not allowed on the database in its current replication state.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 GeoReplicationCannotBecomePrimaryDuringUndo - User attempted to failover or force-terminate a geo-link while the secondary is in a state where it may not be physically consistent and so cannot enter the primary role.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 429 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:48": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}/forceFailoverAllowDataLoss",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1failoverGroups~1{failoverGroupName}~1forceFailoverAllowDataLoss"
    ]
   },
   "post": {
    "tags": [
     "FailoverGroups"
    ],
    "description": "Fails over from the current primary server to this server. This operation might result in data loss.",
    "operationId": "FailoverGroups_ForceFailoverAllowDataLoss",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:43"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server containing the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "failoverGroupName",
      "in": "path",
      "description": "The name of the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:41"
     },
     {
      "$ref": "#/components/parameters/parameters:42"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully failed over.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:85"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidDatabases - The provided databases in the request are not valid database resource IDs.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidPartner - The given partners field in create or update failover group request body is empty or invalid.\n\n * 400 FailoverGroupCreateOrUpdateRequestDuplicatePartner - One or more of the provided partner servers are already part of the failover group. Please make sure the primary server and all of the given partner servers are unique.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidDatabaseServer - One or more of the provided databases do not exist on the primary server of the failover group. Please make sure that all the databases exist on the primary server.\n\n * 400 FailoverGroupCreateOrUpdateRequestUnsupportedPartnerCount - Only one partner server is supported.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpoint - The readWriteEndpoint field is required for create or update requests.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalid - The create or update failover group request body is empty or invalid.\n\n * 400 FailoverGroupUpdateOrDeleteRequestOnSecondary - Modifications to the failover group are not allowed on a secondary server. Execute the request on the primary server.\n\n * 400 FailoverGroupCreateOrUpdateRequestNegativeGracePeriodValues - Grace period value for the read-write endpoint must be non-negative.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFields - The property failoverWithDataLossGracePeriodMinutes must be provided when failover policy Automatic is selected for the read-write endpoint.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteFailoverPolicy - The failoverPolicy field for the read-write endpoint is required for create or update requests.\n\n * 400 FailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFieldsForManualPolicy - Grace period value should not be provided when failover policy Manual is selected for the read-write endpoint.\n\n * 400 FailoverGroupCreateOrUpdateRequestReadOnlyPropertyModified - The create or update failover group request body should not modify the read-only property '{0}'.\n\n * 400 FailoverGroupFailoverRequestOnPrimary - The failover request should be initiated on the secondary server of failover group.\n\n * 400 FailoverGroupPartnerServerFromDifferentSubscription - Primary server and the partner servers of failover group are from different subscriptions. Cross subscription for servers of failover group is not allowed.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 400 InvalidFailoverGroupRegion - Servers specified in a Failover Group need to reside in different regions to provide isolation.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 FailoverGroupDoesNotExist - Failover group does not exist on a server.\n\n * 400 FailoverGroupNotSecondary - Failover cannot be initiated from the primary server in a Failover Group.\n\n * 400 PlannedFailoverTimedOutForDatabase - User invoked planned failover, it timed out, and a specific database appears to be to blame.\n\n * 400 PlannedFailoverTimedOut - User invoked planned failover, and it timed out while trying to contact the partner management service.\n\n * 400 DatabaseInFailoverGroupNotPrimary - GeoDR link for the database already exists, but its role is not 'Primary' or it is not continuous copy link.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 PartnerServerNotCompetible - The user is attempting to copy a database from a SAWA V1 server to a Sterling server or vice versa.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 ResourcePoolNotFound - Specified elastic pool does not exist in the specified logical server.\n\n * 400 GeoReplicationDatabaseNotSecondary - The operation expects the database to be a replication target.\n\n * 400 GeoReplicaLimitReached - The per-replica replication limit was reached.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 409 FailoverGroupAlreadyExists - Failover group already exists on a given server.\n\n * 409 FailoverGroupBusy - Failover Group is busy with another operation.\n\n * 409 DatabaseBelongsToOtherFailoverGroup - Database belongs to other Failover Group and cannot be consider a part of this one.\n\n * 409 DatabaseBeingAddedToFailoverGroup - The database is currently being added to Failover Group, customer needs to wait for this operation to finish to issue remove.\n\n * 409 DatabaseBeingRemovedFromFailoverGroup - The database is currently being removed from failover group, customer needs to wait for this operation to finish to issue add.\n\n * 409 FailoverGroupDnsRecordInUse - A duplicate DNS record exists for the requested endpoint.\n\n * 409 InvalidFailoverGroupName - Invalid Failover Group name was supplied.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidDatabaseStateForOperation - The operation is not allowed on the database in its current replication state.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 GeoReplicationCannotBecomePrimaryDuringUndo - User attempted to failover or force-terminate a geo-link while the secondary is in a state where it may not be physically consistent and so cannot enter the primary role.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 429 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:49": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/managedInstances",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Sql~1managedInstances"
    ]
   },
   "get": {
    "tags": [
     "ManagedInstances"
    ],
    "description": "Gets a list of all managed instances in the subscription.",
    "operationId": "ManagedInstances_List",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:46"
     },
     {
      "$ref": "#/components/parameters/parameters:47"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of managed instances.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:89"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:50": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances"
    ]
   },
   "get": {
    "tags": [
     "ManagedInstances"
    ],
    "description": "Gets a list of managed instances in a resource group.",
    "operationId": "ManagedInstances_ListByResourceGroup",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:48"
     },
     {
      "$ref": "#/components/parameters/parameters:46"
     },
     {
      "$ref": "#/components/parameters/parameters:47"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of managed instances.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:89"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 404 SubscriptionDoesNotHaveManagedInstance - The requested managed instance was not found\n\n * 404 ManagedInstanceNotInSubscriptionResourceGroup - Specified managed instance does not exist in the specified resource group and subscription.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 409 ConflictingManagedInstanceOperation - An operation is currently in progress for the managed instance.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:51": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}"
    ]
   },
   "get": {
    "tags": [
     "ManagedInstances"
    ],
    "description": "Gets a managed instance.",
    "operationId": "ManagedInstances_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:48"
     },
     {
      "$ref": "#/components/parameters/parameters:50"
     },
     {
      "$ref": "#/components/parameters/parameters:46"
     },
     {
      "$ref": "#/components/parameters/parameters:47"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the specified managed instance.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:91"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 404 SubscriptionDoesNotHaveManagedInstance - The requested managed instance was not found\n\n * 404 ManagedInstanceNotInSubscriptionResourceGroup - Specified managed instance does not exist in the specified resource group and subscription.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 409 ConflictingManagedInstanceOperation - An operation is currently in progress for the managed instance.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    }
   },
   "put": {
    "tags": [
     "ManagedInstances"
    ],
    "description": "Creates or updates a managed instance.",
    "operationId": "ManagedInstances_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:48"
     },
     {
      "$ref": "#/components/parameters/parameters:50"
     },
     {
      "$ref": "#/components/parameters/parameters:46"
     },
     {
      "$ref": "#/components/parameters/parameters:47"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:91"
       }
      }
     },
     "required": true,
     "description": "The requested managed instance resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 2,
    "responses": {
     "200": {
      "description": "Successfully updated the managed instance.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:91"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the managed instance.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:91"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 400 VnetInWrongRegion - Virtual network is in wrong region.\n\n * 400 VnetAddressRangeError - Virtual network address range is invalid.\n\n * 400 VnetConfigIsNotAllowed - Virtual network configuration is not allowed.\n\n * 400 ManagedInstanceClassicVnetNotSupported - Managed Instance cannot be joined to a classic virtual network.\n\n * 400 VnetConfigHasNsg - User tried to inject Managed Server subnet with Network Security Groups.\n\n * 400 VnetConfigHasNoUdr - User tried to inject Managed Server subnet without default User Defined Route Table.\n\n * 400 VnetConfigHasInvalidUdr - User tried to inject Managed Server subnet with invalid User Defined Route Table.\n\n * 400 VnetConfigHasInvalidDns - User tried to inject Managed Server subnet with invalid custom DNS.\n\n * 400 VnetConfigHasServiceEndpoints - User tried to inject Managed Server subnet with service endpoints.\n\n * 400 VnetSubnetIsInUse - User tried to inject Managed Server subnet that is not empty.\n\n * 400 VnetSubnetIsLocked - User tried to inject Managed Server subnet that is in locked scope.\n\n * 400 NameAlreadyExists - The provided name already exists.\n\n * 400 VnetSubnetIsGateway - User tried to inject Managed Server subnet that is Gateway subnet.\n\n * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes\n\n * 400 VnetSubnetIsUnknown - User tried to inject Managed Server subnet that does not exist.\n\n * 400 VnetSubnetConflictWithIntendedPolicy - User tried to inject Managed Server subnet that has a conflict with IntendedPolicy.\n\n * 400 VnetResourceNotFound - Resource not found: '{0}'.\n\n * 400 ManagedInstanceLocalStorageUpdateSloDisabled - Update SLO for managed instances with local storage is not supported yet.\n\n * 400 InvalidLoginName - The provided login name is invalid.\n\n * 400 InvalidUsername - Supplied user name contains invalid characters.\n\n * 400 PasswordTooShort - The provided password is too short\n\n * 400 RegionDoesNotSupportVersion - A user attempted to create a server of a specified version in a location where that server version isn't supported.\n\n * 400 PasswordTooLong - The provided password is too long.\n\n * 400 PasswordNotComplex - The provided password is not complex enough.\n\n * 400 InvalidParameterValue - An invalid value was given to a parameter.\n\n * 400 InvalidLocation - An invalid location was specified.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 InvalidCollation - Collation is not recognized by the server.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 RegionDoesNotAllowProvisioning - The selected location is not accepting new Windows Azure SQL Database servers. This may change at a later time.\n\n * 400 InvalidSubnetResourceId - The provided subnet resource ID for the managed instance create or update is invalid.\n\n * 400 InvalidManagedServerDnsZonePartner - Invalid DNS zone partner resource id specified in properties.\n\n * 404 SubscriptionDoesNotHaveManagedInstance - The requested managed instance was not found\n\n * 404 ManagedInstanceNotInSubscriptionResourceGroup - Specified managed instance does not exist in the specified resource group and subscription.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 405 InvalidVcoreValue - vCore value {0} is not valid. Please specify a valid vCore value.\n\n * 405 InvalidHardwareGenerationValue - HardwareGeneration {0} is not valid. Please specify a valid HardwareGeneration value.\n\n * 405 InvalidStorageSizeValue - \"Invalid storage size: {0} GB. Storage size must be specified between {1} and {2} gigabytes, in increments of {3} GB.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 ServerDisabled - Server is disabled.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.\n\n * 409 ServerAlreadyExists - Duplicate server name.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
     }
    },
    "x-ms-long-running-operation": true
   },
   "delete": {
    "tags": [
     "ManagedInstances"
    ],
    "description": "Deletes a managed instance.",
    "operationId": "ManagedInstances_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:48"
     },
     {
      "$ref": "#/components/parameters/parameters:50"
     },
     {
      "$ref": "#/components/parameters/parameters:46"
     },
     {
      "$ref": "#/components/parameters/parameters:47"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the managed instance."
     },
     "202": {
      "description": "Accepted"
     },
     "204": {
      "description": "The specified managed instance does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 404 SubscriptionDoesNotHaveManagedInstance - The requested managed instance was not found\n\n * 404 ManagedInstanceNotInSubscriptionResourceGroup - Specified managed instance does not exist in the specified resource group and subscription.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 409 ConflictingManagedInstanceOperation - An operation is currently in progress for the managed instance.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   },
   "patch": {
    "tags": [
     "ManagedInstances"
    ],
    "description": "Updates a managed instance.",
    "operationId": "ManagedInstances_Update",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:48"
     },
     {
      "$ref": "#/components/parameters/parameters:50"
     },
     {
      "$ref": "#/components/parameters/parameters:46"
     },
     {
      "$ref": "#/components/parameters/parameters:47"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:92"
       }
      }
     },
     "required": true,
     "description": "The requested managed instance resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 2,
    "responses": {
     "200": {
      "description": "Successfully updated the managed instance.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:91"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 400 VnetInWrongRegion - Virtual network is in wrong region.\n\n * 400 VnetAddressRangeError - Virtual network address range is invalid.\n\n * 400 VnetConfigIsNotAllowed - Virtual network configuration is not allowed.\n\n * 400 ManagedInstanceClassicVnetNotSupported - Managed Instance cannot be joined to a classic virtual network.\n\n * 400 VnetConfigHasNsg - User tried to inject Managed Server subnet with Network Security Groups.\n\n * 400 VnetConfigHasNoUdr - User tried to inject Managed Server subnet without default User Defined Route Table.\n\n * 400 VnetConfigHasInvalidUdr - User tried to inject Managed Server subnet with invalid User Defined Route Table.\n\n * 400 VnetConfigHasInvalidDns - User tried to inject Managed Server subnet with invalid custom DNS.\n\n * 400 VnetConfigHasServiceEndpoints - User tried to inject Managed Server subnet with service endpoints.\n\n * 400 VnetSubnetIsInUse - User tried to inject Managed Server subnet that is not empty.\n\n * 400 VnetSubnetIsLocked - User tried to inject Managed Server subnet that is in locked scope.\n\n * 400 NameAlreadyExists - The provided name already exists.\n\n * 400 VnetSubnetIsGateway - User tried to inject Managed Server subnet that is Gateway subnet.\n\n * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes\n\n * 400 VnetSubnetIsUnknown - User tried to inject Managed Server subnet that does not exist.\n\n * 400 VnetSubnetConflictWithIntendedPolicy - User tried to inject Managed Server subnet that has a conflict with IntendedPolicy.\n\n * 400 VnetResourceNotFound - Resource not found: '{0}'.\n\n * 400 ManagedInstanceLocalStorageUpdateSloDisabled - Update SLO for managed instances with local storage is not supported yet.\n\n * 400 InvalidLoginName - The provided login name is invalid.\n\n * 400 InvalidUsername - Supplied user name contains invalid characters.\n\n * 400 PasswordTooShort - The provided password is too short\n\n * 400 RegionDoesNotSupportVersion - A user attempted to create a server of a specified version in a location where that server version isn't supported.\n\n * 400 PasswordTooLong - The provided password is too long.\n\n * 400 PasswordNotComplex - The provided password is not complex enough.\n\n * 400 InvalidParameterValue - An invalid value was given to a parameter.\n\n * 400 InvalidLocation - An invalid location was specified.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 InvalidCollation - Collation is not recognized by the server.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 RegionDoesNotAllowProvisioning - The selected location is not accepting new Windows Azure SQL Database servers. This may change at a later time.\n\n * 400 InvalidSubnetResourceId - The provided subnet resource ID for the managed instance create or update is invalid.\n\n * 404 SubscriptionDoesNotHaveManagedInstance - The requested managed instance was not found\n\n * 404 ManagedInstanceNotInSubscriptionResourceGroup - Specified managed instance does not exist in the specified resource group and subscription.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 405 InvalidVcoreValue - vCore value {0} is not valid. Please specify a valid vCore value.\n\n * 405 InvalidHardwareGenerationValue - HardwareGeneration {0} is not valid. Please specify a valid HardwareGeneration value.\n\n * 405 InvalidStorageSizeValue - \"Invalid storage size: {0} GB. Storage size must be specified between {1} and {2} gigabytes, in increments of {3} GB.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 ServerDisabled - Server is disabled.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.\n\n * 409 ServerAlreadyExists - Duplicate server name.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:52": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///864?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Foperations.json"
    ],
    "path": "/providers/Microsoft.Sql/operations",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/operations.json#/paths/~1providers~1Microsoft.Sql~1operations"
    ]
   },
   "get": {
    "tags": [
     "Operations"
    ],
    "description": "Lists all of the available SQL Rest API operations.",
    "operationId": "Operations_List",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:57"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved operations.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:93"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:53": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///865?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FserverKeys.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/keys",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/serverKeys.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1keys"
    ]
   },
   "get": {
    "tags": [
     "ServerKeys"
    ],
    "description": "Gets a list of server keys.",
    "operationId": "ServerKeys_ListByServer",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:65"
     },
     {
      "$ref": "#/components/parameters/parameters:66"
     },
     {
      "$ref": "#/components/parameters/parameters:63"
     },
     {
      "$ref": "#/components/parameters/parameters:64"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of server keys.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:96"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidKeyName - An invalid value was given for the server key name.\n\n * 400 InvalidKeyType - The create server key type is not supported.\n\n * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:54": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///865?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FserverKeys.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/keys/{keyName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/serverKeys.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1keys~1{keyName}"
    ]
   },
   "get": {
    "tags": [
     "ServerKeys"
    ],
    "description": "Gets a server key.",
    "operationId": "ServerKeys_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:65"
     },
     {
      "$ref": "#/components/parameters/parameters:66"
     },
     {
      "name": "keyName",
      "in": "path",
      "description": "The name of the server key to be retrieved.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:63"
     },
     {
      "$ref": "#/components/parameters/parameters:64"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the specified server key.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:98"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidKeyName - An invalid value was given for the server key name.\n\n * 400 InvalidKeyType - The create server key type is not supported.\n\n * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   },
   "put": {
    "tags": [
     "ServerKeys"
    ],
    "description": "Creates or updates a server key.",
    "operationId": "ServerKeys_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:65"
     },
     {
      "$ref": "#/components/parameters/parameters:66"
     },
     {
      "name": "keyName",
      "in": "path",
      "description": "The name of the server key to be operated on (updated or created). The key name is required to be in the format of 'vault_key_version'. For example, if the keyId is https://YourVaultName.vault.azure.net/keys/YourKeyName/01234567890123456789012345678901, then the server key name should be formatted as: YourVaultName_YourKeyName_01234567890123456789012345678901",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:63"
     },
     {
      "$ref": "#/components/parameters/parameters:64"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:98"
       }
      }
     },
     "required": true,
     "description": "The requested server key resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the server key.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:98"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the server key.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:98"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidKeyName - An invalid value was given for the server key name.\n\n * 400 InvalidKeyType - The create server key type is not supported.\n\n * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.\n\n * 400 AzureKeyVaultInvalidExpirationDate - The operation could not be completed because the Azure Key Vault key expiration date is invalid.\n\n * 400 AzureKeyVaultInvalidUri - An invalid response from Azure Key Vault. Please use a valid Azure Key Vault URI.\n\n * 400 AzureKeyVaultMalformedVaultUri - The provided Key Vault uri is not valid.\n\n * 400 AzureKeyVaultInvalidExpirationDate - The operation could not be completed because the Azure Key Vault key expiration date is invalid.\n\n * 400 AzureKeyVaultInvalidUri - An invalid response from Azure Key Vault. Please use a valid Azure Key Vault URI.\n\n * 400 AzureKeyVaultMalformedVaultUri - The provided Key Vault uri is not valid.\n\n * 401 AzureKeyVaultKeyDisabled - The operation could not be completed on the server because the Azure Key Vault key is disabled.\n\n * 401 AzureKeyVaultNoServerIdentity - The server identity is not correctly configured on server. Please contact support.\n\n * 401 AzureKeyVaultMissingPermissions - The server is mising required permissions on the Azure Key Vault. \n\n * 401 AdalGenericError - The operation could not be completed because an Azure Active Directory error was encountered.\n\n * 401 AdalServicePrincipalNotFound - The operation could not be completed because an Azure Active Directory library Serivce Principal not found error was encountered.\n\n * 401 AzureKeyVaultKeyDisabled - The operation could not be completed on the server because the Azure Key Vault key is disabled.\n\n * 401 AzureKeyVaultNoServerIdentity - The server identity is not correctly configured on server. Please contact support.\n\n * 401 AzureKeyVaultMissingPermissions - The server is mising required permissions on the Azure Key Vault. \n\n * 401 AdalGenericError - The operation could not be completed because an Azure Active Directory error was encountered.\n\n * 401 AdalServicePrincipalNotFound - The operation could not be completed because an Azure Active Directory library Serivce Principal not found error was encountered.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 409 ServerKeyUriAlreadyExists - The server key URI already exists on the server.\n\n * 409 ServerKeyDoesNotExists - The server key does not exist.\n\n * 409 AzureKeyVaultKeyNameNotFound - The operation could not be completed because the Azure Key Vault Key name does not exist.\n\n * 409 AzureKeyVaultKeyInUse - The key is currently being used by the server.\n\n * 409 ServerKeyNameAlreadyExists - The server key already exists on the server.\n\n * 409 ServerKeyUriAlreadyExists - The server key URI already exists on the server.\n\n * 409 ServerKeyDoesNotExists - The server key does not exist.\n\n * 409 AzureKeyVaultKeyNameNotFound - The operation could not be completed because the Azure Key Vault Key name does not exist.\n\n * 409 AzureKeyVaultKeyInUse - The key is currently being used by the server.\n\n * 409 ServerKeyNameAlreadyExists - The server key already exists on the server.\n\n * 503 AzureKeyVaultConnectionFailed - The operation could not be completed on the server because attempts to connect to Azure Key Vault have failed\n\n * 503 AzureKeyVaultGenericConnectionError - The operation could not be completed because an error was encountered when attempting to retrieve Key Vault information .\n\n * 503 AzureKeyVaultConnectionFailed - The operation could not be completed on the server because attempts to connect to Azure Key Vault have failed\n\n * 503 AzureKeyVaultGenericConnectionError - The operation could not be completed because an error was encountered when attempting to retrieve Key Vault information ."
     }
    },
    "x-ms-long-running-operation": true
   },
   "delete": {
    "tags": [
     "ServerKeys"
    ],
    "description": "Deletes the server key with the given name.",
    "operationId": "ServerKeys_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:65"
     },
     {
      "$ref": "#/components/parameters/parameters:66"
     },
     {
      "name": "keyName",
      "in": "path",
      "description": "The name of the server key to be deleted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:63"
     },
     {
      "$ref": "#/components/parameters/parameters:64"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the server key."
     },
     "202": {
      "description": "Accepted"
     },
     "204": {
      "description": "The specified server key does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidKeyName - An invalid value was given for the server key name.\n\n * 400 InvalidKeyType - The create server key type is not supported.\n\n * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.\n\n * 400 AzureKeyVaultInvalidExpirationDate - The operation could not be completed because the Azure Key Vault key expiration date is invalid.\n\n * 400 AzureKeyVaultInvalidUri - An invalid response from Azure Key Vault. Please use a valid Azure Key Vault URI.\n\n * 400 AzureKeyVaultMalformedVaultUri - The provided Key Vault uri is not valid.\n\n * 401 AzureKeyVaultKeyDisabled - The operation could not be completed on the server because the Azure Key Vault key is disabled.\n\n * 401 AzureKeyVaultNoServerIdentity - The server identity is not correctly configured on server. Please contact support.\n\n * 401 AzureKeyVaultMissingPermissions - The server is mising required permissions on the Azure Key Vault. \n\n * 401 AdalGenericError - The operation could not be completed because an Azure Active Directory error was encountered.\n\n * 401 AdalServicePrincipalNotFound - The operation could not be completed because an Azure Active Directory library Serivce Principal not found error was encountered.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 409 ServerKeyUriAlreadyExists - The server key URI already exists on the server.\n\n * 409 ServerKeyDoesNotExists - The server key does not exist.\n\n * 409 AzureKeyVaultKeyNameNotFound - The operation could not be completed because the Azure Key Vault Key name does not exist.\n\n * 409 AzureKeyVaultKeyInUse - The key is currently being used by the server.\n\n * 409 ServerKeyNameAlreadyExists - The server key already exists on the server.\n\n * 503 AzureKeyVaultConnectionFailed - The operation could not be completed on the server because attempts to connect to Azure Key Vault have failed\n\n * 503 AzureKeyVaultGenericConnectionError - The operation could not be completed because an error was encountered when attempting to retrieve Key Vault information ."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:55": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///866?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fservers.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/servers",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/servers.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Sql~1servers"
    ]
   },
   "get": {
    "tags": [
     "Servers"
    ],
    "description": "Gets a list of all servers in the subscription.",
    "operationId": "Servers_List",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:68"
     },
     {
      "$ref": "#/components/parameters/parameters:69"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of servers.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:99"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:56": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///866?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fservers.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/servers.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers"
    ]
   },
   "get": {
    "tags": [
     "Servers"
    ],
    "description": "Gets a list of servers in a resource groups.",
    "operationId": "Servers_ListByResourceGroup",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:70"
     },
     {
      "$ref": "#/components/parameters/parameters:68"
     },
     {
      "$ref": "#/components/parameters/parameters:69"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of servers.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:99"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:57": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///866?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fservers.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/servers.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}"
    ]
   },
   "get": {
    "tags": [
     "Servers"
    ],
    "description": "Gets a server.",
    "operationId": "Servers_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:70"
     },
     {
      "$ref": "#/components/parameters/parameters:71"
     },
     {
      "$ref": "#/components/parameters/parameters:68"
     },
     {
      "$ref": "#/components/parameters/parameters:69"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the specified server.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:101"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   },
   "put": {
    "tags": [
     "Servers"
    ],
    "description": "Creates or updates a server.",
    "operationId": "Servers_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:70"
     },
     {
      "$ref": "#/components/parameters/parameters:71"
     },
     {
      "$ref": "#/components/parameters/parameters:68"
     },
     {
      "$ref": "#/components/parameters/parameters:69"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:101"
       }
      }
     },
     "required": true,
     "description": "The requested server resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 2,
    "responses": {
     "200": {
      "description": "Successfully updated the server.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:101"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the server.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:101"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 NameAlreadyExists - The provided name already exists.\n\n * 400 RegionDoesNotSupportVersion - A user attempted to create a server of a specified version in a location where that server version isn't supported.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 InvalidUsername - Supplied user name contains invalid characters.\n\n * 400 InvalidParameterValue - An invalid value was given to a parameter.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 InvalidLoginName - The provided login name is invalid.\n\n * 400 PasswordTooShort - The provided password is too short\n\n * 400 PasswordTooLong - The provided password is too long.\n\n * 400 PasswordNotComplex - The provided password is not complex enough.\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 400 InvalidLocation - An invalid location was specified.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 RegionDoesNotAllowProvisioning - The selected location is not accepting new Windows Azure SQL Database servers. This may change at a later time.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 ServerAlreadyExists - Duplicate server name.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ServerDisabled - Server is disabled.\n\n * 409 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.\n\n * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription.\n\n * 429 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
     }
    },
    "x-ms-long-running-operation": true
   },
   "delete": {
    "tags": [
     "Servers"
    ],
    "description": "Deletes a server.",
    "operationId": "Servers_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:70"
     },
     {
      "$ref": "#/components/parameters/parameters:71"
     },
     {
      "$ref": "#/components/parameters/parameters:68"
     },
     {
      "$ref": "#/components/parameters/parameters:69"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the server."
     },
     "202": {
      "description": "Accepted"
     },
     "204": {
      "description": "The specified server does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 429 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
     }
    },
    "x-ms-long-running-operation": true
   },
   "patch": {
    "tags": [
     "Servers"
    ],
    "description": "Updates a server.",
    "operationId": "Servers_Update",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:70"
     },
     {
      "$ref": "#/components/parameters/parameters:71"
     },
     {
      "$ref": "#/components/parameters/parameters:68"
     },
     {
      "$ref": "#/components/parameters/parameters:69"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:102"
       }
      }
     },
     "required": true,
     "description": "The requested server resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 2,
    "responses": {
     "200": {
      "description": "Successfully updated the server.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:101"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 NameAlreadyExists - The provided name already exists.\n\n * 400 RegionDoesNotSupportVersion - A user attempted to create a server of a specified version in a location where that server version isn't supported.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 InvalidUsername - Supplied user name contains invalid characters.\n\n * 400 InvalidParameterValue - An invalid value was given to a parameter.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 InvalidLoginName - The provided login name is invalid.\n\n * 400 PasswordTooShort - The provided password is too short\n\n * 400 PasswordTooLong - The provided password is too long.\n\n * 400 PasswordNotComplex - The provided password is not complex enough.\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 400 InvalidLocation - An invalid location was specified.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 RegionDoesNotAllowProvisioning - The selected location is not accepting new Windows Azure SQL Database servers. This may change at a later time.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 ServerAlreadyExists - Duplicate server name.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ServerDisabled - Server is disabled.\n\n * 409 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.\n\n * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription.\n\n * 429 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:58": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///867?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncAgents.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/syncAgents/{syncAgentName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncAgents.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1syncAgents~1{syncAgentName}"
    ]
   },
   "get": {
    "tags": [
     "SyncAgents"
    ],
    "description": "Gets a sync agent.",
    "operationId": "SyncAgents_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:75"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server on which the sync agent is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncAgentName",
      "in": "path",
      "description": "The name of the sync agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:73"
     },
     {
      "$ref": "#/components/parameters/parameters:74"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the specified sync agent.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:104"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncAgent - Sync agent is invalid.\n\n * 400 CannotDeleteInUseSyncAgent - Cannot delete sync agent because it is used by sync member.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance."
     }
    }
   },
   "put": {
    "tags": [
     "SyncAgents"
    ],
    "description": "Creates or updates a sync agent.",
    "operationId": "SyncAgents_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:75"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server on which the sync agent is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncAgentName",
      "in": "path",
      "description": "The name of the sync agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:73"
     },
     {
      "$ref": "#/components/parameters/parameters:74"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:104"
       }
      }
     },
     "required": true,
     "description": "The requested sync agent resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the sync agent.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:104"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the sync agent.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:104"
        }
       }
      }
     },
     "202": {
      "description": "Creating or updating the sync agent is in progress."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncAgent - Sync agent is invalid.\n\n * 400 CannotDeleteInUseSyncAgent - Cannot delete sync agent because it is used by sync member.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance."
     }
    },
    "x-ms-long-running-operation": true
   },
   "delete": {
    "tags": [
     "SyncAgents"
    ],
    "description": "Deletes a sync agent.",
    "operationId": "SyncAgents_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:75"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server on which the sync agent is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncAgentName",
      "in": "path",
      "description": "The name of the sync agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:73"
     },
     {
      "$ref": "#/components/parameters/parameters:74"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the sync agent."
     },
     "202": {
      "description": "Deleting the sync agent is in progress."
     },
     "204": {
      "description": "The specified sync agent does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncAgent - Sync agent is invalid.\n\n * 400 CannotDeleteInUseSyncAgent - Cannot delete sync agent because it is used by sync member.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:59": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///867?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncAgents.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/syncAgents",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncAgents.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1syncAgents"
    ]
   },
   "get": {
    "tags": [
     "SyncAgents"
    ],
    "description": "Lists sync agents in a server.",
    "operationId": "SyncAgents_ListByServer",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:75"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server on which the sync agent is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:73"
     },
     {
      "$ref": "#/components/parameters/parameters:74"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of sync agents.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:105"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncAgent - Sync agent is invalid.\n\n * 400 CannotDeleteInUseSyncAgent - Cannot delete sync agent because it is used by sync member.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:60": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///867?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncAgents.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/syncAgents/{syncAgentName}/generateKey",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncAgents.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1syncAgents~1{syncAgentName}~1generateKey"
    ]
   },
   "post": {
    "tags": [
     "SyncAgents"
    ],
    "description": "Generates a sync agent key.",
    "operationId": "SyncAgents_GenerateKey",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:75"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server on which the sync agent is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncAgentName",
      "in": "path",
      "description": "The name of the sync agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:73"
     },
     {
      "$ref": "#/components/parameters/parameters:74"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully generate a sync agent key.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:106"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncAgent - Sync agent is invalid.\n\n * 400 CannotDeleteInUseSyncAgent - Cannot delete sync agent because it is used by sync member.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance."
     }
    }
   }
  },
  "path:61": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///867?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncAgents.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/syncAgents/{syncAgentName}/linkedDatabases",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncAgents.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1syncAgents~1{syncAgentName}~1linkedDatabases"
    ]
   },
   "get": {
    "tags": [
     "SyncAgents"
    ],
    "description": "Lists databases linked to a sync agent.",
    "operationId": "SyncAgents_ListLinkedDatabases",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:75"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server on which the sync agent is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncAgentName",
      "in": "path",
      "description": "The name of the sync agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:73"
     },
     {
      "$ref": "#/components/parameters/parameters:74"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved sync agent linked SQL server databases.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:107"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncAgent - Sync agent is invalid.\n\n * 400 CannotDeleteInUseSyncAgent - Cannot delete sync agent because it is used by sync member.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:62": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/syncDatabaseIds",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Sql~1locations~1{locationName}~1syncDatabaseIds"
    ]
   },
   "get": {
    "tags": [
     "SyncGroups"
    ],
    "description": "Gets a collection of sync database ids.",
    "operationId": "SyncGroups_ListSyncDatabaseIds",
    "parameters": [
     {
      "name": "locationName",
      "in": "path",
      "description": "The name of the region where the resource is located.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:78"
     },
     {
      "$ref": "#/components/parameters/parameters:79"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved collection of sync database ids.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:110"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:63": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/refreshHubSchema",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1syncGroups~1{syncGroupName}~1refreshHubSchema"
    ]
   },
   "post": {
    "tags": [
     "SyncGroups"
    ],
    "description": "Refreshes a hub database schema.",
    "operationId": "SyncGroups_RefreshHubSchema",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:80"
     },
     {
      "$ref": "#/components/parameters/parameters:81"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database on which the sync group is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncGroupName",
      "in": "path",
      "description": "The name of the sync group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:78"
     },
     {
      "$ref": "#/components/parameters/parameters:79"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully refreshed a sync hub schema."
     },
     "202": {
      "description": "The sync hub schema refresh operation is on going."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncGroup - Sync group is invalid.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 CannotCreateSyncGroupDueToQuotaExceeded - Cannot create sync group due to quota exceeded."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:64": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/hubSchemas",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1syncGroups~1{syncGroupName}~1hubSchemas"
    ]
   },
   "get": {
    "tags": [
     "SyncGroups"
    ],
    "description": "Gets a collection of hub database schemas.",
    "operationId": "SyncGroups_ListHubSchemas",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:80"
     },
     {
      "$ref": "#/components/parameters/parameters:81"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database on which the sync group is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncGroupName",
      "in": "path",
      "description": "The name of the sync group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:78"
     },
     {
      "$ref": "#/components/parameters/parameters:79"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully get a sync group hub database schema.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:112"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncGroup - Sync group is invalid.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 CannotCreateSyncGroupDueToQuotaExceeded - Cannot create sync group due to quota exceeded."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:65": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/logs",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1syncGroups~1{syncGroupName}~1logs"
    ]
   },
   "get": {
    "tags": [
     "SyncGroups"
    ],
    "description": "Gets a collection of sync group logs.",
    "operationId": "SyncGroups_ListLogs",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:80"
     },
     {
      "$ref": "#/components/parameters/parameters:81"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database on which the sync group is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncGroupName",
      "in": "path",
      "description": "The name of the sync group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "startTime",
      "in": "query",
      "description": "Get logs generated after this time.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "endTime",
      "in": "query",
      "description": "Get logs generated before this time.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "type",
      "in": "query",
      "description": "The types of logs to retrieve.",
      "required": true,
      "schema": {
       "enum": [
        "All",
        "Error",
        "Warning",
        "Success"
       ],
       "type": "string"
      }
     },
     {
      "name": "continuationToken",
      "in": "query",
      "description": "The continuation token for this operation.",
      "required": false,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:78"
     },
     {
      "$ref": "#/components/parameters/parameters:79"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved sync group logs.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:116"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncGroup - Sync group is invalid.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 CannotCreateSyncGroupDueToQuotaExceeded - Cannot create sync group due to quota exceeded."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:66": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/cancelSync",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1syncGroups~1{syncGroupName}~1cancelSync"
    ]
   },
   "post": {
    "tags": [
     "SyncGroups"
    ],
    "description": "Cancels a sync group synchronization.",
    "operationId": "SyncGroups_CancelSync",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:80"
     },
     {
      "$ref": "#/components/parameters/parameters:81"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database on which the sync group is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncGroupName",
      "in": "path",
      "description": "The name of the sync group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:78"
     },
     {
      "$ref": "#/components/parameters/parameters:79"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully cancel a sync group synchronization."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncGroup - Sync group is invalid.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 CannotCreateSyncGroupDueToQuotaExceeded - Cannot create sync group due to quota exceeded."
     }
    }
   }
  },
  "path:67": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/triggerSync",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1syncGroups~1{syncGroupName}~1triggerSync"
    ]
   },
   "post": {
    "tags": [
     "SyncGroups"
    ],
    "description": "Triggers a sync group synchronization.",
    "operationId": "SyncGroups_TriggerSync",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:80"
     },
     {
      "$ref": "#/components/parameters/parameters:81"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database on which the sync group is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncGroupName",
      "in": "path",
      "description": "The name of the sync group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:78"
     },
     {
      "$ref": "#/components/parameters/parameters:79"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully triggered a sync group synchronization."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncGroup - Sync group is invalid.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 CannotCreateSyncGroupDueToQuotaExceeded - Cannot create sync group due to quota exceeded."
     }
    }
   }
  },
  "path:68": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1syncGroups~1{syncGroupName}"
    ]
   },
   "get": {
    "tags": [
     "SyncGroups"
    ],
    "description": "Gets a sync group.",
    "operationId": "SyncGroups_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:80"
     },
     {
      "$ref": "#/components/parameters/parameters:81"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database on which the sync group is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncGroupName",
      "in": "path",
      "description": "The name of the sync group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:78"
     },
     {
      "$ref": "#/components/parameters/parameters:79"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the specified sync group.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:122"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncGroup - Sync group is invalid.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 CannotCreateSyncGroupDueToQuotaExceeded - Cannot create sync group due to quota exceeded."
     }
    }
   },
   "put": {
    "tags": [
     "SyncGroups"
    ],
    "description": "Creates or updates a sync group.",
    "operationId": "SyncGroups_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:80"
     },
     {
      "$ref": "#/components/parameters/parameters:81"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database on which the sync group is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncGroupName",
      "in": "path",
      "description": "The name of the sync group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:78"
     },
     {
      "$ref": "#/components/parameters/parameters:79"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:122"
       }
      }
     },
     "required": true,
     "description": "The requested sync group resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 4,
    "responses": {
     "200": {
      "description": "Successfully updated the sync group.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:122"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the sync group.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:122"
        }
       }
      }
     },
     "202": {
      "description": "Creating or updating the sync group is in progress."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncGroup - Sync group is invalid.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 CannotCreateSyncGroupDueToQuotaExceeded - Cannot create sync group due to quota exceeded."
     }
    },
    "x-ms-long-running-operation": true
   },
   "delete": {
    "tags": [
     "SyncGroups"
    ],
    "description": "Deletes a sync group.",
    "operationId": "SyncGroups_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:80"
     },
     {
      "$ref": "#/components/parameters/parameters:81"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database on which the sync group is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncGroupName",
      "in": "path",
      "description": "The name of the sync group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:78"
     },
     {
      "$ref": "#/components/parameters/parameters:79"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the sync group."
     },
     "202": {
      "description": "Deleting the sync group is in progress."
     },
     "204": {
      "description": "The specified sync group does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncGroup - Sync group is invalid.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 CannotCreateSyncGroupDueToQuotaExceeded - Cannot create sync group due to quota exceeded."
     }
    },
    "x-ms-long-running-operation": true
   },
   "patch": {
    "tags": [
     "SyncGroups"
    ],
    "description": "Updates a sync group.",
    "operationId": "SyncGroups_Update",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:80"
     },
     {
      "$ref": "#/components/parameters/parameters:81"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database on which the sync group is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncGroupName",
      "in": "path",
      "description": "The name of the sync group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:78"
     },
     {
      "$ref": "#/components/parameters/parameters:79"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:122"
       }
      }
     },
     "required": true,
     "description": "The requested sync group resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 4,
    "responses": {
     "200": {
      "description": "Successfully updated the sync group.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:122"
        }
       }
      }
     },
     "202": {
      "description": "Updating the sync group is in progress."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncGroup - Sync group is invalid.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 CannotCreateSyncGroupDueToQuotaExceeded - Cannot create sync group due to quota exceeded."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:69": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1syncGroups"
    ]
   },
   "get": {
    "tags": [
     "SyncGroups"
    ],
    "description": "Lists sync groups under a hub database.",
    "operationId": "SyncGroups_ListByDatabase",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:80"
     },
     {
      "$ref": "#/components/parameters/parameters:81"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database on which the sync group is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:78"
     },
     {
      "$ref": "#/components/parameters/parameters:79"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of sync groups.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:123"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncGroup - Sync group is invalid.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 CannotCreateSyncGroupDueToQuotaExceeded - Cannot create sync group due to quota exceeded."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:70": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///869?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncMembers.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers/{syncMemberName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncMembers.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1syncGroups~1{syncGroupName}~1syncMembers~1{syncMemberName}"
    ]
   },
   "get": {
    "tags": [
     "SyncMembers"
    ],
    "description": "Gets a sync member.",
    "operationId": "SyncMembers_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:85"
     },
     {
      "$ref": "#/components/parameters/parameters:86"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database on which the sync group is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncGroupName",
      "in": "path",
      "description": "The name of the sync group on which the sync member is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncMemberName",
      "in": "path",
      "description": "The name of the sync member.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:83"
     },
     {
      "$ref": "#/components/parameters/parameters:84"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the specified sync member.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:125"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncGroup - Sync group is invalid.\n\n * 400 InvalidSyncMember - Sync member is invalid.\n\n * 400 InvalidSyncAgent - Sync agent is invalid.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 CannotCreateSyncMemberDueToQuotaExceeded - Cannot create sync member due to quota exceeded."
     }
    }
   },
   "put": {
    "tags": [
     "SyncMembers"
    ],
    "description": "Creates or updates a sync member.",
    "operationId": "SyncMembers_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:85"
     },
     {
      "$ref": "#/components/parameters/parameters:86"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database on which the sync group is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncGroupName",
      "in": "path",
      "description": "The name of the sync group on which the sync member is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncMemberName",
      "in": "path",
      "description": "The name of the sync member.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:83"
     },
     {
      "$ref": "#/components/parameters/parameters:84"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:125"
       }
      }
     },
     "required": true,
     "description": "The requested sync member resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "Successfully updated the sync member.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:125"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the sync member.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:125"
        }
       }
      }
     },
     "202": {
      "description": "Creating or updating the sync member is in progress."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncGroup - Sync group is invalid.\n\n * 400 InvalidSyncMember - Sync member is invalid.\n\n * 400 InvalidSyncAgent - Sync agent is invalid.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 CannotCreateSyncMemberDueToQuotaExceeded - Cannot create sync member due to quota exceeded."
     }
    },
    "x-ms-long-running-operation": true
   },
   "delete": {
    "tags": [
     "SyncMembers"
    ],
    "description": "Deletes a sync member.",
    "operationId": "SyncMembers_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:85"
     },
     {
      "$ref": "#/components/parameters/parameters:86"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database on which the sync group is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncGroupName",
      "in": "path",
      "description": "The name of the sync group on which the sync member is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncMemberName",
      "in": "path",
      "description": "The name of the sync member.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:83"
     },
     {
      "$ref": "#/components/parameters/parameters:84"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the sync member."
     },
     "202": {
      "description": "Deleting the sync member is in progress."
     },
     "204": {
      "description": "The specified sync member does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncGroup - Sync group is invalid.\n\n * 400 InvalidSyncMember - Sync member is invalid.\n\n * 400 InvalidSyncAgent - Sync agent is invalid.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 CannotCreateSyncMemberDueToQuotaExceeded - Cannot create sync member due to quota exceeded."
     }
    },
    "x-ms-long-running-operation": true
   },
   "patch": {
    "tags": [
     "SyncMembers"
    ],
    "description": "Updates an existing sync member.",
    "operationId": "SyncMembers_Update",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:85"
     },
     {
      "$ref": "#/components/parameters/parameters:86"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database on which the sync group is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncGroupName",
      "in": "path",
      "description": "The name of the sync group on which the sync member is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncMemberName",
      "in": "path",
      "description": "The name of the sync member.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:83"
     },
     {
      "$ref": "#/components/parameters/parameters:84"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:125"
       }
      }
     },
     "required": true,
     "description": "The requested sync member resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "Successfully updated the sync member.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:125"
        }
       }
      }
     },
     "202": {
      "description": "Updating the sync member is in progress."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncGroup - Sync group is invalid.\n\n * 400 InvalidSyncMember - Sync member is invalid.\n\n * 400 InvalidSyncAgent - Sync agent is invalid.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 CannotCreateSyncMemberDueToQuotaExceeded - Cannot create sync member due to quota exceeded."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:71": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///869?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncMembers.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncMembers.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1syncGroups~1{syncGroupName}~1syncMembers"
    ]
   },
   "get": {
    "tags": [
     "SyncMembers"
    ],
    "description": "Lists sync members in the given sync group.",
    "operationId": "SyncMembers_ListBySyncGroup",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:85"
     },
     {
      "$ref": "#/components/parameters/parameters:86"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database on which the sync group is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncGroupName",
      "in": "path",
      "description": "The name of the sync group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:83"
     },
     {
      "$ref": "#/components/parameters/parameters:84"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of sync members.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:126"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncGroup - Sync group is invalid.\n\n * 400 InvalidSyncMember - Sync member is invalid.\n\n * 400 InvalidSyncAgent - Sync agent is invalid.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 CannotCreateSyncMemberDueToQuotaExceeded - Cannot create sync member due to quota exceeded."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:72": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///869?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncMembers.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers/{syncMemberName}/schemas",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncMembers.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1syncGroups~1{syncGroupName}~1syncMembers~1{syncMemberName}~1schemas"
    ]
   },
   "get": {
    "tags": [
     "SyncMembers"
    ],
    "description": "Gets a sync member database schema.",
    "operationId": "SyncMembers_ListMemberSchemas",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:85"
     },
     {
      "$ref": "#/components/parameters/parameters:86"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database on which the sync group is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncGroupName",
      "in": "path",
      "description": "The name of the sync group on which the sync member is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncMemberName",
      "in": "path",
      "description": "The name of the sync member.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:83"
     },
     {
      "$ref": "#/components/parameters/parameters:84"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully get a sync member schema.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:127"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncGroup - Sync group is invalid.\n\n * 400 InvalidSyncMember - Sync member is invalid.\n\n * 400 InvalidSyncAgent - Sync agent is invalid.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 CannotCreateSyncMemberDueToQuotaExceeded - Cannot create sync member due to quota exceeded."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:73": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///869?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncMembers.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers/{syncMemberName}/refreshSchema",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncMembers.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1syncGroups~1{syncGroupName}~1syncMembers~1{syncMemberName}~1refreshSchema"
    ]
   },
   "post": {
    "tags": [
     "SyncMembers"
    ],
    "description": "Refreshes a sync member database schema.",
    "operationId": "SyncMembers_RefreshMemberSchema",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:85"
     },
     {
      "$ref": "#/components/parameters/parameters:86"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database on which the sync group is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncGroupName",
      "in": "path",
      "description": "The name of the sync group on which the sync member is hosted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "syncMemberName",
      "in": "path",
      "description": "The name of the sync member.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:83"
     },
     {
      "$ref": "#/components/parameters/parameters:84"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully refreshed a sync member schema."
     },
     "202": {
      "description": "The sync member schema refresh operation is on going."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidSyncGroupCreateOrUpdateRequest - The create or update sync group request body is empty.\n\n * 400 InvalidSyncMemberCreateOrUpdateRequest - The create or update sync member request body is empty.\n\n * 400 InvalidSyncAgentCreateOrUpdateRequest - The create or update sync agent request body is empty.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 InvalidSyncAgentResourceId - Invalid sync agent resource identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 InvalidSyncGroup - Sync group is invalid.\n\n * 400 InvalidSyncMember - Sync member is invalid.\n\n * 400 InvalidSyncAgent - Sync agent is invalid.\n\n * 400 InvalidSyncMetadataDatabase - Sync metadata database is invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 409 CannotCreateSyncMemberDueToQuotaExceeded - Cannot create sync member due to quota exceeded."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:74": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///870?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fusages.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/usages",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/usages.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Sql~1locations~1{locationName}~1usages"
    ]
   },
   "get": {
    "tags": [
     "SubscriptionUsages"
    ],
    "description": "Gets all subscription usage metrics in a given location.",
    "operationId": "SubscriptionUsages_ListByLocation",
    "parameters": [
     {
      "name": "locationName",
      "in": "path",
      "description": "The name of the region where the resource is located.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:88"
     },
     {
      "$ref": "#/components/parameters/parameters:89"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the subscription location usages.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:131"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 400 InvalidLocation - An invalid location was specified."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:75": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///870?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fusages.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/usages/{usageName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/usages.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Sql~1locations~1{locationName}~1usages~1{usageName}"
    ]
   },
   "get": {
    "tags": [
     "SubscriptionUsages"
    ],
    "description": "Gets a subscription usage metric.",
    "operationId": "SubscriptionUsages_Get",
    "parameters": [
     {
      "name": "locationName",
      "in": "path",
      "description": "The name of the region where the resource is located.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "usageName",
      "in": "path",
      "description": "Name of usage metric to return.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:88"
     },
     {
      "$ref": "#/components/parameters/parameters:89"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved particular subscription location usage.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:133"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 400 InvalidLocation - An invalid location was specified."
     }
    }
   }
  },
  "path:76": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///871?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FvirtualNetworkRules.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/virtualNetworkRules.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1virtualNetworkRules~1{virtualNetworkRuleName}"
    ]
   },
   "get": {
    "tags": [
     "VirtualNetworkRules"
    ],
    "description": "Gets a virtual network rule.",
    "operationId": "VirtualNetworkRules_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:99"
     },
     {
      "$ref": "#/components/parameters/parameters:100"
     },
     {
      "name": "virtualNetworkRuleName",
      "in": "path",
      "description": "The name of the virtual network rule.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:97"
     },
     {
      "$ref": "#/components/parameters/parameters:98"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved a specified virtual network rule.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:135"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   },
   "put": {
    "tags": [
     "VirtualNetworkRules"
    ],
    "description": "Creates or updates an existing virtual network rule.",
    "operationId": "VirtualNetworkRules_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:99"
     },
     {
      "$ref": "#/components/parameters/parameters:100"
     },
     {
      "name": "virtualNetworkRuleName",
      "in": "path",
      "description": "The name of the virtual network rule.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:97"
     },
     {
      "$ref": "#/components/parameters/parameters:98"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:135"
       }
      }
     },
     "required": true,
     "description": "The requested virtual Network Rule Resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated a virtual network rule.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:135"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created a virtual network rule.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:135"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 NullVirtualNetworkRequest - Virtual Network Request is Null\n\n * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null\n\n * 400 NullVirtualNetworkSubnetId - The Virtual Network Subnet Id is null\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 VirtualNetworkRuleNotEnabled - Azure SQL Server Virtual Network Rule feature is not enabled\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
     }
    },
    "x-ms-long-running-operation": true
   },
   "delete": {
    "tags": [
     "VirtualNetworkRules"
    ],
    "description": "Deletes the virtual network rule with the given name.",
    "operationId": "VirtualNetworkRules_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:99"
     },
     {
      "$ref": "#/components/parameters/parameters:100"
     },
     {
      "name": "virtualNetworkRuleName",
      "in": "path",
      "description": "The name of the virtual network rule.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:97"
     },
     {
      "$ref": "#/components/parameters/parameters:98"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the virtual network rule."
     },
     "202": {
      "description": "Accepted"
     },
     "204": {
      "description": "The specified virtual network rule does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 NullVirtualNetworkRequest - Virtual Network Request is Null\n\n * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:77": {
   "x-ms-metadata": {
    "apiVersions": [
     "2015-05-01-preview"
    ],
    "filename": [
     "mem:///871?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FvirtualNetworkRules.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/virtualNetworkRules",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/virtualNetworkRules.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1virtualNetworkRules"
    ]
   },
   "get": {
    "tags": [
     "VirtualNetworkRules"
    ],
    "description": "Gets a list of virtual network rules in a server.",
    "operationId": "VirtualNetworkRules_ListByServer",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:99"
     },
     {
      "$ref": "#/components/parameters/parameters:100"
     },
     {
      "$ref": "#/components/parameters/parameters:97"
     },
     {
      "$ref": "#/components/parameters/parameters:98"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of virtual network rules.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:136"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:78": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/extendedAuditingSettings/{blobAuditingPolicyName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1extendedAuditingSettings~1{blobAuditingPolicyName}"
    ]
   },
   "get": {
    "tags": [
     "BlobAuditing"
    ],
    "description": "Gets an extended database's blob auditing policy.",
    "operationId": "ExtendedDatabaseBlobAuditingPolicies_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:108"
     },
     {
      "$ref": "#/components/parameters/parameters:109"
     },
     {
      "$ref": "#/components/parameters/parameters:111"
     },
     {
      "$ref": "#/components/parameters/parameters:112"
     },
     {
      "$ref": "#/components/parameters/parameters:106"
     },
     {
      "$ref": "#/components/parameters/parameters:107"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the extended database blob auditing policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:140"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 BlobAuditingIsNotSupportedOnResourceType - Blob Auditing is currently not supported for this resource type.\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   },
   "put": {
    "tags": [
     "BlobAuditing"
    ],
    "description": "Creates or updates an extended database's blob auditing policy.",
    "operationId": "ExtendedDatabaseBlobAuditingPolicies_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:108"
     },
     {
      "$ref": "#/components/parameters/parameters:109"
     },
     {
      "$ref": "#/components/parameters/parameters:111"
     },
     {
      "$ref": "#/components/parameters/parameters:112"
     },
     {
      "$ref": "#/components/parameters/parameters:106"
     },
     {
      "$ref": "#/components/parameters/parameters:107"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:140"
       }
      }
     },
     "required": true,
     "description": "The extended database blob auditing policy.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 4,
    "responses": {
     "200": {
      "description": "Successfully set the extended database blob auditing policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:140"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the extended database blob auditing policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:140"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 BlobAuditingIsNotSupportedOnResourceType - Blob Auditing is currently not supported for this resource type.\n\n * 400 BlobAuditingPredicateExpressionSyntaxError - Invalid value of parameter 'predicateExpression'.\n\n * 400 InvalidDatabaseBlobAuditingPolicyCreateRequest - The create database blob auditing policy request does not exist or has no properties object.\n\n * 400 InvalidBlobAuditActionsAndGroups - Invalid audit actions or action groups.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 400 BlobAuditingPredicateExpressionEmpty - Invalid parameter 'predicateExpression', value can not be empty.\n\n * 400 BlobAuditingInsufficientStorageAccountPermissions - Insufficient read or write permissions on the provided storage account.\n\n * 400 BlobAuditingStorageAccountIsDisabled - The provided storage account is disabled.\n\n * 400 BlobAuditingInvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 BlobAuditingInvalidStorageAccountCredentials - The provided storage account or access key is not valid.\n\n * 400 BlobAuditingIsNotSupportedOnGeoDr - Blob auditing can be configured on primary databases only.\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   }
  },
  "path:79": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/extendedAuditingSettings/{blobAuditingPolicyName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1extendedAuditingSettings~1{blobAuditingPolicyName}"
    ]
   },
   "get": {
    "tags": [
     "BlobAuditing"
    ],
    "description": "Gets an extended server's blob auditing policy.",
    "operationId": "ExtendedServerBlobAuditingPolicies_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:108"
     },
     {
      "$ref": "#/components/parameters/parameters:109"
     },
     {
      "$ref": "#/components/parameters/parameters:112"
     },
     {
      "$ref": "#/components/parameters/parameters:106"
     },
     {
      "$ref": "#/components/parameters/parameters:107"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the extended server blob auditing policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:142"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    }
   },
   "put": {
    "tags": [
     "BlobAuditing"
    ],
    "description": "Creates or updates an extended server's blob auditing policy.",
    "operationId": "ExtendedServerBlobAuditingPolicies_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:108"
     },
     {
      "$ref": "#/components/parameters/parameters:109"
     },
     {
      "$ref": "#/components/parameters/parameters:112"
     },
     {
      "$ref": "#/components/parameters/parameters:106"
     },
     {
      "$ref": "#/components/parameters/parameters:107"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:142"
       }
      }
     },
     "required": true,
     "description": "Properties of extended blob auditing policy",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the extended auditing settings.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:142"
        }
       }
      }
     },
     "202": {
      "description": "Updating the extended auditing settings is in progress."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidServerBlobAuditingPolicyCreateRequest - The create server blob auditing policy request does not exist or has no properties object.\n\n * 400 InvalidBlobAuditActionsAndGroups - Invalid audit actions or action groups.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 400 BlobAuditingPredicateExpressionEmpty - Invalid parameter 'predicateExpression', value can not be empty.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 409 ServerBlobAuditingPolicyInProgress - Set server blob auditing is already in progress."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:80": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/auditingSettings/{blobAuditingPolicyName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1auditingSettings~1{blobAuditingPolicyName}"
    ]
   },
   "get": {
    "tags": [
     "BlobAuditing"
    ],
    "description": "Gets a server's blob auditing policy.",
    "operationId": "ServerBlobAuditingPolicies_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:108"
     },
     {
      "$ref": "#/components/parameters/parameters:109"
     },
     {
      "$ref": "#/components/parameters/parameters:112"
     },
     {
      "$ref": "#/components/parameters/parameters:106"
     },
     {
      "$ref": "#/components/parameters/parameters:107"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the server blob auditing policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:144"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    }
   },
   "put": {
    "tags": [
     "BlobAuditing"
    ],
    "description": "Creates or updates a server's blob auditing policy.",
    "operationId": "ServerBlobAuditingPolicies_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:108"
     },
     {
      "$ref": "#/components/parameters/parameters:109"
     },
     {
      "$ref": "#/components/parameters/parameters:112"
     },
     {
      "$ref": "#/components/parameters/parameters:106"
     },
     {
      "$ref": "#/components/parameters/parameters:107"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:144"
       }
      }
     },
     "required": true,
     "description": "Properties of blob auditing policy",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the auditing settings.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:144"
        }
       }
      }
     },
     "202": {
      "description": "Updating the auditing settings is in progress."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidServerBlobAuditingPolicyCreateRequest - The create server blob auditing policy request does not exist or has no properties object.\n\n * 400 InvalidBlobAuditActionsAndGroups - Invalid audit actions or action groups.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 409 ServerBlobAuditingPolicyInProgress - Set server blob auditing is already in progress."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:81": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/auditingSettings/{blobAuditingPolicyName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1auditingSettings~1{blobAuditingPolicyName}"
    ]
   },
   "get": {
    "tags": [
     "BlobAuditing"
    ],
    "description": "Gets a database's blob auditing policy.",
    "operationId": "DatabaseBlobAuditingPolicies_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:108"
     },
     {
      "$ref": "#/components/parameters/parameters:109"
     },
     {
      "$ref": "#/components/parameters/parameters:111"
     },
     {
      "$ref": "#/components/parameters/parameters:112"
     },
     {
      "$ref": "#/components/parameters/parameters:106"
     },
     {
      "$ref": "#/components/parameters/parameters:107"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the database blob auditing policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:146"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 BlobAuditingIsNotSupportedOnResourceType - Blob Auditing is currently not supported for this resource type.\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   },
   "put": {
    "tags": [
     "BlobAuditing"
    ],
    "description": "Creates or updates a database's blob auditing policy.",
    "operationId": "DatabaseBlobAuditingPolicies_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:108"
     },
     {
      "$ref": "#/components/parameters/parameters:109"
     },
     {
      "$ref": "#/components/parameters/parameters:111"
     },
     {
      "$ref": "#/components/parameters/parameters:112"
     },
     {
      "$ref": "#/components/parameters/parameters:106"
     },
     {
      "$ref": "#/components/parameters/parameters:107"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:146"
       }
      }
     },
     "required": true,
     "description": "The database blob auditing policy.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 4,
    "responses": {
     "200": {
      "description": "Successfully set the database blob auditing policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:146"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the database blob auditing policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:146"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 BlobAuditingIsNotSupportedOnResourceType - Blob Auditing is currently not supported for this resource type.\n\n * 400 InvalidDatabaseBlobAuditingPolicyCreateRequest - The create database blob auditing policy request does not exist or has no properties object.\n\n * 400 InvalidBlobAuditActionsAndGroups - Invalid audit actions or action groups.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 400 BlobAuditingInsufficientStorageAccountPermissions - Insufficient read or write permissions on the provided storage account.\n\n * 400 BlobAuditingStorageAccountIsDisabled - The provided storage account is disabled.\n\n * 400 BlobAuditingInvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 BlobAuditingInvalidStorageAccountCredentials - The provided storage account or access key is not valid.\n\n * 400 BlobAuditingIsNotSupportedOnGeoDr - Blob auditing can be configured on primary databases only.\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   }
  },
  "path:82": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///873?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessmentBaselines.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessmentBaselines.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1vulnerabilityAssessments~1{vulnerabilityAssessmentName}~1rules~1{ruleId}~1baselines~1{baselineName}"
    ]
   },
   "get": {
    "tags": [
     "DatabaseVulnerabilityAssesmentRuleBaselines"
    ],
    "description": "Gets a database's vulnerability assessment rule baseline.",
    "operationId": "DatabaseVulnerabilityAssessmentRuleBaselines_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:118"
     },
     {
      "$ref": "#/components/parameters/parameters:119"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database for which the vulnerability assessment rule baseline is defined.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "name": "ruleId",
      "in": "path",
      "description": "The vulnerability assessment rule ID.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "baselineName",
      "in": "path",
      "description": "The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentPolicyBaselineName",
       "modelAsString": false,
       "oldModelAsString": false
      },
      "schema": {
       "enum": [
        "master",
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:116"
     },
     {
      "$ref": "#/components/parameters/parameters:117"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully got the vulnerability assessment rule baseline.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:149"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidDatabaseVulnerabilityAssessmentOperationRequest - The vulnerability assessment operation request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 VulnerabilityAssessmentInvalidStorageAccount - The storage account '{0}' that was defined in the policy is invalid.\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 404 VulnerabilityAssessmentRuleDoesNotExists - Rule '{0}' does not exist.\n\n * 404 VulnerabilityAssessmentBaselineDoesNotExists - Baseline does not exist for rule '{0}'\n\n * 500 VulnerabilityAssessmentStorageAuthenticationFailed - Could not authenticate to storage account '{0}' .\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   },
   "put": {
    "tags": [
     "DatabaseVulnerabilityAssesmentRuleBaselines"
    ],
    "description": "Creates or updates a database's vulnerability assessment rule baseline.",
    "operationId": "DatabaseVulnerabilityAssessmentRuleBaselines_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:118"
     },
     {
      "$ref": "#/components/parameters/parameters:119"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database for which the vulnerability assessment rule baseline is defined.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "name": "ruleId",
      "in": "path",
      "description": "The vulnerability assessment rule ID.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "baselineName",
      "in": "path",
      "description": "The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentPolicyBaselineName",
       "modelAsString": false,
       "oldModelAsString": false
      },
      "schema": {
       "enum": [
        "master",
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:116"
     },
     {
      "$ref": "#/components/parameters/parameters:117"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:149"
       }
      }
     },
     "required": true,
     "description": "The requested rule baseline resource.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 6,
    "responses": {
     "200": {
      "description": "Successfully set the vulnerability assessment rule baseline.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:149"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidDatabaseVulnerabilityAssessmentOperationRequest - The vulnerability assessment operation request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 VulnerabilityAssessmentInvalidStorageAccount - The storage account '{0}' that was defined in the policy is invalid.\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 404 VulnerabilityAssessmentRuleDoesNotExists - Rule '{0}' does not exist.\n\n * 404 VulnerabilityAssessmentBaselineDoesNotExists - Baseline does not exist for rule '{0}'\n\n * 500 VulnerabilityAssessmentStorageAuthenticationFailed - Could not authenticate to storage account '{0}' .\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   },
   "delete": {
    "tags": [
     "DatabaseVulnerabilityAssesmentRuleBaselines"
    ],
    "description": "Removes the database's vulnerability assessment rule baseline.",
    "operationId": "DatabaseVulnerabilityAssessmentRuleBaselines_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:118"
     },
     {
      "$ref": "#/components/parameters/parameters:119"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database for which the vulnerability assessment rule baseline is defined.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "name": "ruleId",
      "in": "path",
      "description": "The vulnerability assessment rule ID.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "baselineName",
      "in": "path",
      "description": "The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentPolicyBaselineName",
       "modelAsString": false,
       "oldModelAsString": false
      },
      "schema": {
       "enum": [
        "master",
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:116"
     },
     {
      "$ref": "#/components/parameters/parameters:117"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully removed the database vulnerability assessment rule baseline."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidDatabaseVulnerabilityAssessmentOperationRequest - The vulnerability assessment operation request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 VulnerabilityAssessmentInvalidStorageAccount - The storage account '{0}' that was defined in the policy is invalid.\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 404 VulnerabilityAssessmentRuleDoesNotExists - Rule '{0}' does not exist.\n\n * 404 VulnerabilityAssessmentBaselineDoesNotExists - Baseline does not exist for rule '{0}'\n\n * 500 VulnerabilityAssessmentStorageAuthenticationFailed - Could not authenticate to storage account '{0}' .\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   }
  },
  "path:83": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///874?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessments.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessments.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1vulnerabilityAssessments~1{vulnerabilityAssessmentName}"
    ]
   },
   "get": {
    "tags": [
     "DatabaseVulnerabilityAssessments"
    ],
    "description": "Gets the database's vulnerability assessment.",
    "operationId": "DatabaseVulnerabilityAssessments_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:128"
     },
     {
      "$ref": "#/components/parameters/parameters:129"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database for which the vulnerability assessment is defined.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:126"
     },
     {
      "$ref": "#/components/parameters/parameters:127"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the database vulnerability assessment.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:152"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature is not valid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   },
   "put": {
    "tags": [
     "DatabaseVulnerabilityAssessments"
    ],
    "description": "Creates or updates the database's vulnerability assessment.",
    "operationId": "DatabaseVulnerabilityAssessments_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:128"
     },
     {
      "$ref": "#/components/parameters/parameters:129"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database for which the vulnerability assessment is defined.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:126"
     },
     {
      "$ref": "#/components/parameters/parameters:127"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:152"
       }
      }
     },
     "required": true,
     "description": "The requested resource.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 4,
    "responses": {
     "200": {
      "description": "Successfully set the vulnerability assessment.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:152"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the vulnerability assessment.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:152"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature is not valid.\n\n * 400 InvalidDatabaseVulnerabilityAssessmentOperationRequest - The vulnerability assessment operation request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   },
   "delete": {
    "tags": [
     "DatabaseVulnerabilityAssessments"
    ],
    "description": "Removes the database's vulnerability assessment.",
    "operationId": "DatabaseVulnerabilityAssessments_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:128"
     },
     {
      "$ref": "#/components/parameters/parameters:129"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database for which the vulnerability assessment is defined.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:126"
     },
     {
      "$ref": "#/components/parameters/parameters:127"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully removed the database vulnerability assessment."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature is not valid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   }
  },
  "path:84": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents"
    ]
   },
   "get": {
    "tags": [
     "JobAgents"
    ],
    "description": "Gets a list of job agents in a server.",
    "operationId": "JobAgents_ListByServer",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of job agents.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:153"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:85": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}"
    ]
   },
   "get": {
    "tags": [
     "JobAgents"
    ],
    "description": "Gets a job agent.",
    "operationId": "JobAgents_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent to be retrieved.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the specified job agent.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:155"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server."
     }
    }
   },
   "put": {
    "tags": [
     "JobAgents"
    ],
    "description": "Creates or updates a job agent.",
    "operationId": "JobAgents_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent to be created or updated.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:155"
       }
      }
     },
     "required": true,
     "description": "The requested job agent resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the job agent.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:155"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the job agent.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:155"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 400 MissingSkuName - Sku name is rerquired.\n\n * 400 InvalidDatabaseResourceId - Invalid database resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 DatabaseDoesNotExist - The requested database was not found\n\n * 400 JobAgentExceededQuota - Could not create job agent because it would exceed the quota.\n\n * 400 JobAgentAlreadyExists - The job agent already exists on the server.\n\n * 400 JobAgentDatabaseEditionUnsupported - The specified database's service level objective is not supported for use as a job agent database.\n\n * 400 JobAgentDatabaseSecondary - A job agent cannot be linked to a geo-secondary database.\n\n * 400 JobAgentDatabaseAlreadyLinked - The specified database is already linked to another job agent.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 SubscriptionNotFound - The requested subscription was not found.\n\n * 404 PropertyChangeUnsupported - Property cannot be modified."
     }
    },
    "x-ms-long-running-operation": true
   },
   "delete": {
    "tags": [
     "JobAgents"
    ],
    "description": "Deletes a job agent.",
    "operationId": "JobAgents_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent to be deleted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the job agent."
     },
     "202": {
      "description": "Accepted"
     },
     "204": {
      "description": "The specified job agent does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server."
     }
    },
    "x-ms-long-running-operation": true
   },
   "patch": {
    "tags": [
     "JobAgents"
    ],
    "description": "Updates a job agent.",
    "operationId": "JobAgents_Update",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent to be updated.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:156"
       }
      }
     },
     "required": true,
     "description": "The update to the job agent.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the job agent.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:155"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 PropertyChangeUnsupported - Property cannot be modified."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:86": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1credentials"
    ]
   },
   "get": {
    "tags": [
     "JobCredentials"
    ],
    "description": "Gets a list of jobs credentials.",
    "operationId": "JobCredentials_ListByAgent",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of job credentials.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:157"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:87": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials/{credentialName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1credentials~1{credentialName}"
    ]
   },
   "get": {
    "tags": [
     "JobCredentials"
    ],
    "description": "Gets a jobs credential.",
    "operationId": "JobCredentials_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "credentialName",
      "in": "path",
      "description": "The name of the credential.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the job credential.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:159"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   },
   "put": {
    "tags": [
     "JobCredentials"
    ],
    "description": "Creates or updates a job credential.",
    "operationId": "JobCredentials_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "credentialName",
      "in": "path",
      "description": "The name of the credential.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:159"
       }
      }
     },
     "required": true,
     "description": "The requested job credential state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 4,
    "responses": {
     "200": {
      "description": "Successfully updated the credential.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:159"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the credential.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:159"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 400 InvalidJobCredentialUsername - Invalid credential username.\n\n * 403 JobCredentialPermissionError - Azure Resource Manager does not have permission to use or manage the credential.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    }
   },
   "delete": {
    "tags": [
     "JobCredentials"
    ],
    "description": "Deletes a job credential.",
    "operationId": "JobCredentials_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "credentialName",
      "in": "path",
      "description": "The name of the credential.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the credential."
     },
     "204": {
      "description": "A credential with the specified name does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 403 JobCredentialPermissionError - Azure Resource Manager does not have permission to use or manage the credential.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   }
  },
  "path:88": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/executions",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1executions"
    ]
   },
   "get": {
    "tags": [
     "JobExecutions"
    ],
    "description": "Lists all executions in a job agent.",
    "operationId": "JobExecutions_ListByAgent",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "createTimeMin",
      "in": "query",
      "description": "If specified, only job executions created at or after the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "createTimeMax",
      "in": "query",
      "description": "If specified, only job executions created before the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "endTimeMin",
      "in": "query",
      "description": "If specified, only job executions completed at or after the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "endTimeMax",
      "in": "query",
      "description": "If specified, only job executions completed before the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "isActive",
      "in": "query",
      "description": "If specified, only active or only completed job executions are included.",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "$skip",
      "in": "query",
      "description": "The number of elements in the collection to skip.",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "$top",
      "in": "query",
      "description": "The number of elements to return from the collection.",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved job executions.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:160"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:89": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/cancel",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1jobs~1{jobName}~1executions~1{jobExecutionId}~1cancel"
    ]
   },
   "post": {
    "tags": [
     "JobExecutions"
    ],
    "description": "Requests cancellation of a job execution.",
    "operationId": "JobExecutions_Cancel",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobExecutionId",
      "in": "path",
      "description": "The id of the job execution to cancel.",
      "required": true,
      "schema": {
       "format": "uuid",
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully requested cancellation of the job execution."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   }
  },
  "path:90": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/start",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1jobs~1{jobName}~1start"
    ]
   },
   "post": {
    "tags": [
     "JobExecutions"
    ],
    "description": "Starts an elastic job execution.",
    "operationId": "JobExecutions_Create",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job to get.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully started an execution for the job.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:163"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:91": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1jobs~1{jobName}~1executions"
    ]
   },
   "get": {
    "tags": [
     "JobExecutions"
    ],
    "description": "Lists a job's executions.",
    "operationId": "JobExecutions_ListByJob",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job to get.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "createTimeMin",
      "in": "query",
      "description": "If specified, only job executions created at or after the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "createTimeMax",
      "in": "query",
      "description": "If specified, only job executions created before the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "endTimeMin",
      "in": "query",
      "description": "If specified, only job executions completed at or after the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "endTimeMax",
      "in": "query",
      "description": "If specified, only job executions completed before the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "isActive",
      "in": "query",
      "description": "If specified, only active or only completed job executions are included.",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "$skip",
      "in": "query",
      "description": "The number of elements in the collection to skip.",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "$top",
      "in": "query",
      "description": "The number of elements to return from the collection.",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved job executions.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:160"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:92": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1jobs~1{jobName}~1executions~1{jobExecutionId}"
    ]
   },
   "get": {
    "tags": [
     "JobExecutions"
    ],
    "description": "Gets a job execution.",
    "operationId": "JobExecutions_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobExecutionId",
      "in": "path",
      "description": "The id of the job execution",
      "required": true,
      "schema": {
       "format": "uuid",
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the job.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:163"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    }
   },
   "put": {
    "tags": [
     "JobExecutions"
    ],
    "description": "Creates or updatess a job execution.",
    "operationId": "JobExecutions_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job to get.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobExecutionId",
      "in": "path",
      "description": "The job execution id to create the job execution under.",
      "required": true,
      "schema": {
       "format": "uuid",
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "A job execution for the job with the given id already existed.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:163"
        }
       }
      }
     },
     "201": {
      "description": "Successfully started an execution for the job.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:163"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:93": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1jobs"
    ]
   },
   "get": {
    "tags": [
     "Jobs"
    ],
    "description": "Gets a list of jobs.",
    "operationId": "Jobs_ListByAgent",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of jobs.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:164"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:94": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1jobs~1{jobName}"
    ]
   },
   "get": {
    "tags": [
     "Jobs"
    ],
    "description": "Gets a job.",
    "operationId": "Jobs_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job to get.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the job.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:167"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   },
   "put": {
    "tags": [
     "Jobs"
    ],
    "description": "Creates or updates a job.",
    "operationId": "Jobs_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job to get.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:167"
       }
      }
     },
     "required": true,
     "description": "The requested job state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 4,
    "responses": {
     "200": {
      "description": "Successfully updated the job.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:167"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the job.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:167"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 400 InvalidDuration - Invalid duration.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    }
   },
   "delete": {
    "tags": [
     "Jobs"
    ],
    "description": "Deletes a job.",
    "operationId": "Jobs_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job to delete.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the job."
     },
     "204": {
      "description": "The specified job does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   }
  },
  "path:95": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1jobs~1{jobName}~1executions~1{jobExecutionId}~1steps"
    ]
   },
   "get": {
    "tags": [
     "JobStepExecutions"
    ],
    "description": "Lists the step executions of a job execution.",
    "operationId": "JobStepExecutions_ListByJobExecution",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job to get.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobExecutionId",
      "in": "path",
      "description": "The id of the job execution",
      "required": true,
      "schema": {
       "format": "uuid",
       "type": "string"
      }
     },
     {
      "name": "createTimeMin",
      "in": "query",
      "description": "If specified, only job executions created at or after the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "createTimeMax",
      "in": "query",
      "description": "If specified, only job executions created before the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "endTimeMin",
      "in": "query",
      "description": "If specified, only job executions completed at or after the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "endTimeMax",
      "in": "query",
      "description": "If specified, only job executions completed before the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "isActive",
      "in": "query",
      "description": "If specified, only active or only completed job executions are included.",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "$skip",
      "in": "query",
      "description": "The number of elements in the collection to skip.",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "$top",
      "in": "query",
      "description": "The number of elements to return from the collection.",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the step executions.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:160"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:96": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps/{stepName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1jobs~1{jobName}~1executions~1{jobExecutionId}~1steps~1{stepName}"
    ]
   },
   "get": {
    "tags": [
     "JobStepExecutions"
    ],
    "description": "Gets a step execution of a job execution.",
    "operationId": "JobStepExecutions_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job to get.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobExecutionId",
      "in": "path",
      "description": "The unique id of the job execution",
      "required": true,
      "schema": {
       "format": "uuid",
       "type": "string"
      }
     },
     {
      "name": "stepName",
      "in": "path",
      "description": "The name of the step.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the step execution.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:163"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   }
  },
  "path:97": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/versions/{jobVersion}/steps",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1jobs~1{jobName}~1versions~1{jobVersion}~1steps"
    ]
   },
   "get": {
    "tags": [
     "JobSteps"
    ],
    "description": "Gets all job steps in the specified job version.",
    "operationId": "JobSteps_ListByVersion",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job to get.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobVersion",
      "in": "path",
      "description": "The version of the job to get.",
      "required": true,
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of job steps.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:168"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:98": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/versions/{jobVersion}/steps/{stepName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1jobs~1{jobName}~1versions~1{jobVersion}~1steps~1{stepName}"
    ]
   },
   "get": {
    "tags": [
     "JobSteps"
    ],
    "description": "Gets the specified version of a job step.",
    "operationId": "JobSteps_GetByVersion",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobVersion",
      "in": "path",
      "description": "The version of the job to get.",
      "required": true,
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "name": "stepName",
      "in": "path",
      "description": "The name of the job step.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the job step.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:173"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    }
   }
  },
  "path:99": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/steps",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1jobs~1{jobName}~1steps"
    ]
   },
   "get": {
    "tags": [
     "JobSteps"
    ],
    "description": "Gets all job steps for a job's current version.",
    "operationId": "JobSteps_ListByJob",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job to get.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of job steps.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:168"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:100": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/steps/{stepName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1jobs~1{jobName}~1steps~1{stepName}"
    ]
   },
   "get": {
    "tags": [
     "JobSteps"
    ],
    "description": "Gets a job step in a job's current version.",
    "operationId": "JobSteps_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "stepName",
      "in": "path",
      "description": "The name of the job step.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the job step.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:173"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    }
   },
   "put": {
    "tags": [
     "JobSteps"
    ],
    "description": "Creates or updates a job step. This will implicitly create a new job version.",
    "operationId": "JobSteps_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "stepName",
      "in": "path",
      "description": "The name of the job step.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:173"
       }
      }
     },
     "required": true,
     "description": "The requested state of the job step.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 5,
    "responses": {
     "200": {
      "description": "Successfully updated the job step.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:173"
        }
       }
      }
     },
     "201": {
      "description": "Successfully added the job step.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:173"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 JobStepIdMismatch - Step Id in the specified Job Step URI does not match step id in provided Job Step Resource.\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 MismatchingJobAccountNameWithUrl - The provided job account name did not match the name in the Url.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    }
   },
   "delete": {
    "tags": [
     "JobSteps"
    ],
    "description": "Deletes a job step. This will implicitly create a new job version.",
    "operationId": "JobSteps_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "stepName",
      "in": "path",
      "description": "The name of the job step to delete.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the job step."
     },
     "204": {
      "description": "The specified job step does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   }
  },
  "path:101": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/targets",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1jobs~1{jobName}~1executions~1{jobExecutionId}~1targets"
    ]
   },
   "get": {
    "tags": [
     "JobTargetExecutions"
    ],
    "description": "Lists target executions for all steps of a job execution.",
    "operationId": "JobTargetExecutions_ListByJobExecution",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job to get.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobExecutionId",
      "in": "path",
      "description": "The id of the job execution",
      "required": true,
      "schema": {
       "format": "uuid",
       "type": "string"
      }
     },
     {
      "name": "createTimeMin",
      "in": "query",
      "description": "If specified, only job executions created at or after the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "createTimeMax",
      "in": "query",
      "description": "If specified, only job executions created before the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "endTimeMin",
      "in": "query",
      "description": "If specified, only job executions completed at or after the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "endTimeMax",
      "in": "query",
      "description": "If specified, only job executions completed before the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "isActive",
      "in": "query",
      "description": "If specified, only active or only completed job executions are included.",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "$skip",
      "in": "query",
      "description": "The number of elements in the collection to skip.",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "$top",
      "in": "query",
      "description": "The number of elements to return from the collection.",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the target executions.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:160"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:102": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps/{stepName}/targets",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1jobs~1{jobName}~1executions~1{jobExecutionId}~1steps~1{stepName}~1targets"
    ]
   },
   "get": {
    "tags": [
     "JobTargetExecutions"
    ],
    "description": "Lists the target executions of a job step execution.",
    "operationId": "JobTargetExecutions_ListByStep",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job to get.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobExecutionId",
      "in": "path",
      "description": "The id of the job execution",
      "required": true,
      "schema": {
       "format": "uuid",
       "type": "string"
      }
     },
     {
      "name": "stepName",
      "in": "path",
      "description": "The name of the step.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "createTimeMin",
      "in": "query",
      "description": "If specified, only job executions created at or after the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "createTimeMax",
      "in": "query",
      "description": "If specified, only job executions created before the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "endTimeMin",
      "in": "query",
      "description": "If specified, only job executions completed at or after the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "endTimeMax",
      "in": "query",
      "description": "If specified, only job executions completed before the specified time are included.",
      "required": false,
      "schema": {
       "format": "date-time",
       "type": "string"
      }
     },
     {
      "name": "isActive",
      "in": "query",
      "description": "If specified, only active or only completed job executions are included.",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "name": "$skip",
      "in": "query",
      "description": "The number of elements in the collection to skip.",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "name": "$top",
      "in": "query",
      "description": "The number of elements to return from the collection.",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the target executions.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:160"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:103": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps/{stepName}/targets/{targetId}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1jobs~1{jobName}~1executions~1{jobExecutionId}~1steps~1{stepName}~1targets~1{targetId}"
    ]
   },
   "get": {
    "tags": [
     "JobTargetExecutions"
    ],
    "description": "Gets a target execution.",
    "operationId": "JobTargetExecutions_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job to get.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobExecutionId",
      "in": "path",
      "description": "The unique id of the job execution",
      "required": true,
      "schema": {
       "format": "uuid",
       "type": "string"
      }
     },
     {
      "name": "stepName",
      "in": "path",
      "description": "The name of the step.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "targetId",
      "in": "path",
      "description": "The target id.",
      "required": true,
      "schema": {
       "format": "uuid",
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the target execution.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:163"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   }
  },
  "path:104": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/targetGroups",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1targetGroups"
    ]
   },
   "get": {
    "tags": [
     "JobTargetGroups"
    ],
    "description": "Gets all target groups in an agent.",
    "operationId": "JobTargetGroups_ListByAgent",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of target groups.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:174"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:105": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/targetGroups/{targetGroupName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1targetGroups~1{targetGroupName}"
    ]
   },
   "get": {
    "tags": [
     "JobTargetGroups"
    ],
    "description": "Gets a target group.",
    "operationId": "JobTargetGroups_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "targetGroupName",
      "in": "path",
      "description": "The name of the target group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the target group.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:177"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   },
   "put": {
    "tags": [
     "JobTargetGroups"
    ],
    "description": "Creates or updates a target group.",
    "operationId": "JobTargetGroups_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "targetGroupName",
      "in": "path",
      "description": "The name of the target group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:177"
       }
      }
     },
     "required": true,
     "description": "The requested state of the target group.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 4,
    "responses": {
     "200": {
      "description": "Successfully updated the target group.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:177"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the target group.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:177"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 MismatchingJobAccountNameWithUrl - The provided job account name did not match the name in the Url.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    }
   },
   "delete": {
    "tags": [
     "JobTargetGroups"
    ],
    "description": "Deletes a target group.",
    "operationId": "JobTargetGroups_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "targetGroupName",
      "in": "path",
      "description": "The name of the target group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the target group."
     },
     "204": {
      "description": "A target group with the specified name does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   }
  },
  "path:106": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/versions",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1jobs~1{jobName}~1versions"
    ]
   },
   "get": {
    "tags": [
     "JobVersions"
    ],
    "description": "Gets all versions of a job.",
    "operationId": "JobVersions_ListByJob",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job to get.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of versions.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:178"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:107": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/versions/{jobVersion}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1jobAgents~1{jobAgentName}~1jobs~1{jobName}~1versions~1{jobVersion}"
    ]
   },
   "get": {
    "tags": [
     "JobVersions"
    ],
    "description": "Gets a job version.",
    "operationId": "JobVersions_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:138"
     },
     {
      "$ref": "#/components/parameters/parameters:139"
     },
     {
      "name": "jobAgentName",
      "in": "path",
      "description": "The name of the job agent.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "jobVersion",
      "in": "path",
      "description": "The version of the job to get.",
      "required": true,
      "schema": {
       "format": "int32",
       "type": "integer"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:136"
     },
     {
      "$ref": "#/components/parameters/parameters:137"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the job version.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:179"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    }
   }
  },
  "path:108": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Sql~1locations~1{locationName}~1longTermRetentionServers~1{longTermRetentionServerName}~1longTermRetentionDatabases~1{longTermRetentionDatabaseName}~1longTermRetentionBackups~1{backupName}"
    ]
   },
   "get": {
    "tags": [
     "LongTermRetentionBackups"
    ],
    "description": "Gets a long term retention backup.",
    "operationId": "LongTermRetentionBackups_Get",
    "parameters": [
     {
      "name": "locationName",
      "in": "path",
      "description": "The location of the database.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "longTermRetentionServerName",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "longTermRetentionDatabaseName",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "backupName",
      "in": "path",
      "description": "The backup name.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:146"
     },
     {
      "$ref": "#/components/parameters/parameters:147"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the backup.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:181"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   },
   "delete": {
    "tags": [
     "LongTermRetentionBackups"
    ],
    "description": "Deletes a long term retention backup.",
    "operationId": "LongTermRetentionBackups_Delete",
    "parameters": [
     {
      "name": "locationName",
      "in": "path",
      "description": "The location of the database",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "longTermRetentionServerName",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "longTermRetentionDatabaseName",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "backupName",
      "in": "path",
      "description": "The backup name.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:146"
     },
     {
      "$ref": "#/components/parameters/parameters:147"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the backup."
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:109": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Sql~1locations~1{locationName}~1longTermRetentionServers~1{longTermRetentionServerName}~1longTermRetentionDatabases~1{longTermRetentionDatabaseName}~1longTermRetentionBackups"
    ]
   },
   "get": {
    "tags": [
     "LongTermRetentionBackups"
    ],
    "description": "Lists all long term retention backups for a database.",
    "operationId": "LongTermRetentionBackups_ListByDatabase",
    "parameters": [
     {
      "name": "locationName",
      "in": "path",
      "description": "The location of the database",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "longTermRetentionServerName",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "longTermRetentionDatabaseName",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "onlyLatestPerDatabase",
      "in": "query",
      "description": "Whether or not to only get the latest backup for each database.",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:156"
     },
     {
      "$ref": "#/components/parameters/parameters:146"
     },
     {
      "$ref": "#/components/parameters/parameters:147"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of backups.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:182"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:110": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionBackups",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Sql~1locations~1{locationName}~1longTermRetentionBackups"
    ]
   },
   "get": {
    "tags": [
     "LongTermRetentionBackups"
    ],
    "description": "Lists the long term retention backups for a given location.",
    "operationId": "LongTermRetentionBackups_ListByLocation",
    "parameters": [
     {
      "name": "locationName",
      "in": "path",
      "description": "The location of the database",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "onlyLatestPerDatabase",
      "in": "query",
      "description": "Whether or not to only get the latest backup for each database.",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:156"
     },
     {
      "$ref": "#/components/parameters/parameters:146"
     },
     {
      "$ref": "#/components/parameters/parameters:147"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of backups.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:182"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:111": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionBackups",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Sql~1locations~1{locationName}~1longTermRetentionServers~1{longTermRetentionServerName}~1longTermRetentionBackups"
    ]
   },
   "get": {
    "tags": [
     "LongTermRetentionBackups"
    ],
    "description": "Lists the long term retention backups for a given server.",
    "operationId": "LongTermRetentionBackups_ListByServer",
    "parameters": [
     {
      "name": "locationName",
      "in": "path",
      "description": "The location of the database",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "longTermRetentionServerName",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "onlyLatestPerDatabase",
      "in": "query",
      "description": "Whether or not to only get the latest backup for each database.",
      "required": false,
      "schema": {
       "type": "boolean"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:156"
     },
     {
      "$ref": "#/components/parameters/parameters:146"
     },
     {
      "$ref": "#/components/parameters/parameters:147"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of backups.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:182"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:112": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/backupLongTermRetentionPolicies/{policyName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1backupLongTermRetentionPolicies~1{policyName}"
    ]
   },
   "get": {
    "tags": [
     "BackupLongTermRetentionPolicies"
    ],
    "description": "Gets a database's long term retention policy.",
    "operationId": "BackupLongTermRetentionPolicies_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:148"
     },
     {
      "$ref": "#/components/parameters/parameters:149"
     },
     {
      "$ref": "#/components/parameters/parameters:151"
     },
     {
      "name": "policyName",
      "in": "path",
      "description": "The policy name. Should always be Default.",
      "required": true,
      "x-ms-enum": {
       "name": "LongTermRetentionPolicyName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:146"
     },
     {
      "$ref": "#/components/parameters/parameters:147"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully get the policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:184"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   },
   "put": {
    "tags": [
     "BackupLongTermRetentionPolicies"
    ],
    "description": "Sets a database's long term retention policy.",
    "operationId": "BackupLongTermRetentionPolicies_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:148"
     },
     {
      "$ref": "#/components/parameters/parameters:149"
     },
     {
      "$ref": "#/components/parameters/parameters:151"
     },
     {
      "name": "policyName",
      "in": "path",
      "description": "The policy name. Should always be Default.",
      "required": true,
      "x-ms-enum": {
       "name": "LongTermRetentionPolicyName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:146"
     },
     {
      "$ref": "#/components/parameters/parameters:147"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:184"
       }
      }
     },
     "required": true,
     "description": "The long term retention policy info.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 4,
    "responses": {
     "200": {
      "description": "Successfully set the policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:184"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was given to a parameter.\n\n * 400 LongTermRetentionPolicyNotSupported - Long Term Retention is not supported on this database.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:113": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/backupLongTermRetentionPolicies",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1backupLongTermRetentionPolicies"
    ]
   },
   "get": {
    "tags": [
     "BackupLongTermRetentionPolicies"
    ],
    "description": "Gets a database's long term retention policy.",
    "operationId": "BackupLongTermRetentionPolicies_ListByDatabase",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:148"
     },
     {
      "$ref": "#/components/parameters/parameters:149"
     },
     {
      "$ref": "#/components/parameters/parameters:151"
     },
     {
      "$ref": "#/components/parameters/parameters:146"
     },
     {
      "$ref": "#/components/parameters/parameters:147"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully get the policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:184"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   }
  },
  "path:114": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/managedDatabaseRestoreAzureAsyncOperation/{operationId}/completeRestore",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Sql~1locations~1{locationName}~1managedDatabaseRestoreAzureAsyncOperation~1{operationId}~1completeRestore"
    ]
   },
   "post": {
    "tags": [
     "ManagedDatabases"
    ],
    "description": "Completes the restore operation on a managed database.",
    "operationId": "ManagedDatabases_CompleteRestore",
    "parameters": [
     {
      "name": "locationName",
      "in": "path",
      "description": "The name of the region where the resource is located.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "operationId",
      "in": "path",
      "description": "Management operation id that this request tries to complete.",
      "required": true,
      "schema": {
       "format": "uuid",
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:157"
     },
     {
      "$ref": "#/components/parameters/parameters:158"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:185"
       }
      }
     },
     "required": true,
     "description": "The definition for completing the restore of this managed database.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 2,
    "responses": {
     "200": {
      "description": "Successfully issued complete restore request."
     },
     "202": {
      "description": "Completing migration is in progress."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidDatabaseCompleteRestoreRequest - The complete database restore request is invalid\n\n * 400 InvalidDatabaseCompleteRestoreRequestLastBackupName - The last backup name is invalid\n\n * 400 UnsupportedServiceName - The specified name is an invalid name because it contains one or more unsupported unicode characters.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 SourceDatabaseNotFound - The source database does not exist.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:115": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}~1databases"
    ]
   },
   "get": {
    "tags": [
     "ManagedDatabases"
    ],
    "description": "Gets a list of managed databases.",
    "operationId": "ManagedDatabases_ListByInstance",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:159"
     },
     {
      "$ref": "#/components/parameters/parameters:161"
     },
     {
      "$ref": "#/components/parameters/parameters:157"
     },
     {
      "$ref": "#/components/parameters/parameters:158"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of databases.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:186"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:116": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}~1databases~1{databaseName}"
    ]
   },
   "get": {
    "tags": [
     "ManagedDatabases"
    ],
    "description": "Gets a managed database.",
    "operationId": "ManagedDatabases_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:159"
     },
     {
      "$ref": "#/components/parameters/parameters:161"
     },
     {
      "$ref": "#/components/parameters/parameters:162"
     },
     {
      "$ref": "#/components/parameters/parameters:157"
     },
     {
      "$ref": "#/components/parameters/parameters:158"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the specified managed database.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:188"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   },
   "put": {
    "tags": [
     "ManagedDatabases"
    ],
    "description": "Creates a new database or updates an existing database.",
    "operationId": "ManagedDatabases_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:159"
     },
     {
      "$ref": "#/components/parameters/parameters:161"
     },
     {
      "$ref": "#/components/parameters/parameters:162"
     },
     {
      "$ref": "#/components/parameters/parameters:157"
     },
     {
      "$ref": "#/components/parameters/parameters:158"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:188"
       }
      }
     },
     "required": true,
     "description": "The requested database resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the database.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:188"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the database.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:188"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 CannotUseTrailingWhitespacesInDatabaseName - The database name validation failed.\n\n * 400 SourceDatabaseNotFound - The source database does not exist.\n\n * 400 RegionDoesNotSupportVersion - A user attempted to create a server of a specified version in a location where that server version isn't supported.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 SourceServerNotFound - The server part of a source database id provided in a CreateDatabaseAsCopy API call doesn't map to an existing server.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 CurrentDatabaseSizeExceedsMaxSize - User attempted to reduce the max size for a database to a size smaller than the current usage.\n\n * 400 InvalidCollation - Collation is not recognized by the server.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 UnsupportedServiceName - The specified name is an invalid name because it contains one or more unsupported unicode characters.\n\n * 400 CurrentDatabaseLogSizeExceedsMaxSize - User attempted to change the database to a sku with lower max log size than the current usage.\n\n * 400 InvalidDatabaseCreateOrUpdateRequest - The request body for the create or update database operation is invalid.\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 InvalidSourceDatabaseId - Invalid source database identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MissingCollation - Collation is required.\n\n * 400 MissingSourceDatabaseId - Missing source database identifier.\n\n * 400 MissingRestorePointInTime - Missing restore point in time\n\n * 400 MissingStorageContainerSasToken - Missing storage container SAS token\n\n * 400 MissingStorageContainerUri - Missing storage container URI\n\n * 400 RestorableDroppedDatabaseIdGivenForRestoreWithSourceDatabaseId - Cannot specify restorableDroppedDatabaseId when sourceDatabaseId is already given in restore create mode\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 CannotFindObject - Cannot find the object because it does not exist or you do not have permissions\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 409 ConflictingDatabaseOperation - There is already some operation on the database and the current operation should wait till it is done.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 ActivateOrDeactivateWorkflowThrottling - Activation or deactivation workflow failed because there are too many concurrent workflows\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   },
   "delete": {
    "tags": [
     "ManagedDatabases"
    ],
    "description": "Deletes the managed database.",
    "operationId": "ManagedDatabases_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:159"
     },
     {
      "$ref": "#/components/parameters/parameters:161"
     },
     {
      "$ref": "#/components/parameters/parameters:162"
     },
     {
      "$ref": "#/components/parameters/parameters:157"
     },
     {
      "$ref": "#/components/parameters/parameters:158"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the managed database."
     },
     "202": {
      "description": "Deleting the managed database is in progress."
     },
     "204": {
      "description": "The specified managed database does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 CannotMoveOrDropJobAccountDatabase - Cannot drop database associated with job account.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 CannotMoveOrDropSyncMetadataDatabase - Cannot drop database used as sync metadata database.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 ServerDisabled - Server is disabled.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources."
     }
    },
    "x-ms-long-running-operation": true
   },
   "patch": {
    "tags": [
     "ManagedDatabases"
    ],
    "description": "Updates an existing database.",
    "operationId": "ManagedDatabases_Update",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:159"
     },
     {
      "$ref": "#/components/parameters/parameters:161"
     },
     {
      "$ref": "#/components/parameters/parameters:162"
     },
     {
      "$ref": "#/components/parameters/parameters:157"
     },
     {
      "$ref": "#/components/parameters/parameters:158"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:189"
       }
      }
     },
     "required": true,
     "description": "The requested database resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the database.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:188"
        }
       }
      }
     },
     "202": {
      "description": "Deleting the managed database is in progress."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:117": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///878?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverAutomaticTuning.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/automaticTuning/current",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverAutomaticTuning.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1automaticTuning~1current"
    ]
   },
   "get": {
    "tags": [
     "ServerAutomaticTuning"
    ],
    "description": "Retrieves server automatic tuning options.",
    "operationId": "ServerAutomaticTuning_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:169"
     },
     {
      "$ref": "#/components/parameters/parameters:170"
     },
     {
      "$ref": "#/components/parameters/parameters:167"
     },
     {
      "$ref": "#/components/parameters/parameters:168"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved server automatic tuning properties.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:192"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - The requested database was not found\n\n * 404 SubscriptionDoesNotHaveElasticPool - The requested elastic pool was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 405 NotSupported - This functionality is not supported.\n\n * 409 Conflict - Request could not be processed because of conflict in the request.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable."
     }
    }
   },
   "patch": {
    "tags": [
     "ServerAutomaticTuning"
    ],
    "description": "Update automatic tuning options on server.",
    "operationId": "ServerAutomaticTuning_Update",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:169"
     },
     {
      "$ref": "#/components/parameters/parameters:170"
     },
     {
      "$ref": "#/components/parameters/parameters:167"
     },
     {
      "$ref": "#/components/parameters/parameters:168"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:192"
       }
      }
     },
     "required": true,
     "description": "The requested automatic tuning resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 2,
    "responses": {
     "200": {
      "description": "Successfully updated the server-level automatic tuning options.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:192"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 InvalidAutomaticTuningUpsertRequest - The update automatic tuning request body does not exist or has no properties object.\n\n * 400 InvalidAdvisorAutoExecuteStatus - Specified auto-execute status for the advisor is not allowed.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - The requested database was not found\n\n * 404 SubscriptionDoesNotHaveElasticPool - The requested elastic pool was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 405 NotSupported - This functionality is not supported.\n\n * 409 Conflict - Request could not be processed because of conflict in the request.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable."
     }
    }
   }
  },
  "path:118": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///879?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverDnsAliases.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverDnsAliases.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1dnsAliases~1{dnsAliasName}"
    ]
   },
   "get": {
    "tags": [
     "ServerDnsAliases"
    ],
    "description": "Gets a server DNS alias.",
    "operationId": "ServerDnsAliases_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:178"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server that the alias is pointing to.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "dnsAliasName",
      "in": "path",
      "description": "The name of the server DNS alias.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:176"
     },
     {
      "$ref": "#/components/parameters/parameters:177"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the specified server DNS alias.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:194"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   },
   "put": {
    "tags": [
     "ServerDnsAliases"
    ],
    "description": "Creates a server dns alias.",
    "operationId": "ServerDnsAliases_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:178"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server that the alias is pointing to.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "dnsAliasName",
      "in": "path",
      "description": "The name of the server DNS alias.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:176"
     },
     {
      "$ref": "#/components/parameters/parameters:177"
     }
    ],
    "responses": {
     "200": {
      "description": "The server DNS alias already exists.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:194"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created a server DNS alias.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:194"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidServerDnsAliasAcquireRequest - The acquire server DNS alias request body is empty or invalid (it should contain the old server alias id, for example: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Sql/servers/dns-alias-old-server/dnsAliases/dns-alias-name-1).\n\n * 400 ServerDnsAliasAcquireRequestInvalidOldServerDnsAliasId - \n\n * 400 UnableToResolveRemoteServer - \n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 409 ServerDnsAliasAlreadyExists - \n\n * 409 ServerDnsAliasAlreadyExists - \n\n * 409 ServerDnsAliasBusy - \n\n * 409 ServerDnsAliasDnsRecordInUse - \n\n * 409 InvalidServerDnsAliasName - \n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 429 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   },
   "delete": {
    "tags": [
     "ServerDnsAliases"
    ],
    "description": "Deletes the server DNS alias with the given name.",
    "operationId": "ServerDnsAliases_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:178"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server that the alias is pointing to.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "dnsAliasName",
      "in": "path",
      "description": "The name of the server DNS alias.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:176"
     },
     {
      "$ref": "#/components/parameters/parameters:177"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the server DNS alias."
     },
     "202": {
      "description": "Accepted"
     },
     "204": {
      "description": "The specified server DNS alias does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:119": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///879?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverDnsAliases.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverDnsAliases.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1dnsAliases"
    ]
   },
   "get": {
    "tags": [
     "ServerDnsAliases"
    ],
    "description": "Gets a list of server DNS aliases for a server.",
    "operationId": "ServerDnsAliases_ListByServer",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:178"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server that the alias is pointing to.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:176"
     },
     {
      "$ref": "#/components/parameters/parameters:177"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of server DNS aliases.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:195"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:120": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///879?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverDnsAliases.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}/acquire",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverDnsAliases.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1dnsAliases~1{dnsAliasName}~1acquire"
    ]
   },
   "post": {
    "tags": [
     "ServerDnsAliases"
    ],
    "description": "Acquires server DNS alias from another server.",
    "operationId": "ServerDnsAliases_Acquire",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:178"
     },
     {
      "name": "serverName",
      "in": "path",
      "description": "The name of the server that the alias is pointing to.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "dnsAliasName",
      "in": "path",
      "description": "The name of the server dns alias.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:176"
     },
     {
      "$ref": "#/components/parameters/parameters:177"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:196"
       }
      }
     },
     "required": true,
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully acquired server DNS alias."
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidServerDnsAliasAcquireRequest - The acquire server DNS alias request body is empty or invalid (it should contain the old server alias id, for example: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default/providers/Microsoft.Sql/servers/dns-alias-old-server/dnsAliases/dns-alias-name-1).\n\n * 400 ServerDnsAliasAcquireRequestInvalidOldServerDnsAliasId - \n\n * 400 UnableToResolveRemoteServer - \n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 ServerDnsAliasAlreadyExists - \n\n * 409 ServerDnsAliasAlreadyExists - \n\n * 409 ServerDnsAliasBusy - \n\n * 409 ServerDnsAliasDnsRecordInUse - \n\n * 409 InvalidServerDnsAliasName - \n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 429 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:121": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///880?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverSecurityAlertPolicies.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverSecurityAlertPolicies.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1securityAlertPolicies~1{securityAlertPolicyName}"
    ]
   },
   "get": {
    "tags": [
     "ServerSecurityAlertPolicies"
    ],
    "description": "Get a server's security alert policy.",
    "operationId": "ServerSecurityAlertPolicies_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:183"
     },
     {
      "$ref": "#/components/parameters/parameters:184"
     },
     {
      "name": "securityAlertPolicyName",
      "in": "path",
      "description": "The name of the security alert policy.",
      "required": true,
      "x-ms-enum": {
       "name": "SecurityAlertPolicyName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "Default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:181"
     },
     {
      "$ref": "#/components/parameters/parameters:182"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the server threat detection policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:198"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 SecurityAlertPoliciesInvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 SecurityAlertPoliciesInvalidStorageAccountCredentials - The provided storage account access key is not valid.\n\n * 400 InvalidServerSecurityAlertPolicyCreateRequest - The create server Threat Detection security alert policy request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 409 ServerSecurityAlertPolicyInProgress - Set server security alert policy is already in progress\n\n * 409 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later.\n\n * 500 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 500 GetServerSecurityAlertPolicyFailed - Failed to get Threat Detection settings"
     }
    }
   },
   "put": {
    "tags": [
     "ServerSecurityAlertPolicies"
    ],
    "description": "Creates or updates a threat detection policy.",
    "operationId": "ServerSecurityAlertPolicies_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:183"
     },
     {
      "$ref": "#/components/parameters/parameters:184"
     },
     {
      "name": "securityAlertPolicyName",
      "in": "path",
      "description": "The name of the threat detection policy.",
      "required": true,
      "x-ms-enum": {
       "name": "SecurityAlertPolicyName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "Default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:181"
     },
     {
      "$ref": "#/components/parameters/parameters:182"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:198"
       }
      }
     },
     "required": true,
     "description": "The server security alert policy.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the threat detection policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:198"
        }
       }
      }
     },
     "202": {
      "description": "Created request to set the server threat detection policy."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 SecurityAlertPoliciesInvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 SecurityAlertPoliciesInvalidStorageAccountCredentials - The provided storage account access key is not valid.\n\n * 400 InvalidServerSecurityAlertPolicyCreateRequest - The create server Threat Detection security alert policy request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 400 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 409 ServerSecurityAlertPolicyInProgress - Set server security alert policy is already in progress\n\n * 409 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later.\n\n * 500 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later\n\n * 500 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later"
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:122": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///881?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FrestorePoints.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/restorePoints",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/restorePoints.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1restorePoints"
    ]
   },
   "get": {
    "tags": [
     "RestorePoints"
    ],
    "description": "Gets a list of database restore points.",
    "operationId": "RestorePoints_ListByDatabase",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:193"
     },
     {
      "$ref": "#/components/parameters/parameters:194"
     },
     {
      "$ref": "#/components/parameters/parameters:196"
     },
     {
      "$ref": "#/components/parameters/parameters:191"
     },
     {
      "$ref": "#/components/parameters/parameters:192"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully returned restore points.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:199"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 BackupNotAllowedOnDeactivatedDatabase - Cannot create restore point on a deactivated database.\n\n * 400 RestorePointLimitReached - A restore point cannot be created because database would exceed the allowed quota of restore points.\n\n * 400 RestorePointAttemptToDeleteSystemBackup - Cannot delete system restore point.\n\n * 404 DatabaseRestorePointNotFound - Can not find database restore point.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 408 DatabaseRestorePointTimedOut - Create database restore point failed."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": null
    }
   },
   "post": {
    "tags": [
     "RestorePoints"
    ],
    "description": "Creates a restore point for a data warehouse.",
    "operationId": "RestorePoints_Create",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:193"
     },
     {
      "$ref": "#/components/parameters/parameters:194"
     },
     {
      "$ref": "#/components/parameters/parameters:196"
     },
     {
      "$ref": "#/components/parameters/parameters:191"
     },
     {
      "$ref": "#/components/parameters/parameters:192"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:202"
       }
      }
     },
     "required": true,
     "description": "The definition for creating the restore point of this database.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully created the restore point request.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:201"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the restore point request.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:201"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 BackupNotAllowedOnDeactivatedDatabase - Cannot create restore point on a deactivated database.\n\n * 400 RestorePointLimitReached - A restore point cannot be created because database would exceed the allowed quota of restore points.\n\n * 400 RestorePointAttemptToDeleteSystemBackup - Cannot delete system restore point.\n\n * 404 DatabaseRestorePointNotFound - Can not find database restore point.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 408 DatabaseRestorePointTimedOut - Create database restore point failed."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:123": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-03-01-preview"
    ],
    "filename": [
     "mem:///881?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FrestorePoints.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/restorePoints/{restorePointName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/restorePoints.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1restorePoints~1{restorePointName}"
    ]
   },
   "get": {
    "tags": [
     "RestorePoints"
    ],
    "description": "Gets a restore point.",
    "operationId": "RestorePoints_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:193"
     },
     {
      "$ref": "#/components/parameters/parameters:194"
     },
     {
      "$ref": "#/components/parameters/parameters:196"
     },
     {
      "name": "restorePointName",
      "in": "path",
      "description": "The name of the restore point.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:191"
     },
     {
      "$ref": "#/components/parameters/parameters:192"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully returned the restore point.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:201"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 BackupNotAllowedOnDeactivatedDatabase - Cannot create restore point on a deactivated database.\n\n * 400 RestorePointLimitReached - A restore point cannot be created because database would exceed the allowed quota of restore points.\n\n * 400 RestorePointAttemptToDeleteSystemBackup - Cannot delete system restore point.\n\n * 404 DatabaseRestorePointNotFound - Can not find database restore point.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 408 DatabaseRestorePointTimedOut - Create database restore point failed."
     }
    }
   },
   "delete": {
    "tags": [
     "RestorePoints"
    ],
    "description": "Deletes a restore point.",
    "operationId": "RestorePoints_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:193"
     },
     {
      "$ref": "#/components/parameters/parameters:194"
     },
     {
      "$ref": "#/components/parameters/parameters:196"
     },
     {
      "name": "restorePointName",
      "in": "path",
      "description": "The name of the restore point.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:191"
     },
     {
      "$ref": "#/components/parameters/parameters:192"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the restore point."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 BackupNotAllowedOnDeactivatedDatabase - Cannot create restore point on a deactivated database.\n\n * 400 RestorePointLimitReached - A restore point cannot be created because database would exceed the allowed quota of restore points.\n\n * 400 RestorePointAttemptToDeleteSystemBackup - Cannot delete system restore point.\n\n * 404 DatabaseRestorePointNotFound - Can not find database restore point.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 408 DatabaseRestorePointTimedOut - Create database restore point failed."
     }
    }
   }
  },
  "path:124": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///882?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelOperations.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/operations/{operationId}/cancel",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelOperations.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1operations~1{operationId}~1cancel"
    ]
   },
   "post": {
    "tags": [
     "Databases"
    ],
    "description": "Cancels the asynchronous operation on the database.",
    "operationId": "DatabaseOperations_Cancel",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:203"
     },
     {
      "$ref": "#/components/parameters/parameters:204"
     },
     {
      "$ref": "#/components/parameters/parameters:206"
     },
     {
      "name": "operationId",
      "in": "path",
      "description": "The operation identifier.",
      "required": true,
      "schema": {
       "format": "uuid",
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:201"
     },
     {
      "$ref": "#/components/parameters/parameters:202"
     }
    ],
    "responses": {
     "200": {
      "description": "The request for cancel has been executed successfully."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 TierChangeUnsupportedDueToMemoryOptimizedObject - The database cannot update its sku because it has memory-optimized objects.\n\n * 400 SourceServerNotFound - The server part of a source database id provided in a CreateDatabaseAsCopy API call doesn't map to an existing server.\n\n * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 UnsupportedServiceName - The specified name is an invalid name because it contains one or more unsupported unicode characters.\n\n * 400 CurrentDatabaseLogSizeExceedsMaxSize - User attempted to change the database to a sku with lower max log size than the current usage.\n\n * 400 CannotUpdateToFreeDatabase - Updating a database to the free sku is not supported.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 InvalidTierSkuCombination - The specified tier does not support the specified sku.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 OfferDisabledOnSubscription - Subscription offer type is restricted from provisioning the requested resource.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 PartnerServerNotCompetible - The user is attempting to copy a database from a SAWA V1 server to a Sterling server or vice versa.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 ResourcePoolNotFound - Specified elastic pool does not exist in the specified logical server.\n\n * 400 ElasticPoolSkuCombinationInvalid - Elastic pool and sku can be specified together only if sku is specified as 'ElasticPool'.\n\n * 400 ElasticPoolTierCombinationInvalid - The database tier is different than the elastic pool service tier.\n\n * 400 ElasticPoolDatabaseCountOverLimit - Attempting to create or add database to elastic pool when the database count limit of the elastic pool has been reached.\n\n * 400 CannotChangeToOrFromDataWarehouseTier - User attempted to change the sku of a database from DataWarehouse tier to non DataWarehouse tiers or vice versa.\n\n * 400 CurrentDatabaseSizeExceedsMaxSize - User attempted to reduce the max size for a database to a size smaller than the current usage.\n\n * 400 ElasticPoolDecreaseStorageLimitBelowUsage - Attempting to decrease the storage limit of the elastic pool below its storage usage.\n\n * 400 UpdateNotAllowedOnPausedDatabase - User attempted to perform an update on a paused database.\n\n * 400 InvalidMaxSizeTierCombination - The specified tier does not support the specified database max size.\n\n * 400 RegionDoesNotSupportVersion - A user attempted to create a server of a specified version in a location where that server version isn't supported.\n\n * 400 InvalidTier - The user specified an invalid tier.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 CannotUseTrailingWhitespacesInDatabaseName - The database name validation failed.\n\n * 400 UpdateNotAllowedIfGeoDrOperationInProgress - The operation is disallowed because copy or failover operation for database '{0}' on server '{1}' is currrently in progress.\n\n * 400 InvalidCollation - Collation is not recognized by the server.\n\n * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.\n\n * 400 UpdateNotAllowedInCurrentReplicationState - The operation is disallowed on the database in its current replication state.\n\n * 400 GeoReplicaLimitReached - The per-replica replication limit was reached.\n\n * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes\n\n * 400 ReplicationSourceAndTargetMustHaveSameName - The replication source and target databases must have the same name.\n\n * 400 ReplicationSourceAndTargetMustBeInDifferentServers - The replication source and target databases must be in different logical servers.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 400 CannotMoveOrDropSyncMetadataDatabase - Cannot drop database used as sync metadata database.\n\n * 400 CannotMoveOrDropJobAccountDatabase - Cannot drop database associated with job account.\n\n * 400 JobAgentDatabaseEditionUnsupported - The specified database's service level objective is not supported for use as a job agent database.\n\n * 400 SourceDatabaseNotFound - The source database does not exist.\n\n * 400 ChangeUnsupportedOnEntity - User attempted an unsupported create/update/delete operation on a given entity.\n\n * 400 CannotMoveOrDropJobAccountDatabase - Cannot drop database associated with job account.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 CannotMoveOrDropSyncMetadataDatabase - Cannot drop database used as sync metadata database.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 404 CannotFindObject - Cannot find the object because it does not exist or you do not have permissions\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 SkuAssignmentInProgress - The current assignment request cannot be processed because a previous request has not completed.\n\n * 409 ServerDtuQuotaExceeded - Could not perform the operation because server would exceed the allowed Database Throughput Unit quota.\n\n * 409 UnableToAlterDatabaseInReplication - User altered edition on a database in a replication relationship.\n\n * 409 CurrentMemoryUsageExceedsSkuQuota - User attempted an sku update operation that cannot be completed due to the higher resource consumption.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 ConflictingDatabaseOperation - There is already some operation on the database and the current operation should wait till it is done.\n\n * 409 SimultaneousSkuChangeNotAllowed - Service objective change operations cannot run on both databases of a replication relationship at the same time.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidOperationForDatabaseInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 409 CannotCancelOperation - The management operation is in a state that cannot be cancelled.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 500 ActivateOrDeactivateWorkflowThrottling - Activation or deactivation workflow failed because there are too many concurrent workflows\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    }
   }
  },
  "path:125": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///882?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelOperations.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/operations",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelOperations.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1operations"
    ]
   },
   "get": {
    "tags": [
     "Databases"
    ],
    "description": "Gets a list of operations performed on the database.",
    "operationId": "DatabaseOperations_ListByDatabase",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:203"
     },
     {
      "$ref": "#/components/parameters/parameters:204"
     },
     {
      "$ref": "#/components/parameters/parameters:206"
     },
     {
      "$ref": "#/components/parameters/parameters:201"
     },
     {
      "$ref": "#/components/parameters/parameters:202"
     }
    ],
    "responses": {
     "200": {
      "description": "The request for getting database operations has been executed successfully.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:203"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 TierChangeUnsupportedDueToMemoryOptimizedObject - The database cannot update its sku because it has memory-optimized objects.\n\n * 400 SourceServerNotFound - The server part of a source database id provided in a CreateDatabaseAsCopy API call doesn't map to an existing server.\n\n * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 UnsupportedServiceName - The specified name is an invalid name because it contains one or more unsupported unicode characters.\n\n * 400 CurrentDatabaseLogSizeExceedsMaxSize - User attempted to change the database to a sku with lower max log size than the current usage.\n\n * 400 CannotUpdateToFreeDatabase - Updating a database to the free sku is not supported.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 InvalidTierSkuCombination - The specified tier does not support the specified sku.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 OfferDisabledOnSubscription - Subscription offer type is restricted from provisioning the requested resource.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 PartnerServerNotCompetible - The user is attempting to copy a database from a SAWA V1 server to a Sterling server or vice versa.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 ResourcePoolNotFound - Specified elastic pool does not exist in the specified logical server.\n\n * 400 ElasticPoolSkuCombinationInvalid - Elastic pool and sku can be specified together only if sku is specified as 'ElasticPool'.\n\n * 400 ElasticPoolTierCombinationInvalid - The database tier is different than the elastic pool service tier.\n\n * 400 ElasticPoolDatabaseCountOverLimit - Attempting to create or add database to elastic pool when the database count limit of the elastic pool has been reached.\n\n * 400 CannotChangeToOrFromDataWarehouseTier - User attempted to change the sku of a database from DataWarehouse tier to non DataWarehouse tiers or vice versa.\n\n * 400 CurrentDatabaseSizeExceedsMaxSize - User attempted to reduce the max size for a database to a size smaller than the current usage.\n\n * 400 ElasticPoolDecreaseStorageLimitBelowUsage - Attempting to decrease the storage limit of the elastic pool below its storage usage.\n\n * 400 UpdateNotAllowedOnPausedDatabase - User attempted to perform an update on a paused database.\n\n * 400 InvalidMaxSizeTierCombination - The specified tier does not support the specified database max size.\n\n * 400 RegionDoesNotSupportVersion - A user attempted to create a server of a specified version in a location where that server version isn't supported.\n\n * 400 InvalidTier - The user specified an invalid tier.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 CannotUseTrailingWhitespacesInDatabaseName - The database name validation failed.\n\n * 400 UpdateNotAllowedIfGeoDrOperationInProgress - The operation is disallowed because copy or failover operation for database '{0}' on server '{1}' is currrently in progress.\n\n * 400 InvalidCollation - Collation is not recognized by the server.\n\n * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.\n\n * 400 UpdateNotAllowedInCurrentReplicationState - The operation is disallowed on the database in its current replication state.\n\n * 400 GeoReplicaLimitReached - The per-replica replication limit was reached.\n\n * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes\n\n * 400 ReplicationSourceAndTargetMustHaveSameName - The replication source and target databases must have the same name.\n\n * 400 ReplicationSourceAndTargetMustBeInDifferentServers - The replication source and target databases must be in different logical servers.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 400 CannotMoveOrDropSyncMetadataDatabase - Cannot drop database used as sync metadata database.\n\n * 400 CannotMoveOrDropJobAccountDatabase - Cannot drop database associated with job account.\n\n * 400 JobAgentDatabaseEditionUnsupported - The specified database's service level objective is not supported for use as a job agent database.\n\n * 400 SourceDatabaseNotFound - The source database does not exist.\n\n * 400 ChangeUnsupportedOnEntity - User attempted an unsupported create/update/delete operation on a given entity.\n\n * 400 CannotMoveOrDropJobAccountDatabase - Cannot drop database associated with job account.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 CannotMoveOrDropSyncMetadataDatabase - Cannot drop database used as sync metadata database.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 404 CannotFindObject - Cannot find the object because it does not exist or you do not have permissions\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 SkuAssignmentInProgress - The current assignment request cannot be processed because a previous request has not completed.\n\n * 409 ServerDtuQuotaExceeded - Could not perform the operation because server would exceed the allowed Database Throughput Unit quota.\n\n * 409 UnableToAlterDatabaseInReplication - User altered edition on a database in a replication relationship.\n\n * 409 CurrentMemoryUsageExceedsSkuQuota - User attempted an sku update operation that cannot be completed due to the higher resource consumption.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 ConflictingDatabaseOperation - There is already some operation on the database and the current operation should wait till it is done.\n\n * 409 SimultaneousSkuChangeNotAllowed - Service objective change operations cannot run on both databases of a replication relationship at the same time.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidOperationForDatabaseInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 500 ActivateOrDeactivateWorkflowThrottling - Activation or deactivation workflow failed because there are too many concurrent workflows\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:126": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///883?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelPoolOperations.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/operations/{operationId}/cancel",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelPoolOperations.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1elasticPools~1{elasticPoolName}~1operations~1{operationId}~1cancel"
    ]
   },
   "post": {
    "tags": [
     "ElasticPools"
    ],
    "description": "Cancels the asynchronous operation on the elastic pool.",
    "operationId": "ElasticPoolOperations_Cancel",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:213"
     },
     {
      "$ref": "#/components/parameters/parameters:214"
     },
     {
      "name": "elasticPoolName",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "operationId",
      "in": "path",
      "description": "The operation identifier.",
      "required": true,
      "schema": {
       "format": "uuid",
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:211"
     },
     {
      "$ref": "#/components/parameters/parameters:212"
     }
    ],
    "responses": {
     "200": {
      "description": "The request for cancel has been executed successfully."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 CannotCancelOperation - The management operation is in a state that cannot be cancelled.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
     }
    }
   }
  },
  "path:127": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///883?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelPoolOperations.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/operations",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelPoolOperations.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1elasticPools~1{elasticPoolName}~1operations"
    ]
   },
   "get": {
    "tags": [
     "ElasticPools"
    ],
    "description": "Gets a list of operations performed on the elastic pool.",
    "operationId": "ElasticPoolOperations_ListByElasticPool",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:213"
     },
     {
      "$ref": "#/components/parameters/parameters:214"
     },
     {
      "name": "elasticPoolName",
      "in": "path",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:211"
     },
     {
      "$ref": "#/components/parameters/parameters:212"
     }
    ],
    "responses": {
     "200": {
      "description": "The request for getting elastic pool operations has been executed successfully.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:206"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:128": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
    ],
    "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/capabilities",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Sql~1locations~1{locationName}~1capabilities"
    ]
   },
   "get": {
    "tags": [
     "LocationCapabilities"
    ],
    "description": "Gets the subscription capabilities available for the specified location.",
    "operationId": "Capabilities_ListByLocation",
    "parameters": [
     {
      "name": "locationName",
      "in": "path",
      "description": "The location name whose capabilities are retrieved.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "include",
      "in": "query",
      "description": "If specified, restricts the response to only include the selected item.",
      "required": false,
      "x-ms-enum": {
       "name": "CapabilityGroup",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "supportedEditions",
        "supportedElasticPoolEditions",
        "supportedManagedInstanceVersions"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:221"
     },
     {
      "$ref": "#/components/parameters/parameters:222"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the subscription location capabilities.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:209"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 400 InvalidLocation - An invalid location was specified."
     }
    }
   }
  },
  "path:129": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/upgradeDataWarehouse",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1upgradeDataWarehouse"
    ]
   },
   "post": {
    "tags": [
     "Databases"
    ],
    "description": "Upgrades a data warehouse.",
    "operationId": "Databases_UpgradeDataWarehouse",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:233"
     },
     {
      "$ref": "#/components/parameters/parameters:234"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database to be upgraded.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:231"
     },
     {
      "$ref": "#/components/parameters/parameters:232"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully upgraded the data warehouse."
     },
     "202": {
      "description": "Upgrading the data warehouse is in progress."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes\n\n * 400 CurrentDatabaseSizeExceedsMaxSize - User attempted to reduce the max size for a database to a size smaller than the current usage.\n\n * 400 CannotUpdateToFreeDatabase - Updating a database to the free sku is not supported.\n\n * 400 RegionDoesNotSupportVersion - A user attempted to create a server of a specified version in a location where that server version isn't supported.\n\n * 400 AzureKeyVaultInvalidExpirationDate - The operation could not be completed because the Azure Key Vault key expiration date is invalid.\n\n * 400 SecurityAzureKeyVaultUrlNullOrEmpty - The operation could not be completed because the Azure Key Vault Uri is null or empty.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 AzureKeyVaultInvalidUri - An invalid response from Azure Key Vault. Please use a valid Azure Key Vault URI.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 SourceDatabaseNotFound - The source database does not exist.\n\n * 400 SecurityAzureKeyVaultInvalidKeyName - The operation could not be completed because of an invalid Server Key name.\n\n * 400 ChangeUnsupportedOnEntity - User attempted an unsupported create/update/delete operation on a given entity.\n\n * 400 AzureKeyVaultMalformedVaultUri - The provided Key Vault uri is not valid.\n\n * 400 UpdateNotAllowedIfGeoDrOperationInProgress - The operation is disallowed because copy or failover operation for database '{0}' on server '{1}' is currrently in progress.\n\n * 400 CannotUseTrailingWhitespacesInDatabaseName - The database name validation failed.\n\n * 400 SecurityAdalPrincipalCertExpiredError - The operation could not be completed because the Azure Key Vault principal certificate has expired.\n\n * 400 CannotMoveOrDropJobAccountDatabase - Cannot drop database associated with job account.\n\n * 400 JobAgentDatabaseEditionUnsupported - The specified database's service level objective is not supported for use as a job agent database.\n\n * 400 SourceServerNotFound - The server part of a source database id provided in a CreateDatabaseAsCopy API call doesn't map to an existing server.\n\n * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.\n\n * 400 SecurityInvalidAzureKeyVaultRecoveryLevel - The provided Key Vault uri is not valid.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 UnsupportedServiceName - The specified name is an invalid name because it contains one or more unsupported unicode characters.\n\n * 400 KeyMaterialNotFoundOnRemoteServer - Remote server does not have access to key material used as a TDE protector.\n\n * 400 AzureKeyVaultMismatchError - Unexpected Key Vault region found in the http response.\n\n * 400 AzureKeyVaultRsaKeyNotSupported - The provided key vault uses unsupported RSA Key Size or Key Type. The supported RSA key size is 2048 and Key Type is RSA.\n\n * 400 CurrentDatabaseLogSizeExceedsMaxSize - User attempted to change the database to a sku with lower max log size than the current usage.\n\n * 400 CannotMoveOrDropSyncMetadataDatabase - Cannot drop database used as sync metadata database.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 InvalidTierSkuCombination - The specified tier does not support the specified sku.\n\n * 400 InvalidMaxSizeTierCombination - The specified tier does not support the specified database max size.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 InvalidTier - The user specified an invalid tier.\n\n * 400 OfferDisabledOnSubscription - Subscription offer type is restricted from provisioning the requested resource.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 PartnerServerNotCompatible - The user is attempting to copy a database from a SAWA V1 server to a Sterling server or vice versa.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 ResourcePoolNotFound - Specified elastic pool does not exist in the specified logical server.\n\n * 400 InvalidCollation - Collation is not recognized by the server.\n\n * 400 ElasticPoolSkuCombinationInvalid - Elastic pool and sku can be specified together only if sku is specified as 'ElasticPool'.\n\n * 400 ElasticPoolTierCombinationInvalid - The database tier is different than the elastic pool service tier.\n\n * 400 TierChangeUnsupportedDueToMemoryOptimizedObject - The database cannot update its sku because it has memory-optimized objects.\n\n * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.\n\n * 400 UpdateNotAllowedInCurrentReplicationState - The operation is disallowed on the database in its current replication state.\n\n * 400 GeoReplicaLimitReached - The per-replica replication limit was reached.\n\n * 400 ElasticPoolDatabaseCountOverLimit - Attempting to create or add database to elastic pool when the database count limit of the elastic pool has been reached.\n\n * 400 ReplicationSourceAndTargetMustHaveSameName - The replication source and target databases must have the same name.\n\n * 400 CannotChangeToOrFromDataWarehouseTier - User attempted to change the sku of a database from DataWarehouse tier to non DataWarehouse tiers or vice versa.\n\n * 400 ReplicationSourceAndTargetMustBeInDifferentServers - The replication source and target databases must be in different logical servers.\n\n * 400 ElasticPoolDecreaseStorageLimitBelowUsage - Attempting to decrease the storage limit of the elastic pool below its storage usage.\n\n * 400 UpdateNotAllowedOnPausedDatabase - User attempted to perform an update on a paused database.\n\n * 400 UpgradeOnlyAllowedOnDataWarehouseInstances - User attempted to upgrade non-datawarehouse instance.\n\n * 401 AzureKeyVaultKeyDisabled - The operation could not be completed on the server because the Azure Key Vault key is disabled.\n\n * 401 AzureKeyVaultNoServerIdentity - The server identity is not correctly configured on server. Please contact support.\n\n * 401 AzureKeyVaultMissingPermissions - The server is mising required permissions on the Azure Key Vault. \n\n * 401 AdalGenericError - The operation could not be completed because an Azure Active Directory error was encountered.\n\n * 401 AdalServicePrincipalNotFound - The operation could not be completed because an Azure Active Directory library Serivce Principal not found error was encountered.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 CannotFindObject - Cannot find the object because it does not exist or you do not have permissions\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 ServerKeyUriAlreadyExists - The server key URI already exists on the server.\n\n * 409 ServerKeyDoesNotExists - The server key does not exist.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 SimultaneousSkuChangeNotAllowed - Service objective change operations cannot run on both databases of a replication relationship at the same time.\n\n * 409 AzureKeyVaultKeyNameNotFound - The operation could not be completed because the Azure Key Vault Key name does not exist.\n\n * 409 AzureKeyVaultKeyInUse - The key is currently being used by the server.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 SkuAssignmentInProgress - The current assignment request cannot be processed because a previous request has not completed.\n\n * 409 ServerDisabled - Server is disabled.\n\n * 409 ConflictingDatabaseOperation - There is already some operation on the database and the current operation should wait till it is done.\n\n * 409 ServerDtuQuotaExceeded - Could not perform the operation because server would exceed the allowed Database Throughput Unit quota.\n\n * 409 UnableToAlterDatabaseInReplication - User altered edition on a database in a replication relationship.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidOperationForDatabaseInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 CurrentMemoryUsageExceedsSkuQuota - User attempted an sku update operation that cannot be completed due to the higher resource consumption.\n\n * 409 ServerKeyNameAlreadyExists - The server key already exists on the server.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 500 ActivateOrDeactivateWorkflowThrottling - Activation or deactivation workflow failed because there are too many concurrent workflows\n\n * 503 AzureKeyVaultConnectionFailed - The operation could not be completed on the server because attempts to connect to Azure Key Vault have failed\n\n * 503 AzureKeyVaultGenericConnectionError - The operation could not be completed because an error was encountered when attempting to retrieve Key Vault information .\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:130": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases"
    ]
   },
   "get": {
    "tags": [
     "Databases"
    ],
    "description": "Gets a list of databases.",
    "operationId": "Databases_ListByServer",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:233"
     },
     {
      "$ref": "#/components/parameters/parameters:234"
     },
     {
      "$ref": "#/components/parameters/parameters:231"
     },
     {
      "$ref": "#/components/parameters/parameters:232"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of databases.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:226"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:131": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}"
    ]
   },
   "get": {
    "tags": [
     "Databases"
    ],
    "description": "Gets a database.",
    "operationId": "Databases_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:233"
     },
     {
      "$ref": "#/components/parameters/parameters:234"
     },
     {
      "$ref": "#/components/parameters/parameters:236"
     },
     {
      "$ref": "#/components/parameters/parameters:231"
     },
     {
      "$ref": "#/components/parameters/parameters:232"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the specified database.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:228"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   },
   "put": {
    "tags": [
     "Databases"
    ],
    "description": "Creates a new database or updates an existing database.",
    "operationId": "Databases_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:233"
     },
     {
      "$ref": "#/components/parameters/parameters:234"
     },
     {
      "$ref": "#/components/parameters/parameters:236"
     },
     {
      "$ref": "#/components/parameters/parameters:231"
     },
     {
      "$ref": "#/components/parameters/parameters:232"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:228"
       }
      }
     },
     "required": true,
     "description": "The requested database resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the database.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:228"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the database.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:228"
        }
       }
      }
     },
     "202": {
      "description": "Creating or updating the database is in progress."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidDatabaseCreateOrUpdateRequest - The request body for the create or update database operation is invalid.\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 InvalidSourceDatabaseId - Invalid source database identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MissingCollation - Collation is required.\n\n * 400 MissingMaxSizeBytes - MaxSizeBytes is required.\n\n * 400 MissingSkuName - Sku name is rerquired.\n\n * 400 MissingSourceDatabaseId - Missing source database identifier.\n\n * 400 InvalidSkuName - Invalid SKU name.\n\n * 400 MismatchedSkuNameAndCapacity - Mismatch between SKU name and capacity.\n\n * 400 MismatchedSkuNameAndTier - Mismatch between SKU name and tier.\n\n * 400 MismatchedSkuNameAndFamily - Mismatch between SKU name and family.\n\n * 400 DatabaseNameDoesNotMatchSourceDatabaseId - The database name specified doesn’t match the database name in sourceDatabaseId.\n\n * 400 ElasticPoolNotSupportedForExternalBackupRestore - Elastic pool is not supported for external backup restore\n\n * 400 InvalidRecoverableDatabaseId - Invalid recoverable database identifier.\n\n * 400 InvalidRecoveryServicesRecoveryPointId - Invalid recovery services recovery point identifier.\n\n * 400 InvalidRestorableDroppedDatabaseDeletionDate - The restorable dropped database deletion date given is invalid\n\n * 400 InvalidRestorableDroppedDatabaseId - Invalid restorable dropped database identifier\n\n * 400 MissingRecoverableDatabaseId - Missing recoverable database identifier.\n\n * 400 MissingRecoveryServicesRecoveryPointId - Missing recovery services recovery point Id.\n\n * 400 MissingRestorableDroppedDatabaseId - Missing restorableDroppedDatabaseId\n\n * 400 MissingRestorePointInTime - Missing restore point in time\n\n * 400 MissingSourceDatabaseDeletionDate - Missing source database deletion date\n\n * 400 MissingStorageContainerSasToken - Missing storage container SAS token\n\n * 400 MissingStorageContainerUri - Missing storage container URI\n\n * 400 RestorableDroppedDatabaseIdGivenForRestoreWithSourceDatabaseId - Cannot specify restorableDroppedDatabaseId when sourceDatabaseId is already given in restore create mode\n\n * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes\n\n * 400 CurrentDatabaseSizeExceedsMaxSize - User attempted to reduce the max size for a database to a size smaller than the current usage.\n\n * 400 CannotUpdateToFreeDatabase - Updating a database to the free sku is not supported.\n\n * 400 RegionDoesNotSupportVersion - A user attempted to create a server of a specified version in a location where that server version isn't supported.\n\n * 400 AzureKeyVaultInvalidExpirationDate - The operation could not be completed because the Azure Key Vault key expiration date is invalid.\n\n * 400 SecurityAzureKeyVaultUrlNullOrEmpty - The operation could not be completed because the Azure Key Vault Uri is null or empty.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 AzureKeyVaultInvalidUri - An invalid response from Azure Key Vault. Please use a valid Azure Key Vault URI.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 SourceDatabaseNotFound - The source database does not exist.\n\n * 400 SecurityAzureKeyVaultInvalidKeyName - The operation could not be completed because of an invalid Server Key name.\n\n * 400 ChangeUnsupportedOnEntity - User attempted an unsupported create/update/delete operation on a given entity.\n\n * 400 AzureKeyVaultMalformedVaultUri - The provided Key Vault uri is not valid.\n\n * 400 UpdateNotAllowedIfGeoDrOperationInProgress - The operation is disallowed because copy or failover operation for database '{0}' on server '{1}' is currrently in progress.\n\n * 400 CannotUseTrailingWhitespacesInDatabaseName - The database name validation failed.\n\n * 400 SecurityAdalPrincipalCertExpiredError - The operation could not be completed because the Azure Key Vault principal certificate has expired.\n\n * 400 CannotMoveOrDropJobAccountDatabase - Cannot drop database associated with job account.\n\n * 400 JobAgentDatabaseEditionUnsupported - The specified database's service level objective is not supported for use as a job agent database.\n\n * 400 SourceServerNotFound - The server part of a source database id provided in a CreateDatabaseAsCopy API call doesn't map to an existing server.\n\n * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.\n\n * 400 SecurityInvalidAzureKeyVaultRecoveryLevel - The provided Key Vault uri is not valid.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 UnsupportedServiceName - The specified name is an invalid name because it contains one or more unsupported unicode characters.\n\n * 400 KeyMaterialNotFoundOnRemoteServer - Remote server does not have access to key material used as a TDE protector.\n\n * 400 AzureKeyVaultMismatchError - Unexpected Key Vault region found in the http response.\n\n * 400 AzureKeyVaultRsaKeyNotSupported - The provided key vault uses unsupported RSA Key Size or Key Type. The supported RSA key size is 2048 and Key Type is RSA.\n\n * 400 CurrentDatabaseLogSizeExceedsMaxSize - User attempted to change the database to a sku with lower max log size than the current usage.\n\n * 400 CannotMoveOrDropSyncMetadataDatabase - Cannot drop database used as sync metadata database.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 InvalidTierSkuCombination - The specified tier does not support the specified sku.\n\n * 400 InvalidMaxSizeTierCombination - The specified tier does not support the specified database max size.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 InvalidTier - The user specified an invalid tier.\n\n * 400 OfferDisabledOnSubscription - Subscription offer type is restricted from provisioning the requested resource.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 PartnerServerNotCompatible - The user is attempting to copy a database from a SAWA V1 server to a Sterling server or vice versa.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 ResourcePoolNotFound - Specified elastic pool does not exist in the specified logical server.\n\n * 400 InvalidCollation - Collation is not recognized by the server.\n\n * 400 ElasticPoolSkuCombinationInvalid - Elastic pool and sku can be specified together only if sku is specified as 'ElasticPool'.\n\n * 400 ElasticPoolTierCombinationInvalid - The database tier is different than the elastic pool service tier.\n\n * 400 TierChangeUnsupportedDueToMemoryOptimizedObject - The database cannot update its sku because it has memory-optimized objects.\n\n * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.\n\n * 400 UpdateNotAllowedInCurrentReplicationState - The operation is disallowed on the database in its current replication state.\n\n * 400 GeoReplicaLimitReached - The per-replica replication limit was reached.\n\n * 400 ElasticPoolDatabaseCountOverLimit - Attempting to create or add database to elastic pool when the database count limit of the elastic pool has been reached.\n\n * 400 ReplicationSourceAndTargetMustHaveSameName - The replication source and target databases must have the same name.\n\n * 400 CannotChangeToOrFromDataWarehouseTier - User attempted to change the sku of a database from DataWarehouse tier to non DataWarehouse tiers or vice versa.\n\n * 400 ReplicationSourceAndTargetMustBeInDifferentServers - The replication source and target databases must be in different logical servers.\n\n * 400 ElasticPoolDecreaseStorageLimitBelowUsage - Attempting to decrease the storage limit of the elastic pool below its storage usage.\n\n * 400 UpdateNotAllowedOnPausedDatabase - User attempted to perform an update on a paused database.\n\n * 401 AzureKeyVaultKeyDisabled - The operation could not be completed on the server because the Azure Key Vault key is disabled.\n\n * 401 AzureKeyVaultNoServerIdentity - The server identity is not correctly configured on server. Please contact support.\n\n * 401 AzureKeyVaultMissingPermissions - The server is mising required permissions on the Azure Key Vault. \n\n * 401 AdalGenericError - The operation could not be completed because an Azure Active Directory error was encountered.\n\n * 401 AdalServicePrincipalNotFound - The operation could not be completed because an Azure Active Directory library Serivce Principal not found error was encountered.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 CannotFindObject - Cannot find the object because it does not exist or you do not have permissions\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 ServerKeyUriAlreadyExists - The server key URI already exists on the server.\n\n * 409 ServerKeyDoesNotExists - The server key does not exist.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 SimultaneousSkuChangeNotAllowed - Service objective change operations cannot run on both databases of a replication relationship at the same time.\n\n * 409 AzureKeyVaultKeyNameNotFound - The operation could not be completed because the Azure Key Vault Key name does not exist.\n\n * 409 AzureKeyVaultKeyInUse - The key is currently being used by the server.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 SkuAssignmentInProgress - The current assignment request cannot be processed because a previous request has not completed.\n\n * 409 ServerDisabled - Server is disabled.\n\n * 409 ConflictingDatabaseOperation - There is already some operation on the database and the current operation should wait till it is done.\n\n * 409 ServerDtuQuotaExceeded - Could not perform the operation because server would exceed the allowed Database Throughput Unit quota.\n\n * 409 UnableToAlterDatabaseInReplication - User altered edition on a database in a replication relationship.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidOperationForDatabaseInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 CurrentMemoryUsageExceedsSkuQuota - User attempted an sku update operation that cannot be completed due to the higher resource consumption.\n\n * 409 ServerKeyNameAlreadyExists - The server key already exists on the server.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 500 ActivateOrDeactivateWorkflowThrottling - Activation or deactivation workflow failed because there are too many concurrent workflows\n\n * 503 AzureKeyVaultConnectionFailed - The operation could not be completed on the server because attempts to connect to Azure Key Vault have failed\n\n * 503 AzureKeyVaultGenericConnectionError - The operation could not be completed because an error was encountered when attempting to retrieve Key Vault information .\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   },
   "delete": {
    "tags": [
     "Databases"
    ],
    "description": "Deletes the database.",
    "operationId": "Databases_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:233"
     },
     {
      "$ref": "#/components/parameters/parameters:234"
     },
     {
      "$ref": "#/components/parameters/parameters:236"
     },
     {
      "$ref": "#/components/parameters/parameters:231"
     },
     {
      "$ref": "#/components/parameters/parameters:232"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the database."
     },
     "202": {
      "description": "Deleting the database is in progress."
     },
     "204": {
      "description": "The specified database does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 CannotMoveOrDropJobAccountDatabase - Cannot drop database associated with job account.\n\n * 400 CannotMoveOrDropSyncMetadataDatabase - Cannot drop database used as sync metadata database.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 ServerDisabled - Server is disabled.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources."
     }
    },
    "x-ms-long-running-operation": true
   },
   "patch": {
    "tags": [
     "Databases"
    ],
    "description": "Updates an existing database.",
    "operationId": "Databases_Update",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:233"
     },
     {
      "$ref": "#/components/parameters/parameters:234"
     },
     {
      "$ref": "#/components/parameters/parameters:236"
     },
     {
      "$ref": "#/components/parameters/parameters:231"
     },
     {
      "$ref": "#/components/parameters/parameters:232"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:229"
       }
      }
     },
     "required": true,
     "description": "The requested database resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the database.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:228"
        }
       }
      }
     },
     "202": {
      "description": "Updating the database is in progress."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidDatabaseCreateOrUpdateRequest - The request body for the create or update database operation is invalid.\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 InvalidSourceDatabaseId - Invalid source database identifier.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MissingCollation - Collation is required.\n\n * 400 MissingMaxSizeBytes - MaxSizeBytes is required.\n\n * 400 MissingSkuName - Sku name is rerquired.\n\n * 400 MissingSourceDatabaseId - Missing source database identifier.\n\n * 400 InvalidSkuName - Invalid SKU name.\n\n * 400 MismatchedSkuNameAndCapacity - Mismatch between SKU name and capacity.\n\n * 400 MismatchedSkuNameAndTier - Mismatch between SKU name and tier.\n\n * 400 MismatchedSkuNameAndFamily - Mismatch between SKU name and family.\n\n * 400 DatabaseNameDoesNotMatchSourceDatabaseId - The database name specified doesn’t match the database name in sourceDatabaseId.\n\n * 400 ElasticPoolNotSupportedForExternalBackupRestore - Elastic pool is not supported for external backup restore\n\n * 400 InvalidRecoverableDatabaseId - Invalid recoverable database identifier.\n\n * 400 InvalidRecoveryServicesRecoveryPointId - Invalid recovery services recovery point identifier.\n\n * 400 InvalidRestorableDroppedDatabaseDeletionDate - The restorable dropped database deletion date given is invalid\n\n * 400 InvalidRestorableDroppedDatabaseId - Invalid restorable dropped database identifier\n\n * 400 MissingRecoverableDatabaseId - Missing recoverable database identifier.\n\n * 400 MissingRecoveryServicesRecoveryPointId - Missing recovery services recovery point Id.\n\n * 400 MissingRestorableDroppedDatabaseId - Missing restorableDroppedDatabaseId\n\n * 400 MissingRestorePointInTime - Missing restore point in time\n\n * 400 MissingSourceDatabaseDeletionDate - Missing source database deletion date\n\n * 400 MissingStorageContainerSasToken - Missing storage container SAS token\n\n * 400 MissingStorageContainerUri - Missing storage container URI\n\n * 400 RestorableDroppedDatabaseIdGivenForRestoreWithSourceDatabaseId - Cannot specify restorableDroppedDatabaseId when sourceDatabaseId is already given in restore create mode\n\n * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes\n\n * 400 CurrentDatabaseSizeExceedsMaxSize - User attempted to reduce the max size for a database to a size smaller than the current usage.\n\n * 400 CannotUpdateToFreeDatabase - Updating a database to the free sku is not supported.\n\n * 400 RegionDoesNotSupportVersion - A user attempted to create a server of a specified version in a location where that server version isn't supported.\n\n * 400 AzureKeyVaultInvalidExpirationDate - The operation could not be completed because the Azure Key Vault key expiration date is invalid.\n\n * 400 SecurityAzureKeyVaultUrlNullOrEmpty - The operation could not be completed because the Azure Key Vault Uri is null or empty.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 AzureKeyVaultInvalidUri - An invalid response from Azure Key Vault. Please use a valid Azure Key Vault URI.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 SourceDatabaseNotFound - The source database does not exist.\n\n * 400 SecurityAzureKeyVaultInvalidKeyName - The operation could not be completed because of an invalid Server Key name.\n\n * 400 ChangeUnsupportedOnEntity - User attempted an unsupported create/update/delete operation on a given entity.\n\n * 400 AzureKeyVaultMalformedVaultUri - The provided Key Vault uri is not valid.\n\n * 400 UpdateNotAllowedIfGeoDrOperationInProgress - The operation is disallowed because copy or failover operation for database '{0}' on server '{1}' is currrently in progress.\n\n * 400 CannotUseTrailingWhitespacesInDatabaseName - The database name validation failed.\n\n * 400 SecurityAdalPrincipalCertExpiredError - The operation could not be completed because the Azure Key Vault principal certificate has expired.\n\n * 400 CannotMoveOrDropJobAccountDatabase - Cannot drop database associated with job account.\n\n * 400 JobAgentDatabaseEditionUnsupported - The specified database's service level objective is not supported for use as a job agent database.\n\n * 400 SourceServerNotFound - The server part of a source database id provided in a CreateDatabaseAsCopy API call doesn't map to an existing server.\n\n * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.\n\n * 400 SecurityInvalidAzureKeyVaultRecoveryLevel - The provided Key Vault uri is not valid.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 UnsupportedServiceName - The specified name is an invalid name because it contains one or more unsupported unicode characters.\n\n * 400 KeyMaterialNotFoundOnRemoteServer - Remote server does not have access to key material used as a TDE protector.\n\n * 400 AzureKeyVaultMismatchError - Unexpected Key Vault region found in the http response.\n\n * 400 AzureKeyVaultRsaKeyNotSupported - The provided key vault uses unsupported RSA Key Size or Key Type. The supported RSA key size is 2048 and Key Type is RSA.\n\n * 400 CurrentDatabaseLogSizeExceedsMaxSize - User attempted to change the database to a sku with lower max log size than the current usage.\n\n * 400 CannotMoveOrDropSyncMetadataDatabase - Cannot drop database used as sync metadata database.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 InvalidTierSkuCombination - The specified tier does not support the specified sku.\n\n * 400 InvalidMaxSizeTierCombination - The specified tier does not support the specified database max size.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 InvalidTier - The user specified an invalid tier.\n\n * 400 OfferDisabledOnSubscription - Subscription offer type is restricted from provisioning the requested resource.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 PartnerServerNotCompatible - The user is attempting to copy a database from a SAWA V1 server to a Sterling server or vice versa.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 ResourcePoolNotFound - Specified elastic pool does not exist in the specified logical server.\n\n * 400 InvalidCollation - Collation is not recognized by the server.\n\n * 400 ElasticPoolSkuCombinationInvalid - Elastic pool and sku can be specified together only if sku is specified as 'ElasticPool'.\n\n * 400 ElasticPoolTierCombinationInvalid - The database tier is different than the elastic pool service tier.\n\n * 400 TierChangeUnsupportedDueToMemoryOptimizedObject - The database cannot update its sku because it has memory-optimized objects.\n\n * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.\n\n * 400 UpdateNotAllowedInCurrentReplicationState - The operation is disallowed on the database in its current replication state.\n\n * 400 GeoReplicaLimitReached - The per-replica replication limit was reached.\n\n * 400 ElasticPoolDatabaseCountOverLimit - Attempting to create or add database to elastic pool when the database count limit of the elastic pool has been reached.\n\n * 400 ReplicationSourceAndTargetMustHaveSameName - The replication source and target databases must have the same name.\n\n * 400 CannotChangeToOrFromDataWarehouseTier - User attempted to change the sku of a database from DataWarehouse tier to non DataWarehouse tiers or vice versa.\n\n * 400 ReplicationSourceAndTargetMustBeInDifferentServers - The replication source and target databases must be in different logical servers.\n\n * 400 ElasticPoolDecreaseStorageLimitBelowUsage - Attempting to decrease the storage limit of the elastic pool below its storage usage.\n\n * 400 UpdateNotAllowedOnPausedDatabase - User attempted to perform an update on a paused database.\n\n * 401 AzureKeyVaultKeyDisabled - The operation could not be completed on the server because the Azure Key Vault key is disabled.\n\n * 401 AzureKeyVaultNoServerIdentity - The server identity is not correctly configured on server. Please contact support.\n\n * 401 AzureKeyVaultMissingPermissions - The server is mising required permissions on the Azure Key Vault. \n\n * 401 AdalGenericError - The operation could not be completed because an Azure Active Directory error was encountered.\n\n * 401 AdalServicePrincipalNotFound - The operation could not be completed because an Azure Active Directory library Serivce Principal not found error was encountered.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 CannotFindObject - Cannot find the object because it does not exist or you do not have permissions\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 ServerKeyUriAlreadyExists - The server key URI already exists on the server.\n\n * 409 ServerKeyDoesNotExists - The server key does not exist.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 SimultaneousSkuChangeNotAllowed - Service objective change operations cannot run on both databases of a replication relationship at the same time.\n\n * 409 AzureKeyVaultKeyNameNotFound - The operation could not be completed because the Azure Key Vault Key name does not exist.\n\n * 409 AzureKeyVaultKeyInUse - The key is currently being used by the server.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 SkuAssignmentInProgress - The current assignment request cannot be processed because a previous request has not completed.\n\n * 409 ServerDisabled - Server is disabled.\n\n * 409 ConflictingDatabaseOperation - There is already some operation on the database and the current operation should wait till it is done.\n\n * 409 ServerDtuQuotaExceeded - Could not perform the operation because server would exceed the allowed Database Throughput Unit quota.\n\n * 409 UnableToAlterDatabaseInReplication - User altered edition on a database in a replication relationship.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidOperationForDatabaseInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 CurrentMemoryUsageExceedsSkuQuota - User attempted an sku update operation that cannot be completed due to the higher resource consumption.\n\n * 409 ServerKeyNameAlreadyExists - The server key already exists on the server.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 500 ActivateOrDeactivateWorkflowThrottling - Activation or deactivation workflow failed because there are too many concurrent workflows\n\n * 503 AzureKeyVaultConnectionFailed - The operation could not be completed on the server because attempts to connect to Azure Key Vault have failed\n\n * 503 AzureKeyVaultGenericConnectionError - The operation could not be completed because an error was encountered when attempting to retrieve Key Vault information .\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:132": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/databases",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1elasticPools~1{elasticPoolName}~1databases"
    ]
   },
   "get": {
    "tags": [
     "Databases"
    ],
    "description": "Gets a list of databases in an elastic pool.",
    "operationId": "Databases_ListByElasticPool",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:233"
     },
     {
      "$ref": "#/components/parameters/parameters:234"
     },
     {
      "name": "elasticPoolName",
      "in": "path",
      "description": "The name of the elastic pool.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:231"
     },
     {
      "$ref": "#/components/parameters/parameters:232"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved a list of databases in an elastic pool.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:226"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 CannotFindObject - Cannot find the object because it does not exist or you do not have permissions\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:133": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/pause",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1pause"
    ]
   },
   "post": {
    "tags": [
     "Databases"
    ],
    "description": "Pauses a database.",
    "operationId": "Databases_Pause",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:233"
     },
     {
      "$ref": "#/components/parameters/parameters:234"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database to be paused.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:231"
     },
     {
      "$ref": "#/components/parameters/parameters:232"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully paused the database.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:228"
        }
       }
      }
     },
     "202": {
      "description": "Pausing the database is in progress."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 CannotDeactivateWhenDeactivatingInProgress - Deactivation workflow failed because there is a deactivate workflow already running.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 500 ActivateOrDeactivateWorkflowThrottling - Activation or deactivation workflow failed because there are too many concurrent workflows"
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:134": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/resume",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1resume"
    ]
   },
   "post": {
    "tags": [
     "Databases"
    ],
    "description": "Resumes a database.",
    "operationId": "Databases_Resume",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:233"
     },
     {
      "$ref": "#/components/parameters/parameters:234"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database to be resumed.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:231"
     },
     {
      "$ref": "#/components/parameters/parameters:232"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully resumed the database.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:228"
        }
       }
      }
     },
     "202": {
      "description": "Resuming the database is in progress."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 500 ActivateOrDeactivateWorkflowThrottling - Activation or deactivation workflow failed because there are too many concurrent workflows"
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:135": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/move",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1move"
    ]
   },
   "post": {
    "tags": [
     "Databases"
    ],
    "description": "Renames a database.",
    "operationId": "Databases_Rename",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:233"
     },
     {
      "$ref": "#/components/parameters/parameters:234"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database to rename.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:231"
     },
     {
      "$ref": "#/components/parameters/parameters:232"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:230"
       }
      }
     },
     "required": true,
     "description": "The resource move definition for renaming this database.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully renamed the database."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidResourceMoveRequest - The resource move request is invalid.\n\n * 400 InvalidMoveTargetResourceId - The target resource identifier in move request is invalid.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 CannotMoveOrDropJobAccountDatabase - Cannot drop database associated with job account.\n\n * 400 UnsupportedServiceName - The specified name is an invalid name because it contains one or more unsupported unicode characters.\n\n * 400 CannotMoveOrDropSyncMetadataDatabase - Cannot drop database used as sync metadata database.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 404 SourceDatabaseNotFound - The source database does not exist."
     }
    }
   }
  },
  "path:136": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1elasticPools"
    ]
   },
   "get": {
    "tags": [
     "ElasticPools"
    ],
    "description": "Gets all elastic pools in a server.",
    "operationId": "ElasticPools_ListByServer",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:243"
     },
     {
      "$ref": "#/components/parameters/parameters:244"
     },
     {
      "name": "$skip",
      "in": "query",
      "description": "The number of elements in the collection to skip.",
      "required": false,
      "schema": {
       "type": "integer"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:241"
     },
     {
      "$ref": "#/components/parameters/parameters:242"
     }
    ],
    "responses": {
     "200": {
      "description": "Succeeded",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:231"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes\n\n * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn't match the allowed values.\n\n * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.\n\n * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.\n\n * 400 InvalidTier - The user specified an invalid tier.\n\n * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.\n\n * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.\n\n * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.\n\n * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.\n\n * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.\n\n * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.\n\n * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.\n\n * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn't match the allowed values.\n\n * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.\n\n * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn't match the allowed values.\n\n * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.\n\n * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.\n\n * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.\n\n * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn't match the allowed values.\n\n * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.\n\n * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.\n\n * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.\n\n * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 405 NotSupported - This functionality is not supported.\n\n * 409 ServerDisabled - Server is disabled.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:137": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1elasticPools~1{elasticPoolName}"
    ]
   },
   "get": {
    "tags": [
     "ElasticPools"
    ],
    "description": "Gets an elastic pool.",
    "operationId": "ElasticPools_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:243"
     },
     {
      "$ref": "#/components/parameters/parameters:244"
     },
     {
      "name": "elasticPoolName",
      "in": "path",
      "description": "The name of the elastic pool.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:241"
     },
     {
      "$ref": "#/components/parameters/parameters:242"
     }
    ],
    "responses": {
     "200": {
      "description": "Succeeded",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:234"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes\n\n * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn't match the allowed values.\n\n * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.\n\n * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.\n\n * 400 InvalidTier - The user specified an invalid tier.\n\n * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.\n\n * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.\n\n * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.\n\n * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.\n\n * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.\n\n * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.\n\n * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.\n\n * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn't match the allowed values.\n\n * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.\n\n * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn't match the allowed values.\n\n * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.\n\n * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.\n\n * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.\n\n * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn't match the allowed values.\n\n * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.\n\n * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.\n\n * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.\n\n * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 405 NotSupported - This functionality is not supported.\n\n * 409 ServerDisabled - Server is disabled.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable."
     }
    }
   },
   "put": {
    "tags": [
     "ElasticPools"
    ],
    "description": "Creates or updates an elastic pool.",
    "operationId": "ElasticPools_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:243"
     },
     {
      "$ref": "#/components/parameters/parameters:244"
     },
     {
      "name": "elasticPoolName",
      "in": "path",
      "description": "The name of the elastic pool.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:241"
     },
     {
      "$ref": "#/components/parameters/parameters:242"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:234"
       }
      }
     },
     "required": true,
     "description": "The elastic pool parameters.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Updated the elastic pool",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:234"
        }
       }
      }
     },
     "201": {
      "description": "Created the elastic pool",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:234"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes\n\n * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn't match the allowed values.\n\n * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.\n\n * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.\n\n * 400 InvalidTier - The user specified an invalid tier.\n\n * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.\n\n * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.\n\n * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.\n\n * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.\n\n * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.\n\n * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.\n\n * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.\n\n * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn't match the allowed values.\n\n * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.\n\n * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn't match the allowed values.\n\n * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.\n\n * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.\n\n * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.\n\n * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn't match the allowed values.\n\n * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.\n\n * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.\n\n * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.\n\n * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 400 InvalidSkuName - Invalid SKU name.\n\n * 400 MismatchedSkuNameAndCapacity - Mismatch between SKU name and capacity.\n\n * 400 MismatchedSkuNameAndTier - Mismatch between SKU name and tier.\n\n * 400 MismatchedSkuNameAndFamily - Mismatch between SKU name and family.\n\n * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes\n\n * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn't match the allowed values.\n\n * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.\n\n * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.\n\n * 400 InvalidTier - The user specified an invalid tier.\n\n * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.\n\n * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.\n\n * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.\n\n * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.\n\n * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.\n\n * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.\n\n * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.\n\n * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn't match the allowed values.\n\n * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.\n\n * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn't match the allowed values.\n\n * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.\n\n * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.\n\n * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.\n\n * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn't match the allowed values.\n\n * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.\n\n * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.\n\n * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.\n\n * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.\n\n * 405 NotSupported - This functionality is not supported.\n\n * 405 NotSupported - This functionality is not supported.\n\n * 409 ServerDisabled - Server is disabled.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 ServerDisabled - Server is disabled.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.\n\n * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable."
     }
    },
    "x-ms-long-running-operation": true
   },
   "delete": {
    "tags": [
     "ElasticPools"
    ],
    "description": "Deletes an elastic pool.",
    "operationId": "ElasticPools_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:243"
     },
     {
      "$ref": "#/components/parameters/parameters:244"
     },
     {
      "name": "elasticPoolName",
      "in": "path",
      "description": "The name of the elastic pool.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:241"
     },
     {
      "$ref": "#/components/parameters/parameters:242"
     }
    ],
    "responses": {
     "200": {
      "description": "Deleted the elastic pool"
     },
     "202": {
      "description": "Accepted"
     },
     "204": {
      "description": "Elastic pool did not exist"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes\n\n * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn't match the allowed values.\n\n * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.\n\n * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.\n\n * 400 InvalidTier - The user specified an invalid tier.\n\n * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.\n\n * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.\n\n * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.\n\n * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.\n\n * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.\n\n * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.\n\n * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.\n\n * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn't match the allowed values.\n\n * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.\n\n * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn't match the allowed values.\n\n * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.\n\n * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.\n\n * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.\n\n * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn't match the allowed values.\n\n * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.\n\n * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.\n\n * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.\n\n * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 405 NotSupported - This functionality is not supported.\n\n * 409 ServerDisabled - Server is disabled.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable."
     }
    },
    "x-ms-long-running-operation": true
   },
   "patch": {
    "tags": [
     "ElasticPools"
    ],
    "description": "Updates an elastic pool.",
    "operationId": "ElasticPools_Update",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:243"
     },
     {
      "$ref": "#/components/parameters/parameters:244"
     },
     {
      "name": "elasticPoolName",
      "in": "path",
      "description": "The name of the elastic pool.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:241"
     },
     {
      "$ref": "#/components/parameters/parameters:242"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:235"
       }
      }
     },
     "required": true,
     "description": "The elastic pool update parameters.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Updated the elastic pool",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:234"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes\n\n * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn't match the allowed values.\n\n * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.\n\n * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.\n\n * 400 InvalidTier - The user specified an invalid tier.\n\n * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.\n\n * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.\n\n * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.\n\n * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.\n\n * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.\n\n * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.\n\n * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.\n\n * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn't match the allowed values.\n\n * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.\n\n * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn't match the allowed values.\n\n * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.\n\n * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.\n\n * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.\n\n * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn't match the allowed values.\n\n * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.\n\n * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.\n\n * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.\n\n * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 400 InvalidSkuName - Invalid SKU name.\n\n * 400 MismatchedSkuNameAndCapacity - Mismatch between SKU name and capacity.\n\n * 400 MismatchedSkuNameAndTier - Mismatch between SKU name and tier.\n\n * 400 MismatchedSkuNameAndFamily - Mismatch between SKU name and family.\n\n * 400 ElasticPoolStorageBelowLimitMB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ProvisioningDisabled - Displays error message from resources operation authorizer as is, without changes\n\n * 400 ElasticPoolStorageNotAllowedMB - Attempting to set the elastic pool storage limit in mb which doesn't match the allowed values.\n\n * 400 ElasticPoolStorageAboveLimitMB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolUpdateHkNotAllowed - The elastic pool cannot lower its service tier from Premium to Standard or Basic since one or more of its databases use memory-optimized objects.\n\n * 400 ElasticPoolOverFileSpace - Insufficient file space in the elastic pool.\n\n * 400 InvalidTier - The user specified an invalid tier.\n\n * 400 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.\n\n * 400 ElasticPoolAlreadyExists - The server already contains an elastic pool with the specified name.\n\n * 400 InvalidInputValueForEdition - Specified edition is not supported for elastic pool provisioning.\n\n * 400 ElasticPoolDtuBelowLimit - The requested DTU value is too low for the requested elastic pool service tier.\n\n * 400 ElasticPoolDtuAboveLimit - The requested DTU value is too high for the requested elastic pool service tier.\n\n * 400 ElasticPoolDbDtuMaxBelowLimit - The requested per database DTU max is too low for the requested elastic pool service tier.\n\n * 400 ElasticPoolDbDtuMaxAboveLimit - The requested per database DTU max is too high for the requested elastic pool service tier.\n\n * 400 InvalidInputValueForDatabaseDtuMax - Attempting to set the DTU max per database for the Resource Pool which doesn't match the allowed values.\n\n * 400 ElasticPoolDbDtuMinAboveLimit - The requested DTU min per database is too high for the requested service tier.\n\n * 400 InvalidInputValueForDatabaseDtuMin - Attempting to set the DTU min per database for the Resource Pool which doesn't match the allowed values.\n\n * 400 ElasticPoolStorageAboveLimitGB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolOverStorageUsage - Attempting to write data to a database when the storage limit of the elastic pool has been reached.\n\n * 400 ElasticPoolsNotEnabled - Elastic pools have not been enabled in this region.\n\n * 400 ElasticPoolNotEmpty - Request to delete an elastic pool that is not empty.\n\n * 400 ElasticPoolStorageBelowLimitGB - Attempting to set the elastic pool storage limit below the supported limit.\n\n * 400 ElasticPoolStorageNotAllowedGB - Attempting to set the elastic pool storage limit in gb which doesn't match the allowed values.\n\n * 400 ElasticPoolDatabaseLimit - The elastic pool has reached its limit for number of databases.\n\n * 400 ElasticPoolStorageDecreasePrecondition - There was an attempt to decrease the storage limit of the elastic pool below its storage usage.\n\n * 400 ElasticPoolBusy - A management operation was attempted on an elastic pool which is busy.\n\n * 400 InvalidInputValueDatabaseDtuMinLargerThanMax - Attempting to set the DTU min per database higher than the DTU max per database.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ElasticPoolNotFound - The specified elastic pool does not exist for the specified server.\n\n * 405 NotSupported - This functionality is not supported.\n\n * 405 NotSupported - This functionality is not supported.\n\n * 409 ServerDisabled - Server is disabled.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 ServerDisabled - Server is disabled.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.\n\n * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:138": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1vulnerabilityAssessments~1{vulnerabilityAssessmentName}~1scans~1{scanId}"
    ]
   },
   "get": {
    "tags": [
     "DatabaseVulnerabilityAssessmentScans"
    ],
    "description": "Gets a vulnerability assessment scan record of a database.",
    "operationId": "DatabaseVulnerabilityAssessmentScans_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:253"
     },
     {
      "$ref": "#/components/parameters/parameters:254"
     },
     {
      "$ref": "#/components/parameters/parameters:256"
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "name": "scanId",
      "in": "path",
      "description": "The vulnerability assessment scan Id of the scan to retrieve.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:251"
     },
     {
      "$ref": "#/components/parameters/parameters:252"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the database vulnerability assessment scan record.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:240"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature is not valid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 409 DatabaseVulnerabilityAssessmentScanIsAlreadyInProgress - Vulnerability Assessment scan is already in progress.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later.\n\n * 500 DatabaseVulnerabilityAssessmentOperationFailed - An error has occurred while trying to execute Vulnerability Assessment operation, please try again later"
     }
    }
   }
  },
  "path:139": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/initiateScan",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1vulnerabilityAssessments~1{vulnerabilityAssessmentName}~1scans~1{scanId}~1initiateScan"
    ]
   },
   "post": {
    "tags": [
     "DatabaseVulnerabilityAssessmentScans"
    ],
    "description": "Executes a Vulnerability Assessment database scan.",
    "operationId": "DatabaseVulnerabilityAssessmentScans_InitiateScan",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:253"
     },
     {
      "$ref": "#/components/parameters/parameters:254"
     },
     {
      "$ref": "#/components/parameters/parameters:256"
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "name": "scanId",
      "in": "path",
      "description": "The vulnerability assessment scan Id of the scan to retrieve.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:251"
     },
     {
      "$ref": "#/components/parameters/parameters:252"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully executed a Vulnerability Assessment database scan."
     },
     "202": {
      "description": "Successfully started a Vulnerability Assessment database scan."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidDatabaseVulnerabilityAssessmentOperationRequest - The vulnerability assessment operation request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 400 InvalidVulnerabilityAssessmentScanIdLength - The vulnerability assessment scan ID length must be below {0} characters.\n\n * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature is not valid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 409 DatabaseVulnerabilityAssessmentScanIsAlreadyInProgress - Vulnerability Assessment scan is already in progress.\n\n * 500 DatabaseVulnerabilityAssessmentOperationFailed - An error has occurred while trying to execute Vulnerability Assessment operation, please try again later\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:140": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1vulnerabilityAssessments~1{vulnerabilityAssessmentName}~1scans"
    ]
   },
   "get": {
    "tags": [
     "DatabaseVulnerabilityAssessmentScans"
    ],
    "description": "Lists the vulnerability assessment scans of a database.",
    "operationId": "DatabaseVulnerabilityAssessmentScans_ListByDatabase",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:253"
     },
     {
      "$ref": "#/components/parameters/parameters:254"
     },
     {
      "$ref": "#/components/parameters/parameters:256"
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:251"
     },
     {
      "$ref": "#/components/parameters/parameters:252"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the database vulnerability assessment scan records.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:241"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature is not valid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 409 DatabaseVulnerabilityAssessmentScanIsAlreadyInProgress - Vulnerability Assessment scan is already in progress.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later.\n\n * 500 DatabaseVulnerabilityAssessmentOperationFailed - An error has occurred while trying to execute Vulnerability Assessment operation, please try again later"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:141": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/export",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1vulnerabilityAssessments~1{vulnerabilityAssessmentName}~1scans~1{scanId}~1export"
    ]
   },
   "post": {
    "tags": [
     "DatabaseVulnerabilityAssessmentScansExport"
    ],
    "description": "Convert an existing scan result to a human readable format. If already exists nothing happens",
    "operationId": "DatabaseVulnerabilityAssessmentScans_Export",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:253"
     },
     {
      "$ref": "#/components/parameters/parameters:254"
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the scanned database.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "name": "scanId",
      "in": "path",
      "description": "The vulnerability assessment scan Id.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:251"
     },
     {
      "$ref": "#/components/parameters/parameters:252"
     }
    ],
    "responses": {
     "200": {
      "description": "Scan result was converted successfully.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:243"
        }
       }
      }
     },
     "201": {
      "description": "Scan result was converted successfully.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:243"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature is not valid.\n\n * 400 InvalidDatabaseVulnerabilityAssessmentOperationRequest - The vulnerability assessment operation request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 409 DatabaseVulnerabilityAssessmentScanIsAlreadyInProgress - Vulnerability Assessment scan is already in progress.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later.\n\n * 500 DatabaseVulnerabilityAssessmentOperationFailed - An error has occurred while trying to execute Vulnerability Assessment operation, please try again later"
     }
    }
   }
  },
  "path:142": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///888?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssesmentRuleBaselines.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssesmentRuleBaselines.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}~1databases~1{databaseName}~1vulnerabilityAssessments~1{vulnerabilityAssessmentName}~1rules~1{ruleId}~1baselines~1{baselineName}"
    ]
   },
   "get": {
    "tags": [
     "ManagedDatabaseVulnerabilityAssesmentRuleBaselines"
    ],
    "description": "Gets a database's vulnerability assessment rule baseline.",
    "operationId": "ManagedDatabaseVulnerabilityAssessmentRuleBaselines_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:263"
     },
     {
      "name": "managedInstanceName",
      "in": "path",
      "description": "The name of the managed instance.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database for which the vulnerability assessment rule baseline is defined.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "name": "ruleId",
      "in": "path",
      "description": "The vulnerability assessment rule ID.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "baselineName",
      "in": "path",
      "description": "The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentPolicyBaselineName",
       "modelAsString": false,
       "oldModelAsString": false
      },
      "schema": {
       "enum": [
        "master",
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:261"
     },
     {
      "$ref": "#/components/parameters/parameters:262"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully got the vulnerability assessment rule baseline.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:246"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidDatabaseVulnerabilityAssessmentOperationRequest - The vulnerability assessment operation request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 VulnerabilityAssessmentInvalidStorageAccount - The storage account '{0}' that was defined in the policy is invalid.\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 404 VulnerabilityAssessmentRuleDoesNotExists - Rule '{0}' does not exist.\n\n * 404 VulnerabilityAssessmentBaselineDoesNotExists - Baseline does not exist for rule '{0}'\n\n * 500 VulnerabilityAssessmentStorageAuthenticationFailed - Could not authenticate to storage account '{0}' .\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   },
   "put": {
    "tags": [
     "ManagedDatabaseVulnerabilityAssesmentRuleBaselines"
    ],
    "description": "Creates or updates a database's vulnerability assessment rule baseline.",
    "operationId": "ManagedDatabaseVulnerabilityAssessmentRuleBaselines_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:263"
     },
     {
      "name": "managedInstanceName",
      "in": "path",
      "description": "The name of the managed instance.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database for which the vulnerability assessment rule baseline is defined.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "name": "ruleId",
      "in": "path",
      "description": "The vulnerability assessment rule ID.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "baselineName",
      "in": "path",
      "description": "The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentPolicyBaselineName",
       "modelAsString": false,
       "oldModelAsString": false
      },
      "schema": {
       "enum": [
        "master",
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:261"
     },
     {
      "$ref": "#/components/parameters/parameters:262"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:246"
       }
      }
     },
     "required": true,
     "description": "The requested rule baseline resource.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 6,
    "responses": {
     "200": {
      "description": "Successfully set the vulnerability assessment rule baseline.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:246"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidDatabaseVulnerabilityAssessmentOperationRequest - The vulnerability assessment operation request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 VulnerabilityAssessmentInvalidStorageAccount - The storage account '{0}' that was defined in the policy is invalid.\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 404 VulnerabilityAssessmentRuleDoesNotExists - Rule '{0}' does not exist.\n\n * 404 VulnerabilityAssessmentBaselineDoesNotExists - Baseline does not exist for rule '{0}'\n\n * 500 VulnerabilityAssessmentStorageAuthenticationFailed - Could not authenticate to storage account '{0}' .\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   },
   "delete": {
    "tags": [
     "ManagedDatabaseVulnerabilityAssesmentRuleBaselines"
    ],
    "description": "Removes the database's vulnerability assessment rule baseline.",
    "operationId": "ManagedDatabaseVulnerabilityAssessmentRuleBaselines_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:263"
     },
     {
      "name": "managedInstanceName",
      "in": "path",
      "description": "The name of the managed instance.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database for which the vulnerability assessment rule baseline is defined.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "name": "ruleId",
      "in": "path",
      "description": "The vulnerability assessment rule ID.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "baselineName",
      "in": "path",
      "description": "The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentPolicyBaselineName",
       "modelAsString": false,
       "oldModelAsString": false
      },
      "schema": {
       "enum": [
        "master",
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:261"
     },
     {
      "$ref": "#/components/parameters/parameters:262"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully removed the database vulnerability assessment rule baseline."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidDatabaseVulnerabilityAssessmentOperationRequest - The vulnerability assessment operation request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 VulnerabilityAssessmentInvalidStorageAccount - The storage account '{0}' that was defined in the policy is invalid.\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 404 VulnerabilityAssessmentRuleDoesNotExists - Rule '{0}' does not exist.\n\n * 404 VulnerabilityAssessmentBaselineDoesNotExists - Baseline does not exist for rule '{0}'\n\n * 500 VulnerabilityAssessmentStorageAuthenticationFailed - Could not authenticate to storage account '{0}' .\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   }
  },
  "path:143": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}~1databases~1{databaseName}~1vulnerabilityAssessments~1{vulnerabilityAssessmentName}~1scans"
    ]
   },
   "get": {
    "tags": [
     "ManagedDatabaseVulnerabilityAssessmentScans"
    ],
    "description": "Lists the vulnerability assessment scans of a database.",
    "operationId": "ManagedDatabaseVulnerabilityAssessmentScans_ListByDatabase",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:273"
     },
     {
      "name": "managedInstanceName",
      "in": "path",
      "description": "The name of the managed instance.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:276"
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:271"
     },
     {
      "$ref": "#/components/parameters/parameters:272"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the database vulnerability assessment scan records.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:247"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature or account storage key is not valid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 409 DatabaseVulnerabilityAssessmentScanIsAlreadyInProgress - Vulnerability Assessment scan is already in progress.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:144": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}~1databases~1{databaseName}~1vulnerabilityAssessments~1{vulnerabilityAssessmentName}~1scans~1{scanId}"
    ]
   },
   "get": {
    "tags": [
     "ManagedDatabaseVulnerabilityAssessmentScans"
    ],
    "description": "Gets a vulnerability assessment scan record of a database.",
    "operationId": "ManagedDatabaseVulnerabilityAssessmentScans_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:273"
     },
     {
      "name": "managedInstanceName",
      "in": "path",
      "description": "The name of the managed instance.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:276"
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "name": "scanId",
      "in": "path",
      "description": "The vulnerability assessment scan Id of the scan to retrieve.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:271"
     },
     {
      "$ref": "#/components/parameters/parameters:272"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the database vulnerability assessment scan record.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:250"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature or account storage key is not valid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 409 DatabaseVulnerabilityAssessmentScanIsAlreadyInProgress - Vulnerability Assessment scan is already in progress.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   }
  },
  "path:145": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/initiateScan",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}~1databases~1{databaseName}~1vulnerabilityAssessments~1{vulnerabilityAssessmentName}~1scans~1{scanId}~1initiateScan"
    ]
   },
   "post": {
    "tags": [
     "ManagedDatabaseVulnerabilityAssessmentScansExecute"
    ],
    "description": "Executes a Vulnerability Assessment database scan.",
    "operationId": "ManagedDatabaseVulnerabilityAssessmentScans_InitiateScan",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:273"
     },
     {
      "name": "managedInstanceName",
      "in": "path",
      "description": "The name of the managed instance.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:276"
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "name": "scanId",
      "in": "path",
      "description": "The vulnerability assessment scan Id of the scan to retrieve.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:271"
     },
     {
      "$ref": "#/components/parameters/parameters:272"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully executed a Vulnerability Assessment database scan."
     },
     "202": {
      "description": "Successfully started a Vulnerability Assessment database scan."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidDatabaseVulnerabilityAssessmentOperationRequest - The vulnerability assessment operation request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 400 InvalidVulnerabilityAssessmentScanIdLength - The vulnerability assessment scan ID length must be below {0} characters.\n\n * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature or account storage key is not valid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 409 DatabaseVulnerabilityAssessmentScanIsAlreadyInProgress - Vulnerability Assessment scan is already in progress.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:146": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/export",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}~1databases~1{databaseName}~1vulnerabilityAssessments~1{vulnerabilityAssessmentName}~1scans~1{scanId}~1export"
    ]
   },
   "post": {
    "tags": [
     "ManagedDatabaseVulnerabilityAssessmentScansExport"
    ],
    "description": "Convert an existing scan result to a human readable format. If already exists nothing happens",
    "operationId": "ManagedDatabaseVulnerabilityAssessmentScans_Export",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:273"
     },
     {
      "name": "managedInstanceName",
      "in": "path",
      "description": "The name of the managed instance.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the scanned database.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "name": "scanId",
      "in": "path",
      "description": "The vulnerability assessment scan Id.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:271"
     },
     {
      "$ref": "#/components/parameters/parameters:272"
     }
    ],
    "responses": {
     "200": {
      "description": "Scan result was converted successfully.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:252"
        }
       }
      }
     },
     "201": {
      "description": "Scan result was converted successfully.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:252"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature or account storage key is not valid.\n\n * 400 InvalidDatabaseVulnerabilityAssessmentOperationRequest - The vulnerability assessment operation request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 409 DatabaseVulnerabilityAssessmentScanIsAlreadyInProgress - Vulnerability Assessment scan is already in progress.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   }
  },
  "path:147": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///890?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessments.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessments.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}~1databases~1{databaseName}~1vulnerabilityAssessments~1{vulnerabilityAssessmentName}"
    ]
   },
   "get": {
    "tags": [
     "ManagedDatabaseVulnerabilityAssessments"
    ],
    "description": "Gets the database's vulnerability assessment.",
    "operationId": "ManagedDatabaseVulnerabilityAssessments_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:283"
     },
     {
      "name": "managedInstanceName",
      "in": "path",
      "description": "The name of the managed instance.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database for which the vulnerability assessment is defined.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:281"
     },
     {
      "$ref": "#/components/parameters/parameters:282"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the database vulnerability assessment.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:255"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature or account storage key is not valid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   },
   "put": {
    "tags": [
     "ManagedDatabaseVulnerabilityAssessments"
    ],
    "description": "Creates or updates the database's vulnerability assessment.",
    "operationId": "ManagedDatabaseVulnerabilityAssessments_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:283"
     },
     {
      "name": "managedInstanceName",
      "in": "path",
      "description": "The name of the managed instance.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database for which the vulnerability assessment is defined.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:281"
     },
     {
      "$ref": "#/components/parameters/parameters:282"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:255"
       }
      }
     },
     "required": true,
     "description": "The requested resource.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 4,
    "responses": {
     "200": {
      "description": "Successfully set the vulnerability assessment.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:255"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the vulnerability assessment.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:255"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature or account storage key is not valid.\n\n * 400 InvalidDatabaseVulnerabilityAssessmentOperationRequest - The vulnerability assessment operation request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   },
   "delete": {
    "tags": [
     "ManagedDatabaseVulnerabilityAssessments"
    ],
    "description": "Removes the database's vulnerability assessment.",
    "operationId": "ManagedDatabaseVulnerabilityAssessments_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:283"
     },
     {
      "name": "managedInstanceName",
      "in": "path",
      "description": "The name of the managed instance.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "databaseName",
      "in": "path",
      "description": "The name of the database for which the vulnerability assessment is defined.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "vulnerabilityAssessmentName",
      "in": "path",
      "description": "The name of the vulnerability assessment.",
      "required": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:281"
     },
     {
      "$ref": "#/components/parameters/parameters:282"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully removed the database vulnerability assessment."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.\n\n * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature or account storage key is not valid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 500 DatabaseIsUnavailable - Loading failed. Please try again later."
     }
    }
   }
  },
  "path:148": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/instanceFailoverGroups/{failoverGroupName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1locations~1{locationName}~1instanceFailoverGroups~1{failoverGroupName}"
    ]
   },
   "get": {
    "tags": [
     "InstanceFailoverGroups"
    ],
    "description": "Gets a failover group.",
    "operationId": "InstanceFailoverGroups_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:293"
     },
     {
      "name": "locationName",
      "in": "path",
      "description": "The name of the region where the resource is located.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "failoverGroupName",
      "in": "path",
      "description": "The name of the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:291"
     },
     {
      "$ref": "#/components/parameters/parameters:292"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the specified failover group.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:261"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidPartner - The given partners field in create or update instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestDuplicatePartner - One or more of the provided partner servers are already part of the instance failover group. Please make sure the primary server and all of the given partner servers are unique.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidManagedInstanceRegion - The provided partner managed instance region in the instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestUnsupportedPartnerCount - Only one partner region is supported.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestUnsupportedPairCount - Only one managed instance pair is supported.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpoint - The readWriteEndpoint field is required for create or update requests.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalid - The create or update instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupUpdateOrDeleteRequestOnSecondary - Modifications to the instance failover group are not allowed on a secondary server. Execute the request on the primary server.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestNegativeGracePeriodValues - Grace period value for the read-write endpoint must be non-negative.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFields - The property failoverWithDataLossGracePeriodMinutes must be provided when failover policy Automatic is selected for the read-write endpoint.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteFailoverPolicy - The failoverPolicy field for the read-write endpoint is required for create or update requests.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFieldsForManualPolicy - Grace period value should not be provided when failover policy Manual is selected for the read-write endpoint.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestReadOnlyPropertyModified - The create or update instance failover group request body should not modify the read-only property '{0}'.\n\n * 400 InstanceFailoverGroupFailoverRequestOnPrimary - The failover request should be initiated on the secondary server of instance failover group.\n\n * 400 InstanceFailoverGroupPartnerManagedInstanceFromDifferentSubscription - Primary server and the partner server of failover group are from different subscriptions. Cross subscription for servers of failover group is not allowed.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 PlannedFailoverTimedOutForDatabase - User invoked planned failover, it timed out, and a specific database appears to be to blame.\n\n * 400 PlannedFailoverTimedOut - User invoked planned failover, and it timed out while trying to contact the partner management service.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 InvalidFailoverGroupRegion - Servers specified in an Instance Failover Group need to reside in different regions to provide isolation.\n\n * 400 InstanceFailoverGroupDoesNotExist - Failover group does not exist on a server.\n\n * 400 InstanceFailoverGroupNotSecondary - Failover cannot be initiated from the primary server in a instance failover group.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 GeoReplicationDatabaseNotSecondary - The operation expects the database to be a replication target.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 GeoReplicationCannotBecomePrimaryDuringUndo - User attempted to failover or force-terminate a geo-link while the secondary is in a state where it may not be physically consistent and so cannot enter the primary role.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 InstanceFailoverGroupAlreadyExists - Failover group already exists on a given server.\n\n * 409 InstanceFailoverGroupBusy - Instance failover group is busy with another operation.\n\n * 409 InstanceFailoverGroupDnsRecordInUse - A duplicate DNS record exists for the requested endpoint.\n\n * 409 InvalidFailoverGroupName - Invalid Instance Failover Group name was supplied.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidDatabaseStateForOperation - The operation is not allowed on the database in its current replication state.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    }
   },
   "put": {
    "tags": [
     "InstanceFailoverGroups"
    ],
    "description": "Creates or updates a failover group.",
    "operationId": "InstanceFailoverGroups_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:293"
     },
     {
      "name": "locationName",
      "in": "path",
      "description": "The name of the region where the resource is located.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "failoverGroupName",
      "in": "path",
      "description": "The name of the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:291"
     },
     {
      "$ref": "#/components/parameters/parameters:292"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:261"
       }
      }
     },
     "required": true,
     "description": "The failover group parameters.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the failover group.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:261"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the failover group.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:261"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidPartner - The given partners field in create or update instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestDuplicatePartner - One or more of the provided partner servers are already part of the instance failover group. Please make sure the primary server and all of the given partner servers are unique.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidManagedInstanceRegion - The provided partner managed instance region in the instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestUnsupportedPartnerCount - Only one partner region is supported.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestUnsupportedPairCount - Only one managed instance pair is supported.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpoint - The readWriteEndpoint field is required for create or update requests.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalid - The create or update instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupUpdateOrDeleteRequestOnSecondary - Modifications to the instance failover group are not allowed on a secondary server. Execute the request on the primary server.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestNegativeGracePeriodValues - Grace period value for the read-write endpoint must be non-negative.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFields - The property failoverWithDataLossGracePeriodMinutes must be provided when failover policy Automatic is selected for the read-write endpoint.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteFailoverPolicy - The failoverPolicy field for the read-write endpoint is required for create or update requests.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFieldsForManualPolicy - Grace period value should not be provided when failover policy Manual is selected for the read-write endpoint.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestReadOnlyPropertyModified - The create or update instance failover group request body should not modify the read-only property '{0}'.\n\n * 400 InstanceFailoverGroupFailoverRequestOnPrimary - The failover request should be initiated on the secondary server of instance failover group.\n\n * 400 InstanceFailoverGroupPartnerManagedInstanceFromDifferentSubscription - Primary server and the partner server of failover group are from different subscriptions. Cross subscription for servers of failover group is not allowed.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 PlannedFailoverTimedOutForDatabase - User invoked planned failover, it timed out, and a specific database appears to be to blame.\n\n * 400 PlannedFailoverTimedOut - User invoked planned failover, and it timed out while trying to contact the partner management service.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 InvalidFailoverGroupRegion - Servers specified in an Instance Failover Group need to reside in different regions to provide isolation.\n\n * 400 InstanceFailoverGroupDoesNotExist - Failover group does not exist on a server.\n\n * 400 InstanceFailoverGroupNotSecondary - Failover cannot be initiated from the primary server in a instance failover group.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 GeoReplicationDatabaseNotSecondary - The operation expects the database to be a replication target.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 GeoReplicationCannotBecomePrimaryDuringUndo - User attempted to failover or force-terminate a geo-link while the secondary is in a state where it may not be physically consistent and so cannot enter the primary role.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 InstanceFailoverGroupAlreadyExists - Failover group already exists on a given server.\n\n * 409 InstanceFailoverGroupBusy - Instance failover group is busy with another operation.\n\n * 409 InstanceFailoverGroupDnsRecordInUse - A duplicate DNS record exists for the requested endpoint.\n\n * 409 InvalidFailoverGroupName - Invalid Instance Failover Group name was supplied.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidDatabaseStateForOperation - The operation is not allowed on the database in its current replication state.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   },
   "delete": {
    "tags": [
     "InstanceFailoverGroups"
    ],
    "description": "Deletes a failover group.",
    "operationId": "InstanceFailoverGroups_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:293"
     },
     {
      "name": "locationName",
      "in": "path",
      "description": "The name of the region where the resource is located.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "failoverGroupName",
      "in": "path",
      "description": "The name of the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:291"
     },
     {
      "$ref": "#/components/parameters/parameters:292"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the failover group."
     },
     "202": {
      "description": "Accepted"
     },
     "204": {
      "description": "The specified failover group does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidPartner - The given partners field in create or update instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestDuplicatePartner - One or more of the provided partner servers are already part of the instance failover group. Please make sure the primary server and all of the given partner servers are unique.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidManagedInstanceRegion - The provided partner managed instance region in the instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestUnsupportedPartnerCount - Only one partner region is supported.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestUnsupportedPairCount - Only one managed instance pair is supported.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpoint - The readWriteEndpoint field is required for create or update requests.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalid - The create or update instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupUpdateOrDeleteRequestOnSecondary - Modifications to the instance failover group are not allowed on a secondary server. Execute the request on the primary server.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestNegativeGracePeriodValues - Grace period value for the read-write endpoint must be non-negative.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFields - The property failoverWithDataLossGracePeriodMinutes must be provided when failover policy Automatic is selected for the read-write endpoint.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteFailoverPolicy - The failoverPolicy field for the read-write endpoint is required for create or update requests.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFieldsForManualPolicy - Grace period value should not be provided when failover policy Manual is selected for the read-write endpoint.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestReadOnlyPropertyModified - The create or update instance failover group request body should not modify the read-only property '{0}'.\n\n * 400 InstanceFailoverGroupFailoverRequestOnPrimary - The failover request should be initiated on the secondary server of instance failover group.\n\n * 400 InstanceFailoverGroupPartnerManagedInstanceFromDifferentSubscription - Primary server and the partner server of failover group are from different subscriptions. Cross subscription for servers of failover group is not allowed.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 PlannedFailoverTimedOutForDatabase - User invoked planned failover, it timed out, and a specific database appears to be to blame.\n\n * 400 PlannedFailoverTimedOut - User invoked planned failover, and it timed out while trying to contact the partner management service.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 InvalidFailoverGroupRegion - Servers specified in an Instance Failover Group need to reside in different regions to provide isolation.\n\n * 400 InstanceFailoverGroupDoesNotExist - Failover group does not exist on a server.\n\n * 400 InstanceFailoverGroupNotSecondary - Failover cannot be initiated from the primary server in a instance failover group.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 GeoReplicationDatabaseNotSecondary - The operation expects the database to be a replication target.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 GeoReplicationCannotBecomePrimaryDuringUndo - User attempted to failover or force-terminate a geo-link while the secondary is in a state where it may not be physically consistent and so cannot enter the primary role.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 InstanceFailoverGroupAlreadyExists - Failover group already exists on a given server.\n\n * 409 InstanceFailoverGroupBusy - Instance failover group is busy with another operation.\n\n * 409 InstanceFailoverGroupDnsRecordInUse - A duplicate DNS record exists for the requested endpoint.\n\n * 409 InvalidFailoverGroupName - Invalid Instance Failover Group name was supplied.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidDatabaseStateForOperation - The operation is not allowed on the database in its current replication state.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:149": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/instanceFailoverGroups",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1locations~1{locationName}~1instanceFailoverGroups"
    ]
   },
   "get": {
    "tags": [
     "InstanceFailoverGroups"
    ],
    "description": "Lists the failover groups in a location.",
    "operationId": "InstanceFailoverGroups_ListByLocation",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:293"
     },
     {
      "name": "locationName",
      "in": "path",
      "description": "The name of the region where the resource is located.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:291"
     },
     {
      "$ref": "#/components/parameters/parameters:292"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the failover groups.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:262"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidPartner - The given partners field in create or update instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestDuplicatePartner - One or more of the provided partner servers are already part of the instance failover group. Please make sure the primary server and all of the given partner servers are unique.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidManagedInstanceRegion - The provided partner managed instance region in the instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestUnsupportedPartnerCount - Only one partner region is supported.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestUnsupportedPairCount - Only one managed instance pair is supported.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpoint - The readWriteEndpoint field is required for create or update requests.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalid - The create or update instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupUpdateOrDeleteRequestOnSecondary - Modifications to the instance failover group are not allowed on a secondary server. Execute the request on the primary server.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestNegativeGracePeriodValues - Grace period value for the read-write endpoint must be non-negative.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFields - The property failoverWithDataLossGracePeriodMinutes must be provided when failover policy Automatic is selected for the read-write endpoint.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteFailoverPolicy - The failoverPolicy field for the read-write endpoint is required for create or update requests.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFieldsForManualPolicy - Grace period value should not be provided when failover policy Manual is selected for the read-write endpoint.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestReadOnlyPropertyModified - The create or update instance failover group request body should not modify the read-only property '{0}'.\n\n * 400 InstanceFailoverGroupFailoverRequestOnPrimary - The failover request should be initiated on the secondary server of instance failover group.\n\n * 400 InstanceFailoverGroupPartnerManagedInstanceFromDifferentSubscription - Primary server and the partner server of failover group are from different subscriptions. Cross subscription for servers of failover group is not allowed.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 PlannedFailoverTimedOutForDatabase - User invoked planned failover, it timed out, and a specific database appears to be to blame.\n\n * 400 PlannedFailoverTimedOut - User invoked planned failover, and it timed out while trying to contact the partner management service.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 InvalidFailoverGroupRegion - Servers specified in an Instance Failover Group need to reside in different regions to provide isolation.\n\n * 400 InstanceFailoverGroupDoesNotExist - Failover group does not exist on a server.\n\n * 400 InstanceFailoverGroupNotSecondary - Failover cannot be initiated from the primary server in a instance failover group.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 GeoReplicationDatabaseNotSecondary - The operation expects the database to be a replication target.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 GeoReplicationCannotBecomePrimaryDuringUndo - User attempted to failover or force-terminate a geo-link while the secondary is in a state where it may not be physically consistent and so cannot enter the primary role.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 InstanceFailoverGroupAlreadyExists - Failover group already exists on a given server.\n\n * 409 InstanceFailoverGroupBusy - Instance failover group is busy with another operation.\n\n * 409 InstanceFailoverGroupDnsRecordInUse - A duplicate DNS record exists for the requested endpoint.\n\n * 409 InvalidFailoverGroupName - Invalid Instance Failover Group name was supplied.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidDatabaseStateForOperation - The operation is not allowed on the database in its current replication state.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:150": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/instanceFailoverGroups/{failoverGroupName}/failover",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1locations~1{locationName}~1instanceFailoverGroups~1{failoverGroupName}~1failover"
    ]
   },
   "post": {
    "tags": [
     "InstanceFailoverGroups"
    ],
    "description": "Fails over from the current primary managed instance to this managed instance.",
    "operationId": "InstanceFailoverGroups_Failover",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:293"
     },
     {
      "name": "locationName",
      "in": "path",
      "description": "The name of the region where the resource is located.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "failoverGroupName",
      "in": "path",
      "description": "The name of the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:291"
     },
     {
      "$ref": "#/components/parameters/parameters:292"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully failed over.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:261"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidPartner - The given partners field in create or update instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestDuplicatePartner - One or more of the provided partner servers are already part of the instance failover group. Please make sure the primary server and all of the given partner servers are unique.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidManagedInstanceRegion - The provided partner managed instance region in the instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestUnsupportedPartnerCount - Only one partner region is supported.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestUnsupportedPairCount - Only one managed instance pair is supported.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpoint - The readWriteEndpoint field is required for create or update requests.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalid - The create or update instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupUpdateOrDeleteRequestOnSecondary - Modifications to the instance failover group are not allowed on a secondary server. Execute the request on the primary server.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestNegativeGracePeriodValues - Grace period value for the read-write endpoint must be non-negative.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFields - The property failoverWithDataLossGracePeriodMinutes must be provided when failover policy Automatic is selected for the read-write endpoint.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteFailoverPolicy - The failoverPolicy field for the read-write endpoint is required for create or update requests.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFieldsForManualPolicy - Grace period value should not be provided when failover policy Manual is selected for the read-write endpoint.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestReadOnlyPropertyModified - The create or update instance failover group request body should not modify the read-only property '{0}'.\n\n * 400 InstanceFailoverGroupFailoverRequestOnPrimary - The failover request should be initiated on the secondary server of instance failover group.\n\n * 400 InstanceFailoverGroupPartnerManagedInstanceFromDifferentSubscription - Primary server and the partner server of failover group are from different subscriptions. Cross subscription for servers of failover group is not allowed.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 PlannedFailoverTimedOutForDatabase - User invoked planned failover, it timed out, and a specific database appears to be to blame.\n\n * 400 PlannedFailoverTimedOut - User invoked planned failover, and it timed out while trying to contact the partner management service.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 InvalidFailoverGroupRegion - Servers specified in an Instance Failover Group need to reside in different regions to provide isolation.\n\n * 400 InstanceFailoverGroupDoesNotExist - Failover group does not exist on a server.\n\n * 400 InstanceFailoverGroupNotSecondary - Failover cannot be initiated from the primary server in a instance failover group.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 GeoReplicationDatabaseNotSecondary - The operation expects the database to be a replication target.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 GeoReplicationCannotBecomePrimaryDuringUndo - User attempted to failover or force-terminate a geo-link while the secondary is in a state where it may not be physically consistent and so cannot enter the primary role.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 InstanceFailoverGroupAlreadyExists - Failover group already exists on a given server.\n\n * 409 InstanceFailoverGroupBusy - Instance failover group is busy with another operation.\n\n * 409 InstanceFailoverGroupDnsRecordInUse - A duplicate DNS record exists for the requested endpoint.\n\n * 409 InvalidFailoverGroupName - Invalid Instance Failover Group name was supplied.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidDatabaseStateForOperation - The operation is not allowed on the database in its current replication state.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:151": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/instanceFailoverGroups/{failoverGroupName}/forceFailoverAllowDataLoss",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1locations~1{locationName}~1instanceFailoverGroups~1{failoverGroupName}~1forceFailoverAllowDataLoss"
    ]
   },
   "post": {
    "tags": [
     "InstanceFailoverGroups"
    ],
    "description": "Fails over from the current primary managed instance to this managed instance. This operation might result in data loss.",
    "operationId": "InstanceFailoverGroups_ForceFailoverAllowDataLoss",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:293"
     },
     {
      "name": "locationName",
      "in": "path",
      "description": "The name of the region where the resource is located.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "name": "failoverGroupName",
      "in": "path",
      "description": "The name of the failover group.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:291"
     },
     {
      "$ref": "#/components/parameters/parameters:292"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully failed over.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:261"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidPartner - The given partners field in create or update instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestDuplicatePartner - One or more of the provided partner servers are already part of the instance failover group. Please make sure the primary server and all of the given partner servers are unique.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidManagedInstanceRegion - The provided partner managed instance region in the instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestUnsupportedPartnerCount - Only one partner region is supported.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestUnsupportedPairCount - Only one managed instance pair is supported.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpoint - The readWriteEndpoint field is required for create or update requests.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalid - The create or update instance failover group request body is empty or invalid.\n\n * 400 InstanceFailoverGroupUpdateOrDeleteRequestOnSecondary - Modifications to the instance failover group are not allowed on a secondary server. Execute the request on the primary server.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestNegativeGracePeriodValues - Grace period value for the read-write endpoint must be non-negative.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFields - The property failoverWithDataLossGracePeriodMinutes must be provided when failover policy Automatic is selected for the read-write endpoint.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteFailoverPolicy - The failoverPolicy field for the read-write endpoint is required for create or update requests.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestInvalidReadWriteEndpointFieldsForManualPolicy - Grace period value should not be provided when failover policy Manual is selected for the read-write endpoint.\n\n * 400 InstanceFailoverGroupCreateOrUpdateRequestReadOnlyPropertyModified - The create or update instance failover group request body should not modify the read-only property '{0}'.\n\n * 400 InstanceFailoverGroupFailoverRequestOnPrimary - The failover request should be initiated on the secondary server of instance failover group.\n\n * 400 InstanceFailoverGroupPartnerManagedInstanceFromDifferentSubscription - Primary server and the partner server of failover group are from different subscriptions. Cross subscription for servers of failover group is not allowed.\n\n * 400 InvalidAddSecondaryPermission - User does not have sufficient permission to add secondary on the specified server.\n\n * 400 InvalidSku - The user specified an invalid sku.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 InvalidTargetSubregion - The target server of a non-readable secondary is not in a DR paired Azure region.\n\n * 400 IncorrectReplicationLinkState - The operation expects the database to be in an expected state on the replication link.\n\n * 400 PlannedFailoverTimedOutForDatabase - User invoked planned failover, it timed out, and a specific database appears to be to blame.\n\n * 400 PlannedFailoverTimedOut - User invoked planned failover, and it timed out while trying to contact the partner management service.\n\n * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 InvalidFailoverGroupRegion - Servers specified in an Instance Failover Group need to reside in different regions to provide isolation.\n\n * 400 InstanceFailoverGroupDoesNotExist - Failover group does not exist on a server.\n\n * 400 InstanceFailoverGroupNotSecondary - Failover cannot be initiated from the primary server in a instance failover group.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.\n\n * 400 GeoReplicationDatabaseNotSecondary - The operation expects the database to be a replication target.\n\n * 400 UnableToResolveRemoteServer - The remote partner server name could not be resolved due to an invalid server name or DNS connectivity issues.\n\n * 400 RemoteDatabaseCopyPermission - User does not have sufficient permission to create a database copy on the specified server.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 405 UnsupportedReplicationOperation - An unsupported replication operation was initiated on the database.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 ConflictingServerOperation - An operation is currently in progress for the server.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 GeoReplicationCannotBecomePrimaryDuringUndo - User attempted to failover or force-terminate a geo-link while the secondary is in a state where it may not be physically consistent and so cannot enter the primary role.\n\n * 409 UpdateSloInProgress - User tried to initiate an incompatible operation while a SLO update was in progress.\n\n * 409 InstanceFailoverGroupAlreadyExists - Failover group already exists on a given server.\n\n * 409 InstanceFailoverGroupBusy - Instance failover group is busy with another operation.\n\n * 409 InstanceFailoverGroupDnsRecordInUse - A duplicate DNS record exists for the requested endpoint.\n\n * 409 InvalidFailoverGroupName - Invalid Instance Failover Group name was supplied.\n\n * 409 InvalidOperationForDatabaseNotInReplicationRelationship - A replication seeding operation was performed on a database that is already in a replication relationship.\n\n * 409 InvalidDatabaseStateForOperation - The operation is not allowed on the database in its current replication state.\n\n * 409 DuplicateGeoDrRelation - The databases are already in a replication relation. This is a duplicate request.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:152": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///892?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FshortTermRetentionPolicies.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/backupShortTermRetentionPolicies/{policyName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/shortTermRetentionPolicies.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1backupShortTermRetentionPolicies~1{policyName}"
    ]
   },
   "get": {
    "tags": [
     "BackupShortTermRetentionPolicies"
    ],
    "description": "Gets a database's short term retention policy.",
    "operationId": "BackupShortTermRetentionPolicies_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:303"
     },
     {
      "$ref": "#/components/parameters/parameters:304"
     },
     {
      "$ref": "#/components/parameters/parameters:306"
     },
     {
      "name": "policyName",
      "in": "path",
      "description": "The policy name. Should always be \"default\".",
      "required": true,
      "x-ms-enum": {
       "name": "ShortTermRetentionPolicyName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:301"
     },
     {
      "$ref": "#/components/parameters/parameters:302"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:264"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidBackupRetentionDays - The retention days of {0} is not a valid configuration. Valid backup retention must be in 7-day increments (7, 14, 21, etc.)\n\n * 400 InvalidParameterValue - An invalid value was given to a parameter.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   },
   "put": {
    "tags": [
     "BackupShortTermRetentionPolicies"
    ],
    "description": "Updates a database's short term retention policy.",
    "operationId": "BackupShortTermRetentionPolicies_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:303"
     },
     {
      "$ref": "#/components/parameters/parameters:304"
     },
     {
      "$ref": "#/components/parameters/parameters:306"
     },
     {
      "name": "policyName",
      "in": "path",
      "description": "The policy name. Should always be \"default\".",
      "required": true,
      "x-ms-enum": {
       "name": "ShortTermRetentionPolicyName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:301"
     },
     {
      "$ref": "#/components/parameters/parameters:302"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:264"
       }
      }
     },
     "required": true,
     "description": "The short term retention policy info.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 4,
    "responses": {
     "200": {
      "description": "Successfully updated the policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:264"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidBackupRetentionDays - The retention days of {0} is not a valid configuration. Valid backup retention must be in 7-day increments (7, 14, 21, etc.)\n\n * 400 InvalidParameterValue - An invalid value was given to a parameter.\n\n * 400 InvalidBackupRetentionPeriod - The retention days of {0} is not a valid configuration. Valid backup retention in days must be between {1} and {2}\n\n * 400 UpdateShortTermRetentionFeatureNotSupportedForEdition - This feature is not available for the selected database's edition {0}.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 CannotFindObject - Cannot find the object because it does not exist or you do not have permissions\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   },
   "patch": {
    "tags": [
     "BackupShortTermRetentionPolicies"
    ],
    "description": "Updates a database's short term retention policy.",
    "operationId": "BackupShortTermRetentionPolicies_Update",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:303"
     },
     {
      "$ref": "#/components/parameters/parameters:304"
     },
     {
      "$ref": "#/components/parameters/parameters:306"
     },
     {
      "name": "policyName",
      "in": "path",
      "description": "The policy name. Should always be \"default\".",
      "required": true,
      "x-ms-enum": {
       "name": "ShortTermRetentionPolicyName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "default"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:301"
     },
     {
      "$ref": "#/components/parameters/parameters:302"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:264"
       }
      }
     },
     "required": true,
     "description": "The short term retention policy info.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 4,
    "responses": {
     "200": {
      "description": "Successfully updated the policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:264"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidBackupRetentionDays - The retention days of {0} is not a valid configuration. Valid backup retention must be in 7-day increments (7, 14, 21, etc.)\n\n * 400 InvalidParameterValue - An invalid value was given to a parameter.\n\n * 400 InvalidBackupRetentionPeriod - The retention days of {0} is not a valid configuration. Valid backup retention in days must be between {1} and {2}\n\n * 400 UpdateShortTermRetentionFeatureNotSupportedForEdition - This feature is not available for the selected database's edition {0}.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 CannotFindObject - Cannot find the object because it does not exist or you do not have permissions\n\n * 404 SourceDatabaseNotFound - The source database does not exist.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:153": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///892?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FshortTermRetentionPolicies.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/backupShortTermRetentionPolicies",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/shortTermRetentionPolicies.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1databases~1{databaseName}~1backupShortTermRetentionPolicies"
    ]
   },
   "get": {
    "tags": [
     "BackupShortTermRetentionPolicies"
    ],
    "description": "Gets a database's short term retention policy.",
    "operationId": "BackupShortTermRetentionPolicies_ListByDatabase",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:303"
     },
     {
      "$ref": "#/components/parameters/parameters:304"
     },
     {
      "$ref": "#/components/parameters/parameters:306"
     },
     {
      "$ref": "#/components/parameters/parameters:301"
     },
     {
      "$ref": "#/components/parameters/parameters:302"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the policy.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:265"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidBackupRetentionDays - The retention days of {0} is not a valid configuration. Valid backup retention must be in 7-day increments (7, 14, 21, etc.)\n\n * 400 InvalidParameterValue - An invalid value was given to a parameter.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:154": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///893?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FTdeCertificates.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/tdeCertificates",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/TdeCertificates.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1servers~1{serverName}~1tdeCertificates"
    ]
   },
   "post": {
    "tags": [
     "TdeCertificates"
    ],
    "description": "Creates a TDE certificate for a given server.",
    "operationId": "TdeCertificates_Create",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:313"
     },
     {
      "$ref": "#/components/parameters/parameters:314"
     },
     {
      "$ref": "#/components/parameters/parameters:311"
     },
     {
      "$ref": "#/components/parameters/parameters:312"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:267"
       }
      }
     },
     "required": true,
     "description": "The requested TDE certificate to be created or updated.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 2,
    "responses": {
     "200": {
      "description": "Successfully created the TDE certificate."
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 MissingPrivateBlob - The private blob is missing.\n\n * 400 InvalidPrivateBlobOrPassword - Invalid private blob or password specified.\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:155": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///894?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceTdeCertificates.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/tdeCertificates",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceTdeCertificates.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}~1tdeCertificates"
    ]
   },
   "post": {
    "tags": [
     "ManagedInstanceTdeCertificates"
    ],
    "description": "Creates a TDE certificate for a given server.",
    "operationId": "ManagedInstanceTdeCertificates_Create",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:323"
     },
     {
      "$ref": "#/components/parameters/parameters:325"
     },
     {
      "$ref": "#/components/parameters/parameters:321"
     },
     {
      "$ref": "#/components/parameters/parameters:322"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:269"
       }
      }
     },
     "required": true,
     "description": "The requested TDE certificate to be created or updated.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 2,
    "responses": {
     "200": {
      "description": "Successfully created the TDE certificate."
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 MissingPrivateBlob - The private blob is missing.\n\n * 400 InvalidPrivateBlobOrPassword - Invalid private blob or password specified.\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:156": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///895?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceKeys.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/keys",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceKeys.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}~1keys"
    ]
   },
   "get": {
    "tags": [
     "ManagedInstanceKeys"
    ],
    "description": "Gets a list of managed instance keys.",
    "operationId": "ManagedInstanceKeys_ListByInstance",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:333"
     },
     {
      "$ref": "#/components/parameters/parameters:335"
     },
     {
      "name": "$filter",
      "in": "query",
      "description": "An OData filter expression that filters elements in the collection.",
      "required": false,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:331"
     },
     {
      "$ref": "#/components/parameters/parameters:332"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of managed instance keys.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:270"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidKeyName - An invalid value was given for the server key name.\n\n * 400 InvalidKeyType - The create server key type is not supported.\n\n * 400 InvalidUpsertKeyType - Service Managed type keys are managed by Azure SQL. This key type does not support create or update by the user.\n\n * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:157": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///895?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceKeys.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/keys/{keyName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceKeys.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}~1keys~1{keyName}"
    ]
   },
   "get": {
    "tags": [
     "ManagedInstanceKeys"
    ],
    "description": "Gets a managed instance key.",
    "operationId": "ManagedInstanceKeys_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:333"
     },
     {
      "$ref": "#/components/parameters/parameters:335"
     },
     {
      "name": "keyName",
      "in": "path",
      "description": "The name of the managed instance key to be retrieved.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:331"
     },
     {
      "$ref": "#/components/parameters/parameters:332"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the specified managed instance key.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:272"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidKeyName - An invalid value was given for the server key name.\n\n * 400 InvalidKeyType - The create server key type is not supported.\n\n * 400 InvalidUpsertKeyType - Service Managed type keys are managed by Azure SQL. This key type does not support create or update by the user.\n\n * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   },
   "put": {
    "tags": [
     "ManagedInstanceKeys"
    ],
    "description": "Creates or updates a managed instance key.",
    "operationId": "ManagedInstanceKeys_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:333"
     },
     {
      "$ref": "#/components/parameters/parameters:335"
     },
     {
      "name": "keyName",
      "in": "path",
      "description": "The name of the managed instance key to be operated on (updated or created).",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:331"
     },
     {
      "$ref": "#/components/parameters/parameters:332"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:272"
       }
      }
     },
     "required": true,
     "description": "The requested managed instance key resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the managed instance key.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:272"
        }
       }
      }
     },
     "201": {
      "description": "Successfully created the managed instance key.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:272"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidKeyName - An invalid value was given for the server key name.\n\n * 400 InvalidKeyType - The create server key type is not supported.\n\n * 400 InvalidUpsertKeyType - Service Managed type keys are managed by Azure SQL. This key type does not support create or update by the user.\n\n * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.\n\n * 400 AzureKeyVaultInvalidExpirationDate - The operation could not be completed because the Azure Key Vault key expiration date is invalid.\n\n * 400 SecurityAzureKeyVaultUrlNullOrEmpty - The operation could not be completed because the Azure Key Vault Uri is null or empty.\n\n * 400 AzureKeyVaultInvalidUri - An invalid response from Azure Key Vault. Please use a valid Azure Key Vault URI.\n\n * 400 SecurityAzureKeyVaultInvalidKeyName - The operation could not be completed because of an invalid Server Key name.\n\n * 400 AzureKeyVaultMalformedVaultUri - The provided Key Vault uri is not valid.\n\n * 400 SecurityAdalPrincipalCertExpiredError - The operation could not be completed because the Azure Key Vault principal certificate has expired.\n\n * 400 SecurityInvalidAzureKeyVaultRecoveryLevel - The provided Key Vault uri is not valid.\n\n * 400 KeyMaterialNotFoundOnRemoteServer - Remote server does not have access to key material used as a TDE protector.\n\n * 400 AzureKeyVaultMismatchError - Unexpected Key Vault region found in the http response.\n\n * 400 AzureKeyVaultRsaKeyNotSupported - The provided key vault uses unsupported RSA Key Size or Key Type. The supported RSA key size is 2048 and Key Type is RSA.\n\n * 401 AzureKeyVaultKeyDisabled - The operation could not be completed on the server because the Azure Key Vault key is disabled.\n\n * 401 AzureKeyVaultNoServerIdentity - The server identity is not correctly configured.\n\n * 401 AzureKeyVaultMissingPermissions - The server is mising required permissions on the Azure Key Vault. \n\n * 401 AdalGenericError - The operation could not be completed because an Azure Active Directory error was encountered.\n\n * 401 AdalServicePrincipalNotFound - The operation could not be completed because an Azure Active Directory library Serivce Principal not found error was encountered.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 409 ServerKeyNameAlreadyExists - The server key already exists on the server.\n\n * 409 ServerKeyUriAlreadyExists - The server key URI already exists on the server.\n\n * 409 ServerKeyDoesNotExists - The server key does not exist.\n\n * 409 AzureKeyVaultKeyNameNotFound - The operation could not be completed because the Azure Key Vault Key name does not exist.\n\n * 409 AzureKeyVaultKeyInUse - The key is currently being used by the server.\n\n * 503 AzureKeyVaultConnectionFailed - The operation could not be completed on the server because attempts to connect to Azure Key Vault have failed\n\n * 503 AzureKeyVaultGenericConnectionError - The operation could not be completed because an error was encountered when attempting to retrieve Key Vault information ."
     }
    },
    "x-ms-long-running-operation": true
   },
   "delete": {
    "tags": [
     "ManagedInstanceKeys"
    ],
    "description": "Deletes the managed instance key with the given name.",
    "operationId": "ManagedInstanceKeys_Delete",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:333"
     },
     {
      "$ref": "#/components/parameters/parameters:335"
     },
     {
      "name": "keyName",
      "in": "path",
      "description": "The name of the managed instance key to be deleted.",
      "required": true,
      "schema": {
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:331"
     },
     {
      "$ref": "#/components/parameters/parameters:332"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully deleted the managed instance key."
     },
     "202": {
      "description": "Accepted"
     },
     "204": {
      "description": "The specified managed instance key does not exist."
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidKeyName - An invalid value was given for the server key name.\n\n * 400 InvalidKeyType - The create server key type is not supported.\n\n * 400 InvalidUpsertKeyType - Service Managed type keys are managed by Azure SQL. This key type does not support create or update by the user.\n\n * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.\n\n * 400 AzureKeyVaultInvalidExpirationDate - The operation could not be completed because the Azure Key Vault key expiration date is invalid.\n\n * 400 SecurityAzureKeyVaultUrlNullOrEmpty - The operation could not be completed because the Azure Key Vault Uri is null or empty.\n\n * 400 AzureKeyVaultInvalidUri - An invalid response from Azure Key Vault. Please use a valid Azure Key Vault URI.\n\n * 400 SecurityAzureKeyVaultInvalidKeyName - The operation could not be completed because of an invalid Server Key name.\n\n * 400 AzureKeyVaultMalformedVaultUri - The provided Key Vault uri is not valid.\n\n * 400 SecurityAdalPrincipalCertExpiredError - The operation could not be completed because the Azure Key Vault principal certificate has expired.\n\n * 400 SecurityInvalidAzureKeyVaultRecoveryLevel - The provided Key Vault uri is not valid.\n\n * 400 KeyMaterialNotFoundOnRemoteServer - Remote server does not have access to key material used as a TDE protector.\n\n * 400 AzureKeyVaultMismatchError - Unexpected Key Vault region found in the http response.\n\n * 400 AzureKeyVaultRsaKeyNotSupported - The provided key vault uses unsupported RSA Key Size or Key Type. The supported RSA key size is 2048 and Key Type is RSA.\n\n * 401 AzureKeyVaultKeyDisabled - The operation could not be completed on the server because the Azure Key Vault key is disabled.\n\n * 401 AzureKeyVaultNoServerIdentity - The server identity is not correctly configured.\n\n * 401 AzureKeyVaultMissingPermissions - The server is mising required permissions on the Azure Key Vault. \n\n * 401 AdalGenericError - The operation could not be completed because an Azure Active Directory error was encountered.\n\n * 401 AdalServicePrincipalNotFound - The operation could not be completed because an Azure Active Directory library Serivce Principal not found error was encountered.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 409 ServerKeyNameAlreadyExists - The server key already exists on the server.\n\n * 409 ServerKeyUriAlreadyExists - The server key URI already exists on the server.\n\n * 409 ServerKeyDoesNotExists - The server key does not exist.\n\n * 409 AzureKeyVaultKeyNameNotFound - The operation could not be completed because the Azure Key Vault Key name does not exist.\n\n * 409 AzureKeyVaultKeyInUse - The key is currently being used by the server.\n\n * 503 AzureKeyVaultConnectionFailed - The operation could not be completed on the server because attempts to connect to Azure Key Vault have failed\n\n * 503 AzureKeyVaultGenericConnectionError - The operation could not be completed because an error was encountered when attempting to retrieve Key Vault information ."
     }
    },
    "x-ms-long-running-operation": true
   }
  },
  "path:158": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///896?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceEncryptionProtectors.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/encryptionProtector",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceEncryptionProtectors.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}~1encryptionProtector"
    ]
   },
   "get": {
    "tags": [
     "ManagedInstanceEncryptionProtectors"
    ],
    "description": "Gets a list of managed instance encryption protectors",
    "operationId": "ManagedInstanceEncryptionProtectors_ListByInstance",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:343"
     },
     {
      "$ref": "#/components/parameters/parameters:345"
     },
     {
      "$ref": "#/components/parameters/parameters:341"
     },
     {
      "$ref": "#/components/parameters/parameters:342"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the list of managed instance encryption protector.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:273"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidKeyName - An invalid value was given for the server key name.\n\n * 400 InvalidKeyType - The create server key type is not supported.\n\n * 400 InvalidUpsertKeyType - Service Managed type keys are managed by Azure SQL. This key type does not support create or update by the user.\n\n * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.\n\n * 400 InvalidEncryptionProtectorName - The encryption protector key name is not supported.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found"
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  },
  "path:159": {
   "x-ms-metadata": {
    "apiVersions": [
     "2017-10-01-preview"
    ],
    "filename": [
     "mem:///896?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceEncryptionProtectors.json"
    ],
    "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/encryptionProtector/{encryptionProtectorName}",
    "originalLocations": [
     "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceEncryptionProtectors.json#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Sql~1managedInstances~1{managedInstanceName}~1encryptionProtector~1{encryptionProtectorName}"
    ]
   },
   "get": {
    "tags": [
     "ManagedInstanceEncryptionProtectors"
    ],
    "description": "Gets a managed instance encryption protector.",
    "operationId": "ManagedInstanceEncryptionProtectors_Get",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:343"
     },
     {
      "$ref": "#/components/parameters/parameters:345"
     },
     {
      "name": "encryptionProtectorName",
      "in": "path",
      "description": "The name of the encryption protector to be retrieved.",
      "required": true,
      "x-ms-enum": {
       "name": "EncryptionProtectorName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "current"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:341"
     },
     {
      "$ref": "#/components/parameters/parameters:342"
     }
    ],
    "responses": {
     "200": {
      "description": "Successfully retrieved the specified managed instance encryption protector.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:275"
        }
       }
      }
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidKeyName - An invalid value was given for the server key name.\n\n * 400 InvalidKeyType - The create server key type is not supported.\n\n * 400 InvalidUpsertKeyType - Service Managed type keys are managed by Azure SQL. This key type does not support create or update by the user.\n\n * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.\n\n * 400 InvalidEncryptionProtectorName - The encryption protector key name is not supported.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
     }
    }
   },
   "put": {
    "tags": [
     "ManagedInstanceEncryptionProtectors"
    ],
    "description": "Updates an existing encryption protector.",
    "operationId": "ManagedInstanceEncryptionProtectors_CreateOrUpdate",
    "parameters": [
     {
      "$ref": "#/components/parameters/parameters:343"
     },
     {
      "$ref": "#/components/parameters/parameters:345"
     },
     {
      "name": "encryptionProtectorName",
      "in": "path",
      "description": "The name of the encryption protector to be created or updated.",
      "required": true,
      "x-ms-enum": {
       "name": "EncryptionProtectorName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "schema": {
       "enum": [
        "current"
       ],
       "type": "string"
      }
     },
     {
      "$ref": "#/components/parameters/parameters:341"
     },
     {
      "$ref": "#/components/parameters/parameters:342"
     }
    ],
    "requestBody": {
     "content": {
      "application/json": {
       "schema": {
        "$ref": "#/components/schemas/schemas:275"
       }
      }
     },
     "required": true,
     "description": "The requested encryption protector resource state.",
     "x-ms-requestBody-name": "parameters"
    },
    "x-ms-requestBody-index": 3,
    "responses": {
     "200": {
      "description": "Successfully updated the encryption protector.",
      "content": {
       "application/json": {
        "schema": {
         "$ref": "#/components/schemas/schemas:275"
        }
       }
      }
     },
     "202": {
      "description": "Accepted"
     },
     "default": {
      "description": "*** Error Responses: ***\n\n * 400 InvalidKeyName - An invalid value was given for the server key name.\n\n * 400 InvalidKeyType - The create server key type is not supported.\n\n * 400 InvalidUpsertKeyType - Service Managed type keys are managed by Azure SQL. This key type does not support create or update by the user.\n\n * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.\n\n * 400 InvalidEncryptionProtectorName - The encryption protector key name is not supported.\n\n * 400 AzureKeyVaultInvalidExpirationDate - The operation could not be completed because the Azure Key Vault key expiration date is invalid.\n\n * 400 SecurityAzureKeyVaultUrlNullOrEmpty - The operation could not be completed because the Azure Key Vault Uri is null or empty.\n\n * 400 AzureKeyVaultInvalidUri - An invalid response from Azure Key Vault. Please use a valid Azure Key Vault URI.\n\n * 400 SecurityAzureKeyVaultInvalidKeyName - The operation could not be completed because of an invalid Server Key name.\n\n * 400 AzureKeyVaultMalformedVaultUri - The provided Key Vault uri is not valid.\n\n * 400 SecurityAdalPrincipalCertExpiredError - The operation could not be completed because the Azure Key Vault principal certificate has expired.\n\n * 400 SecurityInvalidAzureKeyVaultRecoveryLevel - The provided Key Vault uri is not valid.\n\n * 400 KeyMaterialNotFoundOnRemoteServer - Remote server does not have access to key material used as a TDE protector.\n\n * 400 AzureKeyVaultMismatchError - Unexpected Key Vault region found in the http response.\n\n * 400 AzureKeyVaultRsaKeyNotSupported - The provided key vault uses unsupported RSA Key Size or Key Type. The supported RSA key size is 2048 and Key Type is RSA.\n\n * 401 AzureKeyVaultKeyDisabled - The operation could not be completed on the server because the Azure Key Vault key is disabled.\n\n * 401 AzureKeyVaultNoServerIdentity - The server identity is not correctly configured.\n\n * 401 AzureKeyVaultMissingPermissions - The server is mising required permissions on the Azure Key Vault. \n\n * 401 AdalGenericError - The operation could not be completed because an Azure Active Directory error was encountered.\n\n * 401 AdalServicePrincipalNotFound - The operation could not be completed because an Azure Active Directory library Serivce Principal not found error was encountered.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 ServerKeyNotFound - The requested server key was not found on the current subscription.\n\n * 409 ServerKeyNameAlreadyExists - The server key already exists on the server.\n\n * 409 ServerKeyUriAlreadyExists - The server key URI already exists on the server.\n\n * 409 ServerKeyDoesNotExists - The server key does not exist.\n\n * 409 AzureKeyVaultKeyNameNotFound - The operation could not be completed because the Azure Key Vault Key name does not exist.\n\n * 409 AzureKeyVaultKeyInUse - The key is currently being used by the server.\n\n * 503 AzureKeyVaultConnectionFailed - The operation could not be completed on the server because attempts to connect to Azure Key Vault have failed\n\n * 503 AzureKeyVaultGenericConnectionError - The operation could not be completed because an error was encountered when attempting to retrieve Key Vault information ."
     }
    },
    "x-ms-long-running-operation": true
   }
  }
 },
 "components": {
  "schemas": {
   "schemas:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///844?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fbackups.json"
     ],
     "name": "RecoverableDatabaseProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/backups.json#/components/schemas/RecoverableDatabaseProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "edition": {
      "readOnly": true,
      "type": "string",
      "description": "The edition of the database"
     },
     "serviceLevelObjective": {
      "readOnly": true,
      "type": "string",
      "description": "The service level objective name of the database"
     },
     "elasticPoolName": {
      "readOnly": true,
      "type": "string",
      "description": "The elastic pool name of the database"
     },
     "lastAvailableBackupDate": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The last available backup date of the database (ISO8601 format)"
     }
    },
    "description": "The properties of a recoverable database"
   },
   "schemas:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///844?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fbackups.json"
     ],
     "name": "RecoverableDatabase",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/backups.json#/components/schemas/RecoverableDatabase"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:0",
      "description": "The properties of a recoverable database",
      "x-ms-client-flatten": true
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "A recoverable database"
   },
   "schemas:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///844?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fbackups.json"
     ],
     "name": "RecoverableDatabaseListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/backups.json#/components/schemas/RecoverableDatabaseListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:1"
      },
      "description": "A list of recoverable databases"
     }
    },
    "required": [
     "value"
    ],
    "description": "The response to a list recoverable databases request"
   },
   "schemas:3": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///844?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fbackups.json"
     ],
     "name": "RestorableDroppedDatabaseProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/backups.json#/components/schemas/RestorableDroppedDatabaseProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "databaseName": {
      "readOnly": true,
      "type": "string",
      "description": "The name of the database"
     },
     "edition": {
      "readOnly": true,
      "type": "string",
      "description": "The edition of the database"
     },
     "maxSizeBytes": {
      "readOnly": true,
      "type": "string",
      "description": "The max size in bytes of the database"
     },
     "serviceLevelObjective": {
      "readOnly": true,
      "type": "string",
      "description": "The service level objective name of the database"
     },
     "elasticPoolName": {
      "readOnly": true,
      "type": "string",
      "description": "The elastic pool name of the database"
     },
     "creationDate": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The creation date of the database (ISO8601 format)"
     },
     "deletionDate": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The deletion date of the database (ISO8601 format)"
     },
     "earliestRestoreDate": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The earliest restore date of the database (ISO8601 format)"
     }
    },
    "description": "The properties of a restorable dropped database"
   },
   "schemas:4": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///844?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fbackups.json"
     ],
     "name": "RestorableDroppedDatabase",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/backups.json#/components/schemas/RestorableDroppedDatabase"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "location": {
      "type": "string",
      "readOnly": true,
      "description": "The geo-location where the resource lives"
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:3",
      "description": "The properties of a restorable dropped database",
      "x-ms-client-flatten": true
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "A restorable dropped database"
   },
   "schemas:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///844?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fbackups.json"
     ],
     "name": "RestorableDroppedDatabaseListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/backups.json#/components/schemas/RestorableDroppedDatabaseListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:4"
      },
      "description": "A list of restorable dropped databases"
     }
    },
    "required": [
     "value"
    ],
    "description": "The response to a list restorable dropped databases request"
   },
   "schemas:6": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///845?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FcheckNameAvailability.json"
     ],
     "name": "CheckNameAvailabilityRequest",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/checkNameAvailability.json#/components/schemas/CheckNameAvailabilityRequest"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "name": {
      "type": "string",
      "description": "The name whose availability is to be checked."
     },
     "type": {
      "type": "string",
      "description": "The type of resource that is used as the scope of the availability check.",
      "enum": [
       "Microsoft.Sql/servers"
      ],
      "x-ms-enum": {
       "name": "CheckNameAvailabilityResourceType",
       "modelAsString": false,
       "oldModelAsString": false
      }
     }
    },
    "required": [
     "name",
     "type"
    ],
    "description": "A request to check whether the specified name for a resource is available."
   },
   "schemas:7": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///845?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FcheckNameAvailability.json"
     ],
     "name": "CheckNameAvailabilityResponse",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/checkNameAvailability.json#/components/schemas/CheckNameAvailabilityResponse"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "available": {
      "type": "boolean",
      "description": "True if the name is available, otherwise false.",
      "readOnly": true
     },
     "message": {
      "type": "string",
      "description": "A message explaining why the name is unavailable. Will be null if the name is available.",
      "readOnly": true
     },
     "name": {
      "type": "string",
      "description": "The name whose availability was checked.",
      "readOnly": true
     },
     "reason": {
      "type": "string",
      "description": "The reason code explaining why the name is unavailable. Will be null if the name is available.",
      "enum": [
       "Invalid",
       "AlreadyExists"
      ],
      "x-ms-enum": {
       "name": "CheckNameAvailabilityReason",
       "modelAsString": false,
       "oldModelAsString": false
      },
      "readOnly": true
     }
    },
    "description": "A response indicating whether the specified name for a resource is available."
   },
   "schemas:8": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///846?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FconnectionPolicies.json"
     ],
     "name": "ServerConnectionPolicyProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/connectionPolicies.json#/components/schemas/ServerConnectionPolicyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "connectionType": {
      "type": "string",
      "description": "The server connection type.",
      "enum": [
       "Default",
       "Proxy",
       "Redirect"
      ],
      "x-ms-enum": {
       "name": "ServerConnectionType"
      }
     }
    },
    "required": [
     "connectionType"
    ],
    "description": "The properties of a server secure connection policy."
   },
   "schemas:9": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///846?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FconnectionPolicies.json"
     ],
     "name": "ServerConnectionPolicy",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/connectionPolicies.json#/components/schemas/ServerConnectionPolicy"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "kind": {
      "readOnly": true,
      "type": "string",
      "description": "Metadata used for the Azure portal experience."
     },
     "location": {
      "type": "string",
      "description": "Resource location.",
      "readOnly": true
     },
     "properties": {
      "x-ms-client-flatten": true,
      "$ref": "#/components/schemas/schemas:8",
      "description": "The properties of the server secure connection policy."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "A server secure connection policy."
   },
   "schemas:10": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///847?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FdatabaseSecurityAlertPolicies.json"
     ],
     "name": "DatabaseSecurityAlertPolicy",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/databaseSecurityAlertPolicies.json#/components/schemas/DatabaseSecurityAlertPolicy"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Contains information about a database Threat Detection policy.",
    "type": "object",
    "properties": {
     "location": {
      "type": "string",
      "x-ms-mutability": [
       "read",
       "create"
      ],
      "description": "The geo-location where the resource lives"
     },
     "kind": {
      "readOnly": true,
      "type": "string",
      "description": "Resource kind."
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:11",
      "x-ms-client-flatten": true,
      "description": "Properties of the security alert policy."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ]
   },
   "schemas:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///847?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FdatabaseSecurityAlertPolicies.json"
     ],
     "name": "DatabaseSecurityAlertPolicyProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/databaseSecurityAlertPolicies.json#/components/schemas/DatabaseSecurityAlertPolicyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties for a database Threat Detection policy.",
    "type": "object",
    "properties": {
     "state": {
      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required.",
      "type": "string",
      "enum": [
       "New",
       "Enabled",
       "Disabled"
      ],
      "x-ms-enum": {
       "name": "SecurityAlertPolicyState"
      }
     },
     "disabledAlerts": {
      "description": "Specifies the semicolon-separated list of alerts that are disabled, or empty string to disable no alerts. Possible values: Sql_Injection; Sql_Injection_Vulnerability; Access_Anomaly; Data_Exfiltration; Unsafe_Action.",
      "type": "string"
     },
     "emailAddresses": {
      "description": "Specifies the semicolon-separated list of e-mail addresses to which the alert is sent.",
      "type": "string"
     },
     "emailAccountAdmins": {
      "description": "Specifies that the alert is sent to the account administrators.",
      "type": "string",
      "enum": [
       "Enabled",
       "Disabled"
      ],
      "x-ms-enum": {
       "name": "SecurityAlertPolicyEmailAccountAdmins"
      }
     },
     "storageEndpoint": {
      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. If state is Enabled, storageEndpoint is required.",
      "type": "string"
     },
     "storageAccountAccessKey": {
      "description": "Specifies the identifier key of the Threat Detection audit storage account. If state is Enabled, storageAccountAccessKey is required.",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     },
     "retentionDays": {
      "format": "int32",
      "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
      "type": "integer"
     },
     "useServerDefault": {
      "description": "Specifies whether to use the default server policy.",
      "type": "string",
      "enum": [
       "Enabled",
       "Disabled"
      ],
      "x-ms-enum": {
       "name": "SecurityAlertPolicyUseServerDefault"
      }
     }
    },
    "required": [
     "state"
    ]
   },
   "schemas:12": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///848?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FdataMasking.json"
     ],
     "name": "DataMaskingPolicyProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/dataMasking.json#/components/schemas/DataMaskingPolicyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "dataMaskingState": {
      "type": "string",
      "description": "The state of the data masking policy.",
      "enum": [
       "Disabled",
       "Enabled"
      ],
      "x-ms-enum": {
       "modelAsString": false,
       "name": "DataMaskingState",
       "oldModelAsString": false
      }
     },
     "exemptPrincipals": {
      "type": "string",
      "description": "The list of the exempt principals. Specifies the semicolon-separated list of database users for which the data masking policy does not apply. The specified users receive data results without masking for all of the database queries."
     },
     "applicationPrincipals": {
      "type": "string",
      "description": "The list of the application principals. This is a legacy parameter and is no longer used.",
      "readOnly": true
     },
     "maskingLevel": {
      "type": "string",
      "description": "The masking level. This is a legacy parameter and is no longer used.",
      "readOnly": true
     }
    },
    "required": [
     "dataMaskingState"
    ],
    "description": "The properties of a database data masking policy."
   },
   "schemas:13": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///848?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FdataMasking.json"
     ],
     "name": "DataMaskingPolicy",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/dataMasking.json#/components/schemas/DataMaskingPolicy"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "properties": {
      "x-ms-client-flatten": true,
      "$ref": "#/components/schemas/schemas:12",
      "description": "The properties of the data masking policy."
     },
     "location": {
      "type": "string",
      "readOnly": true,
      "description": "The location of the data masking policy."
     },
     "kind": {
      "type": "string",
      "readOnly": true,
      "description": "The kind of data masking policy. Metadata, used for Azure portal."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "Represents a database data masking policy."
   },
   "schemas:14": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///848?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FdataMasking.json"
     ],
     "name": "DataMaskingRuleProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/dataMasking.json#/components/schemas/DataMaskingRuleProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "id": {
      "type": "string",
      "description": "The rule Id.",
      "readOnly": true
     },
     "aliasName": {
      "type": "string",
      "description": "The alias name. This is a legacy parameter and is no longer used."
     },
     "ruleState": {
      "type": "string",
      "description": "The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState.",
      "enum": [
       "Disabled",
       "Enabled"
      ],
      "x-ms-enum": {
       "modelAsString": false,
       "name": "DataMaskingRuleState",
       "oldModelAsString": false
      }
     },
     "schemaName": {
      "type": "string",
      "description": "The schema name on which the data masking rule is applied."
     },
     "tableName": {
      "type": "string",
      "description": "The table name on which the data masking rule is applied."
     },
     "columnName": {
      "type": "string",
      "description": "The column name on which the data masking rule is applied."
     },
     "maskingFunction": {
      "type": "string",
      "description": "The masking function that is used for the data masking rule.",
      "enum": [
       "Default",
       "CCN",
       "Email",
       "Number",
       "SSN",
       "Text"
      ],
      "x-ms-enum": {
       "modelAsString": false,
       "name": "DataMaskingFunction",
       "oldModelAsString": false
      }
     },
     "numberFrom": {
      "type": "string",
      "description": "The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
     },
     "numberTo": {
      "type": "string",
      "description": "The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored."
     },
     "prefixSize": {
      "type": "string",
      "description": "If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored."
     },
     "suffixSize": {
      "type": "string",
      "description": "If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored."
     },
     "replacementString": {
      "type": "string",
      "description": "If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored."
     }
    },
    "required": [
     "maskingFunction",
     "schemaName",
     "tableName",
     "columnName"
    ],
    "description": "The properties of a database data masking rule."
   },
   "schemas:15": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///848?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FdataMasking.json"
     ],
     "name": "DataMaskingRule",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/dataMasking.json#/components/schemas/DataMaskingRule"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "properties": {
      "x-ms-client-flatten": true,
      "$ref": "#/components/schemas/schemas:14",
      "description": "The properties of the resource."
     },
     "location": {
      "type": "string",
      "readOnly": true,
      "description": "The location of the data masking rule."
     },
     "kind": {
      "type": "string",
      "readOnly": true,
      "description": "The kind of Data Masking Rule. Metadata, used for Azure portal."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "Represents a database data masking rule."
   },
   "schemas:16": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///848?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FdataMasking.json"
     ],
     "name": "DataMaskingRuleListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/dataMasking.json#/components/schemas/DataMaskingRuleListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:15"
      },
      "description": "The list of database data masking rules."
     }
    },
    "description": "The response to a list data masking rules request."
   },
   "schemas:17": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///849?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FfirewallRules.json"
     ],
     "name": "FirewallRuleProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/firewallRules.json#/components/schemas/FirewallRuleProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "startIpAddress": {
      "type": "string",
      "description": "The start IP address of the firewall rule. Must be IPv4 format. Use value '0.0.0.0' to represent all Azure-internal IP addresses."
     },
     "endIpAddress": {
      "type": "string",
      "description": "The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress. Use value '0.0.0.0' to represent all Azure-internal IP addresses."
     }
    },
    "required": [
     "startIpAddress",
     "endIpAddress"
    ],
    "description": "Represents the properties of a server firewall rule."
   },
   "schemas:18": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///849?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FfirewallRules.json"
     ],
     "name": "FirewallRule",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/firewallRules.json#/components/schemas/FirewallRule"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "kind": {
      "type": "string",
      "description": "Kind of server that contains this firewall rule.",
      "readOnly": true
     },
     "location": {
      "type": "string",
      "description": "Location of the server that contains this firewall rule.",
      "readOnly": true
     },
     "type": {
      "type": "string",
      "description": "Type of resource this is.",
      "readOnly": true
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:17",
      "description": "The properties representing the resource.",
      "x-ms-client-flatten": true
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "Represents a server firewall rule."
   },
   "schemas:19": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///849?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FfirewallRules.json"
     ],
     "name": "FirewallRuleListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/firewallRules.json#/components/schemas/FirewallRuleListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:18"
      },
      "description": "The list of server firewall rules."
     }
    },
    "description": "Represents the response to a List Firewall Rules request."
   },
   "schemas:20": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///850?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FgeoBackupPolicies.json"
     ],
     "name": "GeoBackupPolicyProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/geoBackupPolicies.json#/components/schemas/GeoBackupPolicyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "state": {
      "type": "string",
      "description": "The state of the geo backup policy.",
      "enum": [
       "Disabled",
       "Enabled"
      ],
      "x-ms-enum": {
       "modelAsString": false,
       "name": "GeoBackupPolicyState",
       "oldModelAsString": false
      }
     },
     "storageType": {
      "type": "string",
      "description": "The storage type of the geo backup policy.",
      "readOnly": true
     }
    },
    "required": [
     "state"
    ],
    "description": "The properties of the geo backup policy."
   },
   "schemas:21": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///850?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FgeoBackupPolicies.json"
     ],
     "name": "GeoBackupPolicy",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/geoBackupPolicies.json#/components/schemas/GeoBackupPolicy"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:20",
      "description": "The properties of the geo backup policy.",
      "x-ms-client-flatten": true
     },
     "kind": {
      "readOnly": true,
      "type": "string",
      "description": "Kind of geo backup policy.  This is metadata used for the Azure portal experience."
     },
     "location": {
      "type": "string",
      "readOnly": true,
      "description": "Backup policy location."
     }
    },
    "required": [
     "properties"
    ],
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "A database geo backup policy."
   },
   "schemas:22": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///850?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FgeoBackupPolicies.json"
     ],
     "name": "GeoBackupPolicyListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/geoBackupPolicies.json#/components/schemas/GeoBackupPolicyListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:21"
      },
      "description": "The list of geo backup policies."
     }
    },
    "description": "The response to a list geo backup policies request."
   },
   "schemas:23": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///851?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FimportExport.json"
     ],
     "name": "ImportExtensionProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/importExport.json#/components/schemas/ImportExtensionProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "operationMode": {
      "type": "string",
      "description": "The type of import operation being performed. This is always Import.",
      "enum": [
       "Import"
      ],
      "x-ms-enum": {
       "name": "ImportOperationMode"
      }
     }
    },
    "required": [
     "operationMode"
    ],
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:28"
     }
    ],
    "description": "Represents the properties for an import operation"
   },
   "schemas:24": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///851?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FimportExport.json"
     ],
     "name": "ImportExtensionRequest",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/importExport.json#/components/schemas/ImportExtensionRequest"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "name": {
      "type": "string",
      "description": "The name of the extension."
     },
     "type": {
      "type": "string",
      "description": "The type of the extension."
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:23",
      "x-ms-client-flatten": true,
      "description": "Represents the properties of the resource."
     }
    },
    "description": "Import database parameters."
   },
   "schemas:25": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///851?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FimportExport.json"
     ],
     "name": "ImportExportResponse",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/importExport.json#/components/schemas/ImportExportResponse"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:26",
      "x-ms-client-flatten": true,
      "description": "The import/export operation properties."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "Response for Import/Export Get operation."
   },
   "schemas:26": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///851?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FimportExport.json"
     ],
     "name": "ImportExportResponseProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/importExport.json#/components/schemas/ImportExportResponseProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "requestType": {
      "type": "string",
      "readOnly": true,
      "description": "The request type of the operation."
     },
     "requestId": {
      "type": "string",
      "format": "uuid",
      "readOnly": true,
      "description": "The request type of the operation."
     },
     "serverName": {
      "type": "string",
      "readOnly": true,
      "description": "The name of the server."
     },
     "databaseName": {
      "type": "string",
      "readOnly": true,
      "description": "The name of the database."
     },
     "status": {
      "type": "string",
      "readOnly": true,
      "description": "The status message returned from the server."
     },
     "lastModifiedTime": {
      "type": "string",
      "readOnly": true,
      "description": "The operation status last modified time."
     },
     "queuedTime": {
      "type": "string",
      "readOnly": true,
      "description": "The operation queued time."
     },
     "blobUri": {
      "type": "string",
      "readOnly": true,
      "description": "The blob uri."
     },
     "errorMessage": {
      "type": "string",
      "readOnly": true,
      "description": "The error message returned from the server."
     }
    },
    "description": "Response for Import/Export Status operation."
   },
   "schemas:27": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///851?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FimportExport.json"
     ],
     "name": "ImportRequest",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/importExport.json#/components/schemas/ImportRequest"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "databaseName": {
      "type": "string",
      "description": "The name of the database to import."
     },
     "edition": {
      "type": "string",
      "description": "The edition for the database being created.",
      "enum": [
       "Web",
       "Business",
       "Basic",
       "Standard",
       "Premium",
       "PremiumRS",
       "Free",
       "Stretch",
       "DataWarehouse",
       "System",
       "System2"
      ],
      "x-ms-enum": {
       "name": "DatabaseEdition",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "serviceObjectiveName": {
      "type": "string",
      "description": "The name of the service objective to assign to the database.",
      "enum": [
       "System",
       "System0",
       "System1",
       "System2",
       "System3",
       "System4",
       "System2L",
       "System3L",
       "System4L",
       "Free",
       "Basic",
       "S0",
       "S1",
       "S2",
       "S3",
       "S4",
       "S6",
       "S7",
       "S9",
       "S12",
       "P1",
       "P2",
       "P3",
       "P4",
       "P6",
       "P11",
       "P15",
       "PRS1",
       "PRS2",
       "PRS4",
       "PRS6",
       "DW100",
       "DW200",
       "DW300",
       "DW400",
       "DW500",
       "DW600",
       "DW1000",
       "DW1200",
       "DW1000c",
       "DW1500",
       "DW1500c",
       "DW2000",
       "DW2000c",
       "DW3000",
       "DW2500c",
       "DW3000c",
       "DW6000",
       "DW5000c",
       "DW6000c",
       "DW7500c",
       "DW10000c",
       "DW15000c",
       "DW30000c",
       "DS100",
       "DS200",
       "DS300",
       "DS400",
       "DS500",
       "DS600",
       "DS1000",
       "DS1200",
       "DS1500",
       "DS2000",
       "ElasticPool"
      ],
      "x-ms-enum": {
       "modelAsString": true,
       "name": "ServiceObjectiveName",
       "oldModelAsString": true
      }
     },
     "maxSizeBytes": {
      "type": "string",
      "description": "The maximum size for the newly imported database."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:28"
     }
    ],
    "required": [
     "databaseName",
     "edition",
     "serviceObjectiveName",
     "maxSizeBytes"
    ],
    "description": "Import database parameters."
   },
   "schemas:28": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///851?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FimportExport.json"
     ],
     "name": "ExportRequest",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/importExport.json#/components/schemas/ExportRequest"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "storageKeyType": {
      "type": "string",
      "description": "The type of the storage key to use.",
      "enum": [
       "StorageAccessKey",
       "SharedAccessKey"
      ],
      "x-ms-enum": {
       "name": "StorageKeyType"
      }
     },
     "storageKey": {
      "type": "string",
      "description": "The storage key to use.  If storage key type is SharedAccessKey, it must be preceded with a \"?.\""
     },
     "storageUri": {
      "type": "string",
      "description": "The storage uri to use."
     },
     "administratorLogin": {
      "type": "string",
      "description": "The name of the SQL administrator."
     },
     "administratorLoginPassword": {
      "type": "string",
      "description": "The password of the SQL administrator."
     },
     "authenticationType": {
      "type": "string",
      "description": "The authentication type.",
      "enum": [
       "SQL",
       "ADPassword"
      ],
      "x-ms-enum": {
       "name": "AuthenticationType"
      },
      "default": "SQL"
     }
    },
    "required": [
     "storageKeyType",
     "storageKey",
     "storageUri",
     "administratorLogin",
     "administratorLoginPassword"
    ],
    "description": "Export database parameters."
   },
   "schemas:29": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///852?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fmetrics.json"
     ],
     "name": "MetricValue",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/metrics.json#/components/schemas/MetricValue"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "count": {
      "readOnly": true,
      "type": "number",
      "format": "int32",
      "description": "The number of values for the metric."
     },
     "average": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "The average value of the metric."
     },
     "maximum": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "The max value of the metric."
     },
     "minimum": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "The min value of the metric."
     },
     "timestamp": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The metric timestamp (ISO-8601 format)."
     },
     "total": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "The total value of the metric."
     }
    },
    "description": "Represents database metrics."
   },
   "schemas:30": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///852?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fmetrics.json"
     ],
     "name": "MetricName",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/metrics.json#/components/schemas/MetricName"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "readOnly": true,
      "type": "string",
      "description": "The name of the database metric."
     },
     "localizedValue": {
      "readOnly": true,
      "type": "string",
      "description": "The friendly name of the database metric."
     }
    },
    "description": "A database metric name."
   },
   "schemas:31": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///852?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fmetrics.json"
     ],
     "name": "Metric",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/metrics.json#/components/schemas/Metric"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "startTime": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The start time for the metric (ISO-8601 format)."
     },
     "endTime": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The end time for the metric (ISO-8601 format)."
     },
     "timeGrain": {
      "readOnly": true,
      "type": "string",
      "description": "The time step to be used to summarize the metric values."
     },
     "unit": {
      "readOnly": true,
      "type": "string",
      "description": "The unit of the metric.",
      "enum": [
       "count",
       "bytes",
       "seconds",
       "percent",
       "countPerSecond",
       "bytesPerSecond"
      ],
      "x-ms-enum": {
       "modelAsString": true,
       "name": "UnitType",
       "oldModelAsString": true
      }
     },
     "name": {
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:30",
      "description": "The name information for the metric."
     },
     "metricValues": {
      "readOnly": true,
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:29"
      },
      "description": "The metric values for the specified time window and timestep."
     }
    },
    "description": "Database metrics."
   },
   "schemas:32": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///852?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fmetrics.json"
     ],
     "name": "MetricListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/metrics.json#/components/schemas/MetricListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:31"
      },
      "description": "The list of metrics for the database."
     }
    },
    "required": [
     "value"
    ],
    "description": "The response to a list database metrics request."
   },
   "schemas:33": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///852?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fmetrics.json"
     ],
     "name": "MetricAvailability",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/metrics.json#/components/schemas/MetricAvailability"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "retention": {
      "readOnly": true,
      "type": "string",
      "description": "The length of retention for the database metric."
     },
     "timeGrain": {
      "readOnly": true,
      "type": "string",
      "description": "The granularity of the database metric."
     }
    },
    "description": "A metric availability value."
   },
   "schemas:34": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///852?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fmetrics.json"
     ],
     "name": "MetricDefinition",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/metrics.json#/components/schemas/MetricDefinition"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "name": {
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:30",
      "description": "The name information for the metric."
     },
     "primaryAggregationType": {
      "readOnly": true,
      "type": "string",
      "description": "The primary aggregation type defining how metric values are displayed.",
      "enum": [
       "None",
       "Average",
       "Count",
       "Minimum",
       "Maximum",
       "Total"
      ],
      "x-ms-enum": {
       "modelAsString": true,
       "name": "PrimaryAggregationType",
       "oldModelAsString": true
      }
     },
     "resourceUri": {
      "readOnly": true,
      "type": "string",
      "description": "The resource uri of the database."
     },
     "unit": {
      "readOnly": true,
      "type": "string",
      "description": "The unit of the metric.",
      "enum": [
       "Count",
       "Bytes",
       "Seconds",
       "Percent",
       "CountPerSecond",
       "BytesPerSecond"
      ],
      "x-ms-enum": {
       "modelAsString": true,
       "name": "UnitDefinitionType",
       "oldModelAsString": true
      }
     },
     "metricAvailabilities": {
      "readOnly": true,
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:33"
      },
      "description": "The list of database metric availabities for the metric."
     }
    },
    "description": "A database metric definition."
   },
   "schemas:35": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///852?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fmetrics.json"
     ],
     "name": "MetricDefinitionListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/metrics.json#/components/schemas/MetricDefinitionListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:34"
      },
      "description": "The list of metric definitions for the database."
     }
    },
    "required": [
     "value"
    ],
    "description": "The response to a list database metric definitions request."
   },
   "schemas:36": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///853?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FrecommendedElasticPoolsDecoupled.json"
     ],
     "name": "RecommendedElasticPoolMetric",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/recommendedElasticPoolsDecoupled.json#/components/schemas/RecommendedElasticPoolMetric"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "dateTime": {
      "type": "string",
      "format": "date-time",
      "description": "The time of metric (ISO8601 format)."
     },
     "dtu": {
      "type": "number",
      "format": "double",
      "description": "Gets or sets the DTUs (Database Transaction Units). See https://azure.microsoft.com/documentation/articles/sql-database-what-is-a-dtu/"
     },
     "sizeGB": {
      "type": "number",
      "format": "double",
      "description": "Gets or sets size in gigabytes."
     }
    },
    "description": "Represents recommended elastic pool metric."
   },
   "schemas:37": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///853?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FrecommendedElasticPoolsDecoupled.json"
     ],
     "name": "RecommendedElasticPoolProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/recommendedElasticPoolsDecoupled.json#/components/schemas/RecommendedElasticPoolProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "databaseEdition": {
      "readOnly": true,
      "type": "string",
      "description": "The edition of the recommended elastic pool. The ElasticPoolEdition enumeration contains all the valid editions.",
      "enum": [
       "Basic",
       "Standard",
       "Premium"
      ],
      "x-ms-enum": {
       "name": "ElasticPoolEdition",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "dtu": {
      "type": "number",
      "format": "double",
      "description": "The DTU for the recommended elastic pool."
     },
     "databaseDtuMin": {
      "type": "number",
      "format": "double",
      "description": "The minimum DTU for the database."
     },
     "databaseDtuMax": {
      "type": "number",
      "format": "double",
      "description": "The maximum DTU for the database."
     },
     "storageMB": {
      "type": "number",
      "format": "double",
      "description": "Gets storage size in megabytes."
     },
     "observationPeriodStart": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The observation period start (ISO8601 format)."
     },
     "observationPeriodEnd": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The observation period start (ISO8601 format)."
     },
     "maxObservedDtu": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "Gets maximum observed DTU."
     },
     "maxObservedStorageMB": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "Gets maximum observed storage in megabytes."
     },
     "databases": {
      "readOnly": true,
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:278"
      },
      "description": "The list of databases in this pool. Expanded property"
     },
     "metrics": {
      "readOnly": true,
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:36"
      },
      "description": "The list of databases housed in the server. Expanded property"
     }
    },
    "description": "Represents the properties of a recommented elastic pool."
   },
   "schemas:38": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///853?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FrecommendedElasticPoolsDecoupled.json"
     ],
     "name": "RecommendedElasticPool",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/recommendedElasticPoolsDecoupled.json#/components/schemas/RecommendedElasticPool"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "properties": {
      "x-ms-client-flatten": true,
      "$ref": "#/components/schemas/schemas:37",
      "description": "The properites representing the resource."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "Represents a recommented elastic pool."
   },
   "schemas:39": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///853?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FrecommendedElasticPoolsDecoupled.json"
     ],
     "name": "RecommendedElasticPoolListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/recommendedElasticPoolsDecoupled.json#/components/schemas/RecommendedElasticPoolListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:38"
      },
      "description": "The list of recommended elastic pools hosted in the server."
     }
    },
    "required": [
     "value"
    ],
    "description": "Represents the response to a list recommended elastic pool request."
   },
   "schemas:40": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///853?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FrecommendedElasticPoolsDecoupled.json"
     ],
     "name": "RecommendedElasticPoolListMetricsResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/recommendedElasticPoolsDecoupled.json#/components/schemas/RecommendedElasticPoolListMetricsResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:36"
      },
      "description": "The list of recommended elastic pools metrics."
     }
    },
    "required": [
     "value"
    ],
    "description": "Represents the response to a list recommended elastic pool metrics request."
   },
   "schemas:41": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///854?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FreplicationLinks.json"
     ],
     "name": "ReplicationLinkProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/replicationLinks.json#/components/schemas/ReplicationLinkProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "isTerminationAllowed": {
      "readOnly": true,
      "type": "boolean",
      "description": "Legacy value indicating whether termination is allowed.  Currently always returns true."
     },
     "replicationMode": {
      "readOnly": true,
      "type": "string",
      "description": "Replication mode of this replication link."
     },
     "partnerServer": {
      "readOnly": true,
      "type": "string",
      "description": "The name of the server hosting the partner database."
     },
     "partnerDatabase": {
      "readOnly": true,
      "type": "string",
      "description": "The name of the partner database."
     },
     "partnerLocation": {
      "readOnly": true,
      "type": "string",
      "description": "The Azure Region of the partner database."
     },
     "role": {
      "readOnly": true,
      "type": "string",
      "description": "The role of the database in the replication link.",
      "enum": [
       "Primary",
       "Secondary",
       "NonReadableSecondary",
       "Source",
       "Copy"
      ],
      "x-ms-enum": {
       "name": "ReplicationRole"
      }
     },
     "partnerRole": {
      "readOnly": true,
      "type": "string",
      "description": "The role of the partner database in the replication link.",
      "enum": [
       "Primary",
       "Secondary",
       "NonReadableSecondary",
       "Source",
       "Copy"
      ],
      "x-ms-enum": {
       "name": "ReplicationRole"
      }
     },
     "startTime": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The start time for the replication link."
     },
     "percentComplete": {
      "readOnly": true,
      "type": "integer",
      "format": "int32",
      "description": "The percentage of seeding complete for the replication link."
     },
     "replicationState": {
      "readOnly": true,
      "type": "string",
      "description": "The replication state for the replication link.",
      "enum": [
       "PENDING",
       "SEEDING",
       "CATCH_UP",
       "SUSPENDED"
      ],
      "x-ms-enum": {
       "name": "ReplicationState",
       "modelAsString": true,
       "oldModelAsString": true
      }
     }
    },
    "description": "Represents the properties of a database replication link."
   },
   "schemas:42": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///854?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FreplicationLinks.json"
     ],
     "name": "ReplicationLink",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/replicationLinks.json#/components/schemas/ReplicationLink"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "location": {
      "type": "string",
      "description": "Location of the server that contains this firewall rule.",
      "readOnly": true
     },
     "type": {
      "type": "string",
      "description": "Type of resource this is.",
      "readOnly": true
     },
     "properties": {
      "x-ms-client-flatten": true,
      "$ref": "#/components/schemas/schemas:41",
      "description": "The properties representing the resource."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "Represents a database replication link."
   },
   "schemas:43": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///854?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FreplicationLinks.json"
     ],
     "name": "ReplicationLinkListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/replicationLinks.json#/components/schemas/ReplicationLinkListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:42"
      },
      "description": "The list of database replication links housed in the database."
     }
    },
    "description": "Represents the response to a List database replication link request."
   },
   "schemas:44": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///855?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserverAzureADAdministrators.json"
     ],
     "name": "ServerAdministratorProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serverAzureADAdministrators.json#/components/schemas/ServerAdministratorProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "administratorType": {
      "type": "string",
      "description": "The type of administrator.",
      "enum": [
       "ActiveDirectory"
      ],
      "x-ms-enum": {
       "name": "AdministratorType"
      }
     },
     "login": {
      "type": "string",
      "description": "The server administrator login value."
     },
     "sid": {
      "type": "string",
      "description": "The server administrator Sid (Secure ID).",
      "format": "uuid"
     },
     "tenantId": {
      "type": "string",
      "description": "The server Active Directory Administrator tenant id.",
      "format": "uuid"
     }
    },
    "required": [
     "tenantId",
     "administratorType",
     "login",
     "sid"
    ],
    "description": "The properties of an server Administrator."
   },
   "schemas:45": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///855?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserverAzureADAdministrators.json"
     ],
     "name": "ServerAzureADAdministrator",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serverAzureADAdministrators.json#/components/schemas/ServerAzureADAdministrator"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "properties": {
      "x-ms-client-flatten": true,
      "$ref": "#/components/schemas/schemas:44",
      "description": "The properties of the resource."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "An server Active Directory Administrator."
   },
   "schemas:46": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///855?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserverAzureADAdministrators.json"
     ],
     "name": "ServerAdministratorListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serverAzureADAdministrators.json#/components/schemas/ServerAdministratorListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:45"
      },
      "description": "The list of server Active Directory Administrators for the server."
     }
    },
    "description": "The response to a list Active Directory Administrators request."
   },
   "schemas:47": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///856?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserverCommunicationLinks.json"
     ],
     "name": "ServerCommunicationLinkProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serverCommunicationLinks.json#/components/schemas/ServerCommunicationLinkProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "state": {
      "readOnly": true,
      "type": "string",
      "description": "The state."
     },
     "partnerServer": {
      "type": "string",
      "x-ms-mutability": [
       "create",
       "read"
      ],
      "description": "The name of the partner server."
     }
    },
    "required": [
     "partnerServer"
    ],
    "description": "The properties of a server communication link."
   },
   "schemas:48": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///856?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserverCommunicationLinks.json"
     ],
     "name": "ServerCommunicationLink",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serverCommunicationLinks.json#/components/schemas/ServerCommunicationLink"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:47",
      "description": "The properties of resource.",
      "x-ms-client-flatten": true
     },
     "location": {
      "type": "string",
      "readOnly": true,
      "description": "Communication link location."
     },
     "kind": {
      "type": "string",
      "readOnly": true,
      "description": "Communication link kind.  This property is used for Azure Portal metadata."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "Server communication link."
   },
   "schemas:49": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///856?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserverCommunicationLinks.json"
     ],
     "name": "ServerCommunicationLinkListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serverCommunicationLinks.json#/components/schemas/ServerCommunicationLinkListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:48"
      },
      "description": "The list of server communication links."
     }
    },
    "description": "A list of server communication links."
   },
   "schemas:50": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///857?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserviceObjectives.json"
     ],
     "name": "ServiceObjective",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serviceObjectives.json#/components/schemas/ServiceObjective"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "properties": {
      "x-ms-client-flatten": true,
      "$ref": "#/components/schemas/schemas:51",
      "description": "Represents the properties of the resource."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "Represents a database service objective."
   },
   "schemas:51": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///857?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserviceObjectives.json"
     ],
     "name": "ServiceObjectiveProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serviceObjectives.json#/components/schemas/ServiceObjectiveProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "serviceObjectiveName": {
      "readOnly": true,
      "type": "string",
      "description": "The name for the service objective."
     },
     "isDefault": {
      "readOnly": true,
      "type": "boolean",
      "description": "Gets whether the service level objective is the default service objective.",
      "nullable": false
     },
     "isSystem": {
      "readOnly": true,
      "type": "boolean",
      "description": "Gets whether the service level objective is a system service objective.",
      "nullable": false
     },
     "description": {
      "readOnly": true,
      "type": "string",
      "description": "The description for the service level objective."
     },
     "enabled": {
      "readOnly": true,
      "type": "boolean",
      "description": "Gets whether the service level objective is enabled.",
      "nullable": false
     }
    },
    "description": "Represents the properties of a database service objective."
   },
   "schemas:52": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///857?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserviceObjectives.json"
     ],
     "name": "ServiceObjectiveListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serviceObjectives.json#/components/schemas/ServiceObjectiveListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:50"
      },
      "description": "The list of database service objectives."
     }
    },
    "required": [
     "value"
    ],
    "description": "Represents the response to a get database service objectives request."
   },
   "schemas:53": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "ElasticPoolActivityProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/ElasticPoolActivityProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "endTime": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The time the operation finished (ISO8601 format)."
     },
     "errorCode": {
      "readOnly": true,
      "type": "integer",
      "format": "int32",
      "description": "The error code if available."
     },
     "errorMessage": {
      "readOnly": true,
      "type": "string",
      "description": "The error message if available."
     },
     "errorSeverity": {
      "readOnly": true,
      "type": "integer",
      "format": "int32",
      "description": "The error severity if available."
     },
     "operation": {
      "readOnly": true,
      "type": "string",
      "description": "The operation name."
     },
     "operationId": {
      "readOnly": true,
      "type": "string",
      "format": "uuid",
      "description": "The unique operation ID.",
      "nullable": false
     },
     "percentComplete": {
      "readOnly": true,
      "type": "integer",
      "format": "int32",
      "description": "The percentage complete if available."
     },
     "requestedDatabaseDtuMax": {
      "readOnly": true,
      "type": "integer",
      "format": "int32",
      "description": "The requested max DTU per database if available."
     },
     "requestedDatabaseDtuMin": {
      "readOnly": true,
      "type": "integer",
      "format": "int32",
      "description": "The requested min DTU per database if available."
     },
     "requestedDtu": {
      "readOnly": true,
      "type": "integer",
      "format": "int32",
      "description": "The requested DTU for the pool if available."
     },
     "requestedElasticPoolName": {
      "readOnly": true,
      "type": "string",
      "description": "The requested name for the elastic pool if available."
     },
     "requestedStorageLimitInGB": {
      "readOnly": true,
      "type": "integer",
      "format": "int64",
      "description": "The requested storage limit for the pool in GB if available."
     },
     "elasticPoolName": {
      "readOnly": true,
      "type": "string",
      "description": "The name of the elastic pool."
     },
     "serverName": {
      "readOnly": true,
      "type": "string",
      "description": "The name of the server the elastic pool is in."
     },
     "startTime": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The time the operation started (ISO8601 format)."
     },
     "state": {
      "readOnly": true,
      "type": "string",
      "description": "The current state of the operation."
     },
     "requestedStorageLimitInMB": {
      "readOnly": true,
      "type": "integer",
      "format": "int32",
      "description": "The requested storage limit in MB."
     },
     "requestedDatabaseDtuGuarantee": {
      "readOnly": true,
      "type": "integer",
      "format": "int32",
      "description": "The requested per database DTU guarantee."
     },
     "requestedDatabaseDtuCap": {
      "readOnly": true,
      "type": "integer",
      "format": "int32",
      "description": "The requested per database DTU cap."
     },
     "requestedDtuGuarantee": {
      "readOnly": true,
      "type": "integer",
      "format": "int32",
      "description": "The requested DTU guarantee."
     }
    },
    "description": "Represents the properties of an elastic pool."
   },
   "schemas:54": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "ElasticPoolActivity",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/ElasticPoolActivity"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "location": {
      "type": "string",
      "x-ms-mutability": [
       "read",
       "create"
      ],
      "description": "The geo-location where the resource lives"
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:53",
      "description": "The properties representing the resource.",
      "x-ms-client-flatten": true
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "Represents the activity on an elastic pool."
   },
   "schemas:55": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "ElasticPoolActivityListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/ElasticPoolActivityListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:54"
      },
      "description": "The list of elastic pool activities."
     }
    },
    "required": [
     "value"
    ],
    "description": "Represents the response to a list elastic pool activity request."
   },
   "schemas:56": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "ElasticPoolDatabaseActivityProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/ElasticPoolDatabaseActivityProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "databaseName": {
      "readOnly": true,
      "type": "string",
      "description": "The database name."
     },
     "endTime": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The time the operation finished (ISO8601 format)."
     },
     "errorCode": {
      "readOnly": true,
      "type": "integer",
      "format": "int32",
      "description": "The error code if available."
     },
     "errorMessage": {
      "readOnly": true,
      "type": "string",
      "description": "The error message if available."
     },
     "errorSeverity": {
      "readOnly": true,
      "type": "integer",
      "format": "int32",
      "description": "The error severity if available."
     },
     "operation": {
      "readOnly": true,
      "type": "string",
      "description": "The operation name."
     },
     "operationId": {
      "readOnly": true,
      "type": "string",
      "format": "uuid",
      "description": "The unique operation ID.",
      "nullable": false
     },
     "percentComplete": {
      "readOnly": true,
      "type": "integer",
      "format": "int32",
      "description": "The percentage complete if available."
     },
     "requestedElasticPoolName": {
      "readOnly": true,
      "type": "string",
      "description": "The name for the elastic pool the database is moving into if available."
     },
     "currentElasticPoolName": {
      "readOnly": true,
      "type": "string",
      "description": "The name of the current elastic pool the database is in if available."
     },
     "currentServiceObjective": {
      "readOnly": true,
      "type": "string",
      "description": "The name of the current service objective if available."
     },
     "requestedServiceObjective": {
      "readOnly": true,
      "type": "string",
      "description": "The name of the requested service objective if available."
     },
     "serverName": {
      "readOnly": true,
      "type": "string",
      "description": "The name of the server the elastic pool is in."
     },
     "startTime": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The time the operation started (ISO8601 format)."
     },
     "state": {
      "readOnly": true,
      "type": "string",
      "description": "The current state of the operation."
     }
    },
    "description": "Represents the properties of an elastic pool database activity."
   },
   "schemas:57": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "ElasticPoolDatabaseActivity",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/ElasticPoolDatabaseActivity"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "location": {
      "type": "string",
      "x-ms-mutability": [
       "read",
       "create"
      ],
      "description": "The geo-location where the resource lives"
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:56",
      "description": "The properties representing the resource.",
      "x-ms-client-flatten": true
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "Represents the activity on an elastic pool."
   },
   "schemas:58": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "ElasticPoolDatabaseActivityListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/ElasticPoolDatabaseActivityListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:57"
      },
      "description": "The list of elastic pool database activities."
     }
    },
    "required": [
     "value"
    ],
    "description": "Represents the response to a list elastic pool database activity request."
   },
   "schemas:59": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "RecommendedIndexProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/RecommendedIndexProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "action": {
      "readOnly": true,
      "type": "string",
      "enum": [
       "Create",
       "Drop",
       "Rebuild"
      ],
      "description": "The proposed index action. You can create a missing index, drop an unused index, or rebuild an existing index to improve its performance.",
      "x-ms-enum": {
       "name": "RecommendedIndexAction"
      }
     },
     "state": {
      "readOnly": true,
      "enum": [
       "Active",
       "Pending",
       "Executing",
       "Verifying",
       "Pending Revert",
       "Reverting",
       "Reverted",
       "Ignored",
       "Expired",
       "Blocked",
       "Success"
      ],
      "type": "string",
      "description": "The current recommendation state.",
      "x-ms-enum": {
       "name": "RecommendedIndexState"
      }
     },
     "created": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The UTC datetime showing when this resource was created (ISO8601 format)."
     },
     "lastModified": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The UTC datetime of when was this resource last changed (ISO8601 format)."
     },
     "indexType": {
      "readOnly": true,
      "enum": [
       "CLUSTERED",
       "NONCLUSTERED",
       "COLUMNSTORE",
       "CLUSTERED COLUMNSTORE"
      ],
      "type": "string",
      "description": "The type of index (CLUSTERED, NONCLUSTERED, COLUMNSTORE, CLUSTERED COLUMNSTORE)",
      "x-ms-enum": {
       "name": "RecommendedIndexType"
      }
     },
     "schema": {
      "readOnly": true,
      "type": "string",
      "description": "The schema where table to build index over resides"
     },
     "table": {
      "readOnly": true,
      "type": "string",
      "description": "The table on which to build index."
     },
     "columns": {
      "readOnly": true,
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "Columns over which to build index"
     },
     "includedColumns": {
      "readOnly": true,
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "The list of column names to be included in the index"
     },
     "indexScript": {
      "readOnly": true,
      "type": "string",
      "description": "The full build index script"
     },
     "estimatedImpact": {
      "readOnly": true,
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:66"
      },
      "description": "The estimated impact of doing recommended index action."
     },
     "reportedImpact": {
      "readOnly": true,
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:66"
      },
      "description": "The values reported after index action is complete."
     }
    },
    "description": "Represents the properties of a database recommended index."
   },
   "schemas:60": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "RecommendedIndex",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/RecommendedIndex"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:59",
      "readOnly": true,
      "x-ms-client-flatten": true,
      "description": "The properties representing the resource."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "Represents a database recommended index."
   },
   "schemas:61": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "TransparentDataEncryptionProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/TransparentDataEncryptionProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "status": {
      "type": "string",
      "description": "The status of the database transparent data encryption.",
      "enum": [
       "Enabled",
       "Disabled"
      ],
      "x-ms-enum": {
       "name": "TransparentDataEncryptionStatus"
      }
     }
    },
    "description": "Represents the properties of a database transparent data encryption."
   },
   "schemas:62": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "TransparentDataEncryption",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/TransparentDataEncryption"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "location": {
      "type": "string",
      "readOnly": true,
      "description": "Resource location."
     },
     "properties": {
      "x-ms-client-flatten": true,
      "$ref": "#/components/schemas/schemas:61",
      "description": "Represents the properties of the resource."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "Represents a database transparent data encryption configuration."
   },
   "schemas:63": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "ServiceTierAdvisorProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/ServiceTierAdvisorProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "observationPeriodStart": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The observation period start (ISO8601 format)."
     },
     "observationPeriodEnd": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The observation period start (ISO8601 format)."
     },
     "activeTimeRatio": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "The activeTimeRatio for service tier advisor."
     },
     "minDtu": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "Gets or sets minDtu for service tier advisor."
     },
     "avgDtu": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "Gets or sets avgDtu for service tier advisor."
     },
     "maxDtu": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "Gets or sets maxDtu for service tier advisor."
     },
     "maxSizeInGB": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "Gets or sets maxSizeInGB for service tier advisor."
     },
     "serviceLevelObjectiveUsageMetrics": {
      "readOnly": true,
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:65"
      },
      "description": "Gets or sets serviceLevelObjectiveUsageMetrics for the service tier advisor."
     },
     "currentServiceLevelObjective": {
      "readOnly": true,
      "type": "string",
      "description": "Gets or sets currentServiceLevelObjective for service tier advisor."
     },
     "currentServiceLevelObjectiveId": {
      "readOnly": true,
      "type": "string",
      "format": "uuid",
      "description": "Gets or sets currentServiceLevelObjectiveId for service tier advisor."
     },
     "usageBasedRecommendationServiceLevelObjective": {
      "readOnly": true,
      "type": "string",
      "description": "Gets or sets usageBasedRecommendationServiceLevelObjective for service tier advisor."
     },
     "usageBasedRecommendationServiceLevelObjectiveId": {
      "readOnly": true,
      "type": "string",
      "format": "uuid",
      "description": "Gets or sets usageBasedRecommendationServiceLevelObjectiveId for service tier advisor."
     },
     "databaseSizeBasedRecommendationServiceLevelObjective": {
      "readOnly": true,
      "type": "string",
      "description": "Gets or sets databaseSizeBasedRecommendationServiceLevelObjective for service tier advisor."
     },
     "databaseSizeBasedRecommendationServiceLevelObjectiveId": {
      "readOnly": true,
      "type": "string",
      "format": "uuid",
      "description": "Gets or sets databaseSizeBasedRecommendationServiceLevelObjectiveId for service tier advisor."
     },
     "disasterPlanBasedRecommendationServiceLevelObjective": {
      "readOnly": true,
      "type": "string",
      "description": "Gets or sets disasterPlanBasedRecommendationServiceLevelObjective for service tier advisor."
     },
     "disasterPlanBasedRecommendationServiceLevelObjectiveId": {
      "readOnly": true,
      "type": "string",
      "format": "uuid",
      "description": "Gets or sets disasterPlanBasedRecommendationServiceLevelObjectiveId for service tier advisor."
     },
     "overallRecommendationServiceLevelObjective": {
      "readOnly": true,
      "type": "string",
      "description": "Gets or sets overallRecommendationServiceLevelObjective for service tier advisor."
     },
     "overallRecommendationServiceLevelObjectiveId": {
      "readOnly": true,
      "type": "string",
      "format": "uuid",
      "description": "Gets or sets overallRecommendationServiceLevelObjectiveId for service tier advisor."
     },
     "confidence": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "Gets or sets confidence for service tier advisor.",
      "nullable": false
     }
    },
    "description": "Represents the properties of a Service Tier Advisor."
   },
   "schemas:64": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "ServiceTierAdvisor",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/ServiceTierAdvisor"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "properties": {
      "readOnly": true,
      "$ref": "#/components/schemas/schemas:63",
      "description": "The properites representing the resource.",
      "x-ms-client-flatten": true
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "Represents a Service Tier Advisor."
   },
   "schemas:65": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "SloUsageMetric",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/SloUsageMetric"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "serviceLevelObjective": {
      "type": "string",
      "description": "The serviceLevelObjective for SLO usage metric.",
      "enum": [
       "System",
       "System0",
       "System1",
       "System2",
       "System3",
       "System4",
       "System2L",
       "System3L",
       "System4L",
       "Free",
       "Basic",
       "S0",
       "S1",
       "S2",
       "S3",
       "S4",
       "S6",
       "S7",
       "S9",
       "S12",
       "P1",
       "P2",
       "P3",
       "P4",
       "P6",
       "P11",
       "P15",
       "PRS1",
       "PRS2",
       "PRS4",
       "PRS6",
       "DW100",
       "DW200",
       "DW300",
       "DW400",
       "DW500",
       "DW600",
       "DW1000",
       "DW1200",
       "DW1000c",
       "DW1500",
       "DW1500c",
       "DW2000",
       "DW2000c",
       "DW3000",
       "DW2500c",
       "DW3000c",
       "DW6000",
       "DW5000c",
       "DW6000c",
       "DW7500c",
       "DW10000c",
       "DW15000c",
       "DW30000c",
       "DS100",
       "DS200",
       "DS300",
       "DS400",
       "DS500",
       "DS600",
       "DS1000",
       "DS1200",
       "DS1500",
       "DS2000",
       "ElasticPool"
      ],
      "x-ms-enum": {
       "modelAsString": true,
       "name": "ServiceObjectiveName",
       "oldModelAsString": true
      },
      "readOnly": true
     },
     "serviceLevelObjectiveId": {
      "type": "string",
      "format": "uuid",
      "description": "The serviceLevelObjectiveId for SLO usage metric.",
      "readOnly": true,
      "nullable": false
     },
     "inRangeTimeRatio": {
      "type": "number",
      "format": "double",
      "description": "Gets or sets inRangeTimeRatio for SLO usage metric.",
      "readOnly": true,
      "nullable": false
     }
    },
    "description": "A Slo Usage Metric."
   },
   "schemas:66": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "OperationImpact",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/OperationImpact"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "name": {
      "readOnly": true,
      "type": "string",
      "description": "The name of the impact dimension."
     },
     "unit": {
      "readOnly": true,
      "type": "string",
      "description": "The unit in which estimated impact to dimension is measured."
     },
     "changeValueAbsolute": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "The absolute impact to dimension."
     },
     "changeValueRelative": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "The relative impact to dimension (null if not applicable)"
     }
    },
    "description": "The impact of an operation, both in absolute and relative terms."
   },
   "schemas:67": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "ServiceTierAdvisorListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/ServiceTierAdvisorListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:64"
      },
      "description": "The list of service tier advisors for specified database."
     }
    },
    "required": [
     "value"
    ],
    "description": "Represents the response to a list service tier advisor request."
   },
   "schemas:68": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "TransparentDataEncryptionActivityProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/TransparentDataEncryptionActivityProperties"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "status": {
      "readOnly": true,
      "type": "string",
      "description": "The status of the database.",
      "enum": [
       "Encrypting",
       "Decrypting"
      ],
      "x-ms-enum": {
       "name": "TransparentDataEncryptionActivityStatus",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "percentComplete": {
      "readOnly": true,
      "type": "number",
      "format": "float",
      "description": "The percent complete of the transparent data encryption scan for a database."
     }
    },
    "description": "Represents the properties of a database transparent data encryption Scan."
   },
   "schemas:69": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "TransparentDataEncryptionActivity",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/TransparentDataEncryptionActivity"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "location": {
      "type": "string",
      "readOnly": true,
      "description": "Resource location."
     },
     "properties": {
      "x-ms-client-flatten": true,
      "$ref": "#/components/schemas/schemas:68",
      "description": "Represents the properties of the resource."
     }
    },
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "description": "Represents a database transparent data encryption Scan."
   },
   "schemas:70": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "TransparentDataEncryptionActivityListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/schemas/TransparentDataEncryptionActivityListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:69"
      },
      "description": "The list of database transparent data encryption activities."
     }
    },
    "required": [
     "value"
    ],
    "description": "Represents the response to a list database transparent data encryption activity request."
   },
   "schemas:71": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///859?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fusages.json"
     ],
     "name": "ServerUsage",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/usages.json#/components/schemas/ServerUsage"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "name": {
      "readOnly": true,
      "type": "string",
      "description": "Name of the server usage metric."
     },
     "resourceName": {
      "readOnly": true,
      "type": "string",
      "description": "The name of the resource."
     },
     "displayName": {
      "readOnly": true,
      "type": "string",
      "description": "The metric display name."
     },
     "currentValue": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "The current value of the metric."
     },
     "limit": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "The current limit of the metric."
     },
     "unit": {
      "readOnly": true,
      "type": "string",
      "description": "The units of the metric."
     },
     "nextResetTime": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The next reset time for the metric (ISO8601 format)."
     }
    },
    "description": "Represents server metrics."
   },
   "schemas:72": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///859?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fusages.json"
     ],
     "name": "ServerUsageListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/usages.json#/components/schemas/ServerUsageListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:71"
      },
      "description": "The list of server metrics for the server."
     }
    },
    "required": [
     "value"
    ],
    "description": "Represents the response to a list server metrics request."
   },
   "schemas:73": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///859?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fusages.json"
     ],
     "name": "DatabaseUsage",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/usages.json#/components/schemas/DatabaseUsage"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "name": {
      "readOnly": true,
      "type": "string",
      "description": "The name of the usage metric."
     },
     "resourceName": {
      "readOnly": true,
      "type": "string",
      "description": "The name of the resource."
     },
     "displayName": {
      "readOnly": true,
      "type": "string",
      "description": "The usage metric display name."
     },
     "currentValue": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "The current value of the usage metric."
     },
     "limit": {
      "readOnly": true,
      "type": "number",
      "format": "double",
      "description": "The current limit of the usage metric."
     },
     "unit": {
      "readOnly": true,
      "type": "string",
      "description": "The units of the usage metric."
     },
     "nextResetTime": {
      "readOnly": true,
      "type": "string",
      "format": "date-time",
      "description": "The next reset time for the usage metric (ISO8601 format)."
     }
    },
    "description": "The database usages."
   },
   "schemas:74": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///859?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fusages.json"
     ],
     "name": "DatabaseUsageListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/usages.json#/components/schemas/DatabaseUsageListResult"
     ],
     "x-ms-secondary-file": false
    },
    "properties": {
     "value": {
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:73"
      },
      "description": "The list of database usages for the database."
     }
    },
    "required": [
     "value"
    ],
    "description": "The response to a list database metrics request."
   },
   "schemas:75": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///860?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FdatabaseAutomaticTuning.json"
     ],
     "name": "DatabaseAutomaticTuningProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/databaseAutomaticTuning.json#/components/schemas/DatabaseAutomaticTuningProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Database-level Automatic Tuning properties.",
    "type": "object",
    "properties": {
     "desiredState": {
      "description": "Automatic tuning desired state.",
      "enum": [
       "Inherit",
       "Custom",
       "Auto",
       "Unspecified"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "AutomaticTuningMode",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "actualState": {
      "description": "Automatic tuning actual state.",
      "enum": [
       "Inherit",
       "Custom",
       "Auto",
       "Unspecified"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "AutomaticTuningMode",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "options": {
      "description": "Automatic tuning options definition.",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/components/schemas/schemas:76"
      }
     }
    }
   },
   "schemas:76": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///860?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FdatabaseAutomaticTuning.json"
     ],
     "name": "AutomaticTuningOptions",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/databaseAutomaticTuning.json#/components/schemas/AutomaticTuningOptions"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Automatic tuning properties for individual advisors.",
    "type": "object",
    "properties": {
     "desiredState": {
      "description": "Automatic tuning option desired state.",
      "enum": [
       "Off",
       "On",
       "Default"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "AutomaticTuningOptionModeDesired",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "actualState": {
      "description": "Automatic tuning option actual state.",
      "enum": [
       "Off",
       "On"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "AutomaticTuningOptionModeActual",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "reasonCode": {
      "format": "int32",
      "description": "Reason code if desired and actual state are different.",
      "type": "integer",
      "readOnly": true
     },
     "reasonDesc": {
      "description": "Reason description if desired and actual state are different.",
      "enum": [
       "Default",
       "Disabled",
       "AutoConfigured",
       "InheritedFromServer",
       "QueryStoreOff",
       "QueryStoreReadOnly",
       "NotSupported"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "AutomaticTuningDisabledReason",
       "modelAsString": false,
       "oldModelAsString": false
      }
     }
    }
   },
   "schemas:77": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///860?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FdatabaseAutomaticTuning.json"
     ],
     "name": "DatabaseAutomaticTuning",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/databaseAutomaticTuning.json#/components/schemas/DatabaseAutomaticTuning"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Database-level Automatic Tuning.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:75",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:78": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///861?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FencryptionProtectors.json"
     ],
     "name": "EncryptionProtectorListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/encryptionProtectors.json#/components/schemas/EncryptionProtectorListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of server encryption protectors.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:80"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:79": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///861?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FencryptionProtectors.json"
     ],
     "name": "EncryptionProtectorProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/encryptionProtectors.json#/components/schemas/EncryptionProtectorProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties for an encryption protector execution.",
    "required": [
     "serverKeyType"
    ],
    "type": "object",
    "properties": {
     "subregion": {
      "description": "Subregion of the encryption protector.",
      "type": "string",
      "readOnly": true
     },
     "serverKeyName": {
      "description": "The name of the server key.",
      "type": "string"
     },
     "serverKeyType": {
      "description": "The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.",
      "enum": [
       "ServiceManaged",
       "AzureKeyVault"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "ServerKeyType",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "uri": {
      "description": "The URI of the server key.",
      "type": "string",
      "readOnly": true
     },
     "thumbprint": {
      "description": "Thumbprint of the server key.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:80": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///861?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FencryptionProtectors.json"
     ],
     "name": "EncryptionProtector",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/encryptionProtectors.json#/components/schemas/EncryptionProtector"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The server encryption protector.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "kind": {
      "description": "Kind of encryption protector. This is metadata used for the Azure portal experience.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string",
      "readOnly": true
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:79",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:81": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
     ],
     "name": "FailoverGroupProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/components/schemas/FailoverGroupProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a failover group.",
    "required": [
     "readWriteEndpoint",
     "partnerServers"
    ],
    "type": "object",
    "properties": {
     "readWriteEndpoint": {
      "$ref": "#/components/schemas/schemas:82",
      "description": "Read-write endpoint of the failover group instance."
     },
     "readOnlyEndpoint": {
      "$ref": "#/components/schemas/schemas:83",
      "description": "Read-only endpoint of the failover group instance."
     },
     "replicationRole": {
      "description": "Local replication role of the failover group instance.",
      "enum": [
       "Primary",
       "Secondary"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "FailoverGroupReplicationRole",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "replicationState": {
      "description": "Replication state of the failover group instance.",
      "type": "string",
      "readOnly": true
     },
     "partnerServers": {
      "description": "List of partner server information for the failover group.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:84"
      },
      "x-ms-mutability": [
       "read",
       "create"
      ]
     },
     "databases": {
      "description": "List of databases in the failover group.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "schemas:82": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
     ],
     "name": "FailoverGroupReadWriteEndpoint",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/components/schemas/FailoverGroupReadWriteEndpoint"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Read-write endpoint of the failover group instance.",
    "required": [
     "failoverPolicy"
    ],
    "type": "object",
    "properties": {
     "failoverPolicy": {
      "description": "Failover policy of the read-write endpoint for the failover group. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required.",
      "enum": [
       "Manual",
       "Automatic"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "ReadWriteEndpointFailoverPolicy",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "failoverWithDataLossGracePeriodMinutes": {
      "format": "int32",
      "description": "Grace period before failover with data loss is attempted for the read-write endpoint. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required.",
      "type": "integer"
     }
    }
   },
   "schemas:83": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
     ],
     "name": "FailoverGroupReadOnlyEndpoint",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/components/schemas/FailoverGroupReadOnlyEndpoint"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Read-only endpoint of the failover group instance.",
    "type": "object",
    "properties": {
     "failoverPolicy": {
      "description": "Failover policy of the read-only endpoint for the failover group.",
      "enum": [
       "Disabled",
       "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "ReadOnlyEndpointFailoverPolicy",
       "modelAsString": true,
       "oldModelAsString": true
      }
     }
    }
   },
   "schemas:84": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
     ],
     "name": "PartnerInfo",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/components/schemas/PartnerInfo"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Partner server information for the failover group.",
    "required": [
     "id"
    ],
    "type": "object",
    "properties": {
     "id": {
      "description": "Resource identifier of the partner server.",
      "type": "string"
     },
     "location": {
      "description": "Geo location of the partner server.",
      "type": "string",
      "readOnly": true
     },
     "replicationRole": {
      "description": "Replication role of the partner server.",
      "enum": [
       "Primary",
       "Secondary"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "FailoverGroupReplicationRole",
       "modelAsString": true,
       "oldModelAsString": true
      }
     }
    }
   },
   "schemas:85": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
     ],
     "name": "FailoverGroup",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/components/schemas/FailoverGroup"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A failover group.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "location": {
      "description": "Resource location.",
      "type": "string",
      "readOnly": true
     },
     "tags": {
      "description": "Resource tags.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:81",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:86": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
     ],
     "name": "FailoverGroupUpdate",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/components/schemas/FailoverGroupUpdate"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A failover group update request.",
    "type": "object",
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:87",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     },
     "tags": {
      "description": "Resource tags.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    }
   },
   "schemas:87": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
     ],
     "name": "FailoverGroupUpdateProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/components/schemas/FailoverGroupUpdateProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a failover group update.",
    "type": "object",
    "properties": {
     "readWriteEndpoint": {
      "$ref": "#/components/schemas/schemas:82",
      "description": "Read-write endpoint of the failover group instance."
     },
     "readOnlyEndpoint": {
      "$ref": "#/components/schemas/schemas:83",
      "description": "Read-only endpoint of the failover group instance."
     },
     "databases": {
      "description": "List of databases in the failover group.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "schemas:88": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
     ],
     "name": "FailoverGroupListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/components/schemas/FailoverGroupListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of failover groups.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:85"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:89": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
     ],
     "name": "ManagedInstanceListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/components/schemas/ManagedInstanceListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of managed instances.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:91"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:90": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
     ],
     "name": "ManagedInstanceProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/components/schemas/ManagedInstanceProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The properties of a managed instance.",
    "type": "object",
    "properties": {
     "fullyQualifiedDomainName": {
      "description": "The fully qualified domain name of the managed instance.",
      "type": "string",
      "readOnly": true
     },
     "administratorLogin": {
      "description": "Administrator username for the managed instance. Can only be specified when the managed instance is being created (and is required for creation).",
      "type": "string",
      "x-ms-mutability": [
       "read",
       "create"
      ]
     },
     "administratorLoginPassword": {
      "description": "The administrator login password (required for managed instance creation).",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     },
     "subnetId": {
      "description": "Subnet resource ID for the managed instance.",
      "type": "string"
     },
     "state": {
      "description": "The state of the managed instance.",
      "type": "string",
      "readOnly": true
     },
     "licenseType": {
      "description": "The license type. Possible values are 'LicenseIncluded' and 'BasePrice'.",
      "type": "string"
     },
     "vCores": {
      "format": "int32",
      "description": "The number of VCores.",
      "type": "integer"
     },
     "storageSizeInGB": {
      "format": "int32",
      "description": "The maximum storage size in GB.",
      "type": "integer"
     },
     "collation": {
      "description": "Collation of the managed instance.",
      "type": "string",
      "readOnly": true
     },
     "dnsZone": {
      "description": "The Dns Zone that the managed instance is in.",
      "type": "string",
      "readOnly": true
     },
     "dnsZonePartner": {
      "description": "The resource id of another managed instance whose DNS zone this managed instance will share after creation.",
      "type": "string",
      "x-ms-mutability": [
       "create"
      ]
     }
    }
   },
   "schemas:91": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
     ],
     "name": "ManagedInstance",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/components/schemas/ManagedInstance"
     ],
     "x-ms-secondary-file": false
    },
    "description": "An Azure SQL managed instance.",
    "required": [
     "location"
    ],
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:278"
     }
    ],
    "properties": {
     "identity": {
      "$ref": "#/components/schemas/schemas:280",
      "description": "The Azure Active Directory identity of the managed instance.",
      "x-ms-mutability": [
       "read",
       "create"
      ]
     },
     "sku": {
      "$ref": "#/components/schemas/schemas:279",
      "description": "Managed instance sku"
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:90",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:92": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
     ],
     "name": "ManagedInstanceUpdate",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/components/schemas/ManagedInstanceUpdate"
     ],
     "x-ms-secondary-file": false
    },
    "description": "An update request for an Azure SQL Database managed instance.",
    "type": "object",
    "properties": {
     "sku": {
      "$ref": "#/components/schemas/schemas:279",
      "description": "Managed instance sku"
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:90",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     },
     "tags": {
      "description": "Resource tags.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    }
   },
   "schemas:93": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///864?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Foperations.json"
     ],
     "name": "OperationListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/operations.json#/components/schemas/OperationListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Result of the request to list SQL operations.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:94"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:94": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///864?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Foperations.json"
     ],
     "name": "Operation",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/operations.json#/components/schemas/Operation"
     ],
     "x-ms-secondary-file": false
    },
    "description": "SQL REST API operation definition.",
    "type": "object",
    "properties": {
     "name": {
      "description": "The name of the operation being performed on this particular object.",
      "type": "string",
      "readOnly": true
     },
     "display": {
      "$ref": "#/components/schemas/schemas:95",
      "description": "The localized display information for this particular operation / action.",
      "readOnly": true
     },
     "origin": {
      "description": "The intended executor of the operation.",
      "enum": [
       "user",
       "system"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "OperationOrigin",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "properties": {
      "description": "Additional descriptions for the operation.",
      "type": "object",
      "additionalProperties": {
       "type": "object"
      },
      "readOnly": true,
      "x-ms-client-flatten": false
     }
    }
   },
   "schemas:95": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///864?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Foperations.json"
     ],
     "name": "OperationDisplay",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/operations.json#/components/schemas/OperationDisplay"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Display metadata associated with the operation.",
    "type": "object",
    "properties": {
     "provider": {
      "description": "The localized friendly form of the resource provider name.",
      "type": "string",
      "readOnly": true
     },
     "resource": {
      "description": "The localized friendly form of the resource type related to this action/operation.",
      "type": "string",
      "readOnly": true
     },
     "operation": {
      "description": "The localized friendly name for the operation.",
      "type": "string",
      "readOnly": true
     },
     "description": {
      "description": "The localized friendly description for the operation.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:96": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///865?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FserverKeys.json"
     ],
     "name": "ServerKeyListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/serverKeys.json#/components/schemas/ServerKeyListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of server keys.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:98"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:97": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///865?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FserverKeys.json"
     ],
     "name": "ServerKeyProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/serverKeys.json#/components/schemas/ServerKeyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties for a server key execution.",
    "required": [
     "serverKeyType"
    ],
    "type": "object",
    "properties": {
     "subregion": {
      "description": "Subregion of the server key.",
      "type": "string",
      "readOnly": true
     },
     "serverKeyType": {
      "description": "The server key type like 'ServiceManaged', 'AzureKeyVault'.",
      "enum": [
       "ServiceManaged",
       "AzureKeyVault"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "ServerKeyType",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "uri": {
      "description": "The URI of the server key.",
      "type": "string"
     },
     "thumbprint": {
      "description": "Thumbprint of the server key.",
      "type": "string"
     },
     "creationDate": {
      "format": "date-time",
      "description": "The server key creation date.",
      "type": "string"
     }
    }
   },
   "schemas:98": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///865?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FserverKeys.json"
     ],
     "name": "ServerKey",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/serverKeys.json#/components/schemas/ServerKey"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A server key.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "kind": {
      "description": "Kind of encryption protector. This is metadata used for the Azure portal experience.",
      "type": "string"
     },
     "location": {
      "description": "Resource location.",
      "type": "string",
      "readOnly": true
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:97",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:99": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///866?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fservers.json"
     ],
     "name": "ServerListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/servers.json#/components/schemas/ServerListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of servers.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:101"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:100": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///866?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fservers.json"
     ],
     "name": "ServerProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/servers.json#/components/schemas/ServerProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The properties of a server.",
    "type": "object",
    "properties": {
     "administratorLogin": {
      "description": "Administrator username for the server. Once created it cannot be changed.",
      "type": "string",
      "x-ms-mutability": [
       "read",
       "create"
      ]
     },
     "administratorLoginPassword": {
      "description": "The administrator login password (required for server creation).",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     },
     "version": {
      "description": "The version of the server.",
      "type": "string"
     },
     "state": {
      "description": "The state of the server.",
      "type": "string",
      "readOnly": true
     },
     "fullyQualifiedDomainName": {
      "description": "The fully qualified domain name of the server.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:101": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///866?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fservers.json"
     ],
     "name": "Server",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/servers.json#/components/schemas/Server"
     ],
     "x-ms-secondary-file": false
    },
    "description": "An Azure SQL Database server.",
    "required": [
     "location"
    ],
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:278"
     }
    ],
    "properties": {
     "identity": {
      "$ref": "#/components/schemas/schemas:280",
      "description": "The Azure Active Directory identity of the server.",
      "x-ms-mutability": [
       "read",
       "create"
      ]
     },
     "kind": {
      "description": "Kind of sql server. This is metadata used for the Azure portal experience.",
      "type": "string",
      "readOnly": true
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:100",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:102": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///866?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fservers.json"
     ],
     "name": "ServerUpdate",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/servers.json#/components/schemas/ServerUpdate"
     ],
     "x-ms-secondary-file": false
    },
    "description": "An update request for an Azure SQL Database server.",
    "type": "object",
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:100",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     },
     "tags": {
      "description": "Resource tags.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    }
   },
   "schemas:103": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///867?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncAgents.json"
     ],
     "name": "SyncAgentProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncAgents.json#/components/schemas/SyncAgentProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of an Azure SQL Database sync agent.",
    "type": "object",
    "properties": {
     "name": {
      "description": "Name of the sync agent.",
      "type": "string",
      "readOnly": true
     },
     "syncDatabaseId": {
      "description": "ARM resource id of the sync database in the sync agent.",
      "type": "string"
     },
     "lastAliveTime": {
      "format": "date-time",
      "description": "Last alive time of the sync agent.",
      "type": "string",
      "readOnly": true
     },
     "state": {
      "description": "State of the sync agent.",
      "enum": [
       "Online",
       "Offline",
       "NeverConnected"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "SyncAgentState",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "isUpToDate": {
      "description": "If the sync agent version is up to date.",
      "type": "boolean",
      "readOnly": true
     },
     "expiryTime": {
      "format": "date-time",
      "description": "Expiration time of the sync agent version.",
      "type": "string",
      "readOnly": true
     },
     "version": {
      "description": "Version of the sync agent.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:104": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///867?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncAgents.json"
     ],
     "name": "SyncAgent",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncAgents.json#/components/schemas/SyncAgent"
     ],
     "x-ms-secondary-file": false
    },
    "description": "An Azure SQL Database sync agent.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:103",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:105": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///867?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncAgents.json"
     ],
     "name": "SyncAgentListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncAgents.json#/components/schemas/SyncAgentListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of sync agents.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:104"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:106": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///867?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncAgents.json"
     ],
     "name": "SyncAgentKeyProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncAgents.json#/components/schemas/SyncAgentKeyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of an Azure SQL Database sync agent key.",
    "type": "object",
    "properties": {
     "syncAgentKey": {
      "description": "Key of sync agent.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:107": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///867?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncAgents.json"
     ],
     "name": "SyncAgentLinkedDatabaseListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncAgents.json#/components/schemas/SyncAgentLinkedDatabaseListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of sync agent linked databases.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:109"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:108": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///867?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncAgents.json"
     ],
     "name": "SyncAgentLinkedDatabaseProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncAgents.json#/components/schemas/SyncAgentLinkedDatabaseProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of an Azure SQL Database sync agent linked database.",
    "type": "object",
    "properties": {
     "databaseType": {
      "description": "Type of the sync agent linked database.",
      "enum": [
       "AzureSqlDatabase",
       "SqlServerDatabase"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "SyncMemberDbType",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "databaseId": {
      "description": "Id of the sync agent linked database.",
      "type": "string",
      "readOnly": true
     },
     "description": {
      "description": "Description of the sync agent linked database.",
      "type": "string",
      "readOnly": true
     },
     "serverName": {
      "description": "Server name of the sync agent linked database.",
      "type": "string",
      "readOnly": true
     },
     "databaseName": {
      "description": "Database name of the sync agent linked database.",
      "type": "string",
      "readOnly": true
     },
     "userName": {
      "description": "User name of the sync agent linked database.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:109": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///867?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncAgents.json"
     ],
     "name": "SyncAgentLinkedDatabase",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncAgents.json#/components/schemas/SyncAgentLinkedDatabase"
     ],
     "x-ms-secondary-file": false
    },
    "description": "An Azure SQL Database sync agent linked database.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:108",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:110": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "SyncDatabaseIdListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/schemas/SyncDatabaseIdListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of sync database ID properties.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:111"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:111": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "SyncDatabaseIdProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/schemas/SyncDatabaseIdProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of the sync database id.",
    "type": "object",
    "properties": {
     "id": {
      "description": "ARM resource id of sync database.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:112": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "SyncFullSchemaPropertiesListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/schemas/SyncFullSchemaPropertiesListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of sync schema properties.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:113"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:113": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "SyncFullSchemaProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/schemas/SyncFullSchemaProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of the database full schema.",
    "type": "object",
    "properties": {
     "tables": {
      "description": "List of tables in the database full schema.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:114"
      },
      "readOnly": true
     },
     "lastUpdateTime": {
      "format": "date-time",
      "description": "Last update time of the database schema.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:114": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "SyncFullSchemaTable",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/schemas/SyncFullSchemaTable"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of the table in the database full schema.",
    "type": "object",
    "properties": {
     "columns": {
      "description": "List of columns in the table of database full schema.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:115"
      },
      "readOnly": true
     },
     "errorId": {
      "description": "Error id of the table.",
      "type": "string",
      "readOnly": true
     },
     "hasError": {
      "description": "If there is error in the table.",
      "type": "boolean",
      "readOnly": true
     },
     "name": {
      "description": "Name of the table.",
      "type": "string",
      "readOnly": true
     },
     "quotedName": {
      "description": "Quoted name of the table.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:115": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "SyncFullSchemaTableColumn",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/schemas/SyncFullSchemaTableColumn"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of the column in the table of database full schema.",
    "type": "object",
    "properties": {
     "dataSize": {
      "description": "Data size of the column.",
      "type": "string",
      "readOnly": true
     },
     "dataType": {
      "description": "Data type of the column.",
      "type": "string",
      "readOnly": true
     },
     "errorId": {
      "description": "Error id of the column.",
      "type": "string",
      "readOnly": true
     },
     "hasError": {
      "description": "If there is error in the table.",
      "type": "boolean",
      "readOnly": true
     },
     "isPrimaryKey": {
      "description": "If it is the primary key of the table.",
      "type": "boolean",
      "readOnly": true
     },
     "name": {
      "description": "Name of the column.",
      "type": "string",
      "readOnly": true
     },
     "quotedName": {
      "description": "Quoted name of the column.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:116": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "SyncGroupLogListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/schemas/SyncGroupLogListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of sync group log properties.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:117"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:117": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "SyncGroupLogProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/schemas/SyncGroupLogProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of an Azure SQL Database sync group log.",
    "type": "object",
    "properties": {
     "timestamp": {
      "format": "date-time",
      "description": "Timestamp of the sync group log.",
      "type": "string",
      "readOnly": true
     },
     "type": {
      "description": "Type of the sync group log.",
      "enum": [
       "All",
       "Error",
       "Warning",
       "Success"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "SyncGroupLogType",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "source": {
      "description": "Source of the sync group log.",
      "type": "string",
      "readOnly": true
     },
     "details": {
      "description": "Details of the sync group log.",
      "type": "string",
      "readOnly": true
     },
     "tracingId": {
      "format": "uuid",
      "description": "TracingId of the sync group log.",
      "type": "string",
      "readOnly": true
     },
     "operationStatus": {
      "description": "OperationStatus of the sync group log.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:118": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "SyncGroupProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/schemas/SyncGroupProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a sync group.",
    "type": "object",
    "properties": {
     "interval": {
      "format": "int32",
      "description": "Sync interval of the sync group.",
      "type": "integer"
     },
     "lastSyncTime": {
      "format": "date-time",
      "description": "Last sync time of the sync group.",
      "type": "string",
      "readOnly": true
     },
     "conflictResolutionPolicy": {
      "description": "Conflict resolution policy of the sync group.",
      "enum": [
       "HubWin",
       "MemberWin"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "SyncConflictResolutionPolicy",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "syncDatabaseId": {
      "description": "ARM resource id of the sync database in the sync group.",
      "type": "string"
     },
     "hubDatabaseUserName": {
      "description": "User name for the sync group hub database credential.",
      "type": "string"
     },
     "hubDatabasePassword": {
      "description": "Password for the sync group hub database credential.",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     },
     "syncState": {
      "description": "Sync state of the sync group.",
      "enum": [
       "NotReady",
       "Error",
       "Warning",
       "Progressing",
       "Good"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "SyncGroupState",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "schema": {
      "$ref": "#/components/schemas/schemas:119",
      "description": "Sync schema of the sync group."
     }
    }
   },
   "schemas:119": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "SyncGroupSchema",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/schemas/SyncGroupSchema"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of sync group schema.",
    "type": "object",
    "properties": {
     "tables": {
      "description": "List of tables in sync group schema.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:120"
      }
     },
     "masterSyncMemberName": {
      "description": "Name of master sync member where the schema is from.",
      "type": "string"
     }
    }
   },
   "schemas:120": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "SyncGroupSchemaTable",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/schemas/SyncGroupSchemaTable"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of table in sync group schema.",
    "type": "object",
    "properties": {
     "columns": {
      "description": "List of columns in sync group schema.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:121"
      }
     },
     "quotedName": {
      "description": "Quoted name of sync group schema table.",
      "type": "string"
     }
    }
   },
   "schemas:121": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "SyncGroupSchemaTableColumn",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/schemas/SyncGroupSchemaTableColumn"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of column in sync group table.",
    "type": "object",
    "properties": {
     "quotedName": {
      "description": "Quoted name of sync group table column.",
      "type": "string"
     },
     "dataSize": {
      "description": "Data size of the column.",
      "type": "string"
     },
     "dataType": {
      "description": "Data type of the column.",
      "type": "string"
     }
    }
   },
   "schemas:122": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "SyncGroup",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/schemas/SyncGroup"
     ],
     "x-ms-secondary-file": false
    },
    "description": "An Azure SQL Database sync group.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:118",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:123": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "SyncGroupListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/schemas/SyncGroupListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of sync groups.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:122"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:124": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///869?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncMembers.json"
     ],
     "name": "SyncMemberProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncMembers.json#/components/schemas/SyncMemberProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a sync member.",
    "type": "object",
    "properties": {
     "databaseType": {
      "description": "Database type of the sync member.",
      "enum": [
       "AzureSqlDatabase",
       "SqlServerDatabase"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "SyncMemberDbType",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "syncAgentId": {
      "description": "ARM resource id of the sync agent in the sync member.",
      "type": "string"
     },
     "sqlServerDatabaseId": {
      "format": "uuid",
      "description": "SQL Server database id of the sync member.",
      "type": "string"
     },
     "serverName": {
      "description": "Server name of the member database in the sync member",
      "type": "string"
     },
     "databaseName": {
      "description": "Database name of the member database in the sync member.",
      "type": "string"
     },
     "userName": {
      "description": "User name of the member database in the sync member.",
      "type": "string"
     },
     "password": {
      "description": "Password of the member database in the sync member.",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     },
     "syncDirection": {
      "description": "Sync direction of the sync member.",
      "enum": [
       "Bidirectional",
       "OneWayMemberToHub",
       "OneWayHubToMember"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "SyncDirection",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "syncState": {
      "description": "Sync state of the sync member.",
      "enum": [
       "SyncInProgress",
       "SyncSucceeded",
       "SyncFailed",
       "DisabledTombstoneCleanup",
       "DisabledBackupRestore",
       "SyncSucceededWithWarnings",
       "SyncCancelling",
       "SyncCancelled",
       "UnProvisioned",
       "Provisioning",
       "Provisioned",
       "ProvisionFailed",
       "DeProvisioning",
       "DeProvisioned",
       "DeProvisionFailed",
       "Reprovisioning",
       "ReprovisionFailed",
       "UnReprovisioned"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "SyncMemberState",
       "modelAsString": true,
       "oldModelAsString": true
      }
     }
    }
   },
   "schemas:125": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///869?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncMembers.json"
     ],
     "name": "SyncMember",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncMembers.json#/components/schemas/SyncMember"
     ],
     "x-ms-secondary-file": false
    },
    "description": "An Azure SQL Database sync member.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:124",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:126": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///869?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncMembers.json"
     ],
     "name": "SyncMemberListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncMembers.json#/components/schemas/SyncMemberListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of Azure SQL Database sync members.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:125"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:127": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///869?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncMembers.json"
     ],
     "name": "SyncFullSchemaPropertiesListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncMembers.json#/components/schemas/SyncFullSchemaPropertiesListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of sync schema properties.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:128"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:128": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///869?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncMembers.json"
     ],
     "name": "SyncFullSchemaProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncMembers.json#/components/schemas/SyncFullSchemaProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of the database full schema.",
    "type": "object",
    "properties": {
     "tables": {
      "description": "List of tables in the database full schema.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:129"
      },
      "readOnly": true
     },
     "lastUpdateTime": {
      "format": "date-time",
      "description": "Last update time of the database schema.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:129": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///869?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncMembers.json"
     ],
     "name": "SyncFullSchemaTable",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncMembers.json#/components/schemas/SyncFullSchemaTable"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of the table in the database full schema.",
    "type": "object",
    "properties": {
     "columns": {
      "description": "List of columns in the table of database full schema.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:130"
      },
      "readOnly": true
     },
     "errorId": {
      "description": "Error id of the table.",
      "type": "string",
      "readOnly": true
     },
     "hasError": {
      "description": "If there is error in the table.",
      "type": "boolean",
      "readOnly": true
     },
     "name": {
      "description": "Name of the table.",
      "type": "string",
      "readOnly": true
     },
     "quotedName": {
      "description": "Quoted name of the table.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:130": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///869?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncMembers.json"
     ],
     "name": "SyncFullSchemaTableColumn",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncMembers.json#/components/schemas/SyncFullSchemaTableColumn"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of the column in the table of database full schema.",
    "type": "object",
    "properties": {
     "dataSize": {
      "description": "Data size of the column.",
      "type": "string",
      "readOnly": true
     },
     "dataType": {
      "description": "Data type of the column.",
      "type": "string",
      "readOnly": true
     },
     "errorId": {
      "description": "Error id of the column.",
      "type": "string",
      "readOnly": true
     },
     "hasError": {
      "description": "If there is error in the table.",
      "type": "boolean",
      "readOnly": true
     },
     "isPrimaryKey": {
      "description": "If it is the primary key of the table.",
      "type": "boolean",
      "readOnly": true
     },
     "name": {
      "description": "Name of the column.",
      "type": "string",
      "readOnly": true
     },
     "quotedName": {
      "description": "Quoted name of the column.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:131": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///870?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fusages.json"
     ],
     "name": "SubscriptionUsageListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/usages.json#/components/schemas/SubscriptionUsageListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of subscription usage metrics in a location.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:133"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:132": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///870?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fusages.json"
     ],
     "name": "SubscriptionUsageProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/usages.json#/components/schemas/SubscriptionUsageProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a subscription usage.",
    "type": "object",
    "properties": {
     "displayName": {
      "description": "User-readable name of the metric.",
      "type": "string",
      "readOnly": true
     },
     "currentValue": {
      "format": "double",
      "description": "Current value of the metric.",
      "type": "number",
      "readOnly": true
     },
     "limit": {
      "format": "double",
      "description": "Boundary value of the metric.",
      "type": "number",
      "readOnly": true
     },
     "unit": {
      "description": "Unit of the metric.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:133": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///870?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fusages.json"
     ],
     "name": "SubscriptionUsage",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/usages.json#/components/schemas/SubscriptionUsage"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Usage Metric of a Subscription in a Location.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:132",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:134": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///871?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FvirtualNetworkRules.json"
     ],
     "name": "VirtualNetworkRuleProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/virtualNetworkRules.json#/components/schemas/VirtualNetworkRuleProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a virtual network rule.",
    "required": [
     "virtualNetworkSubnetId"
    ],
    "type": "object",
    "properties": {
     "virtualNetworkSubnetId": {
      "description": "The ARM resource id of the virtual network subnet.",
      "type": "string"
     },
     "ignoreMissingVnetServiceEndpoint": {
      "description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
      "type": "boolean"
     },
     "state": {
      "description": "Virtual Network Rule State",
      "enum": [
       "Initializing",
       "InProgress",
       "Ready",
       "Deleting",
       "Unknown"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "VirtualNetworkRuleState",
       "modelAsString": true,
       "oldModelAsString": true
      }
     }
    }
   },
   "schemas:135": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///871?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FvirtualNetworkRules.json"
     ],
     "name": "VirtualNetworkRule",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/virtualNetworkRules.json#/components/schemas/VirtualNetworkRule"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A virtual network rule.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:134",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:136": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///871?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FvirtualNetworkRules.json"
     ],
     "name": "VirtualNetworkRuleListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/virtualNetworkRules.json#/components/schemas/VirtualNetworkRuleListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of virtual network rules.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:135"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:137": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "ExtendedDatabaseBlobAuditingPolicyProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/schemas/ExtendedDatabaseBlobAuditingPolicyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of an extended database blob auditing policy.",
    "required": [
     "state"
    ],
    "type": "object",
    "properties": {
     "predicateExpression": {
      "description": "Specifies condition of where clause when creating an audit.",
      "type": "string"
     },
     "state": {
      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required.",
      "enum": [
       "Enabled",
       "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "BlobAuditingPolicyState",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "storageEndpoint": {
      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required.",
      "type": "string"
     },
     "storageAccountAccessKey": {
      "description": "Specifies the identifier key of the auditing storage account. If state is Enabled, storageAccountAccessKey is required.",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     },
     "retentionDays": {
      "format": "int32",
      "description": "Specifies the number of days to keep in the audit logs.",
      "type": "integer"
     },
     "auditActionsAndGroups": {
      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n<action> ON <object> BY <principal>\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::<db_name> and SCHEMA::<schema_name> are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "storageAccountSubscriptionId": {
      "format": "uuid",
      "description": "Specifies the blob storage subscription Id.",
      "type": "string"
     },
     "isStorageSecondaryKeyInUse": {
      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
      "type": "boolean"
     }
    }
   },
   "schemas:138": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "Resource",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/schemas/Resource"
     ],
     "x-ms-secondary-file": false
    },
    "description": "ARM resource.",
    "type": "object",
    "properties": {
     "id": {
      "description": "Resource ID.",
      "type": "string",
      "readOnly": true
     },
     "name": {
      "description": "Resource name.",
      "type": "string",
      "readOnly": true
     },
     "type": {
      "description": "Resource type.",
      "type": "string",
      "readOnly": true
     }
    },
    "x-ms-azure-resource": true
   },
   "schemas:139": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "ProxyResource",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/schemas/ProxyResource"
     ],
     "x-ms-secondary-file": false
    },
    "description": "ARM proxy resource.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:138"
     }
    ],
    "properties": {}
   },
   "schemas:140": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "ExtendedDatabaseBlobAuditingPolicy",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/schemas/ExtendedDatabaseBlobAuditingPolicy"
     ],
     "x-ms-secondary-file": false
    },
    "description": "An extended database blob auditing policy.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:139"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:137",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:141": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "ExtendedServerBlobAuditingPolicyProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/schemas/ExtendedServerBlobAuditingPolicyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of an extended server blob auditing policy.",
    "required": [
     "state"
    ],
    "type": "object",
    "properties": {
     "predicateExpression": {
      "description": "Specifies condition of where clause when creating an audit.",
      "type": "string"
     },
     "state": {
      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required.",
      "enum": [
       "Enabled",
       "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "BlobAuditingPolicyState",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "storageEndpoint": {
      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required.",
      "type": "string"
     },
     "storageAccountAccessKey": {
      "description": "Specifies the identifier key of the auditing storage account. If state is Enabled, storageAccountAccessKey is required.",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     },
     "retentionDays": {
      "format": "int32",
      "description": "Specifies the number of days to keep in the audit logs.",
      "type": "integer"
     },
     "auditActionsAndGroups": {
      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n<action> ON <object> BY <principal>\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::<db_name> and SCHEMA::<schema_name> are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "storageAccountSubscriptionId": {
      "format": "uuid",
      "description": "Specifies the blob storage subscription Id.",
      "type": "string"
     },
     "isStorageSecondaryKeyInUse": {
      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
      "type": "boolean"
     }
    }
   },
   "schemas:142": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "ExtendedServerBlobAuditingPolicy",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/schemas/ExtendedServerBlobAuditingPolicy"
     ],
     "x-ms-secondary-file": false
    },
    "description": "An extended server blob auditing policy.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:139"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:141",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:143": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "ServerBlobAuditingPolicyProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/schemas/ServerBlobAuditingPolicyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a server blob auditing policy.",
    "required": [
     "state"
    ],
    "type": "object",
    "properties": {
     "state": {
      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required.",
      "enum": [
       "Enabled",
       "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "BlobAuditingPolicyState",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "storageEndpoint": {
      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required.",
      "type": "string"
     },
     "storageAccountAccessKey": {
      "description": "Specifies the identifier key of the auditing storage account. If state is Enabled, storageAccountAccessKey is required.",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     },
     "retentionDays": {
      "format": "int32",
      "description": "Specifies the number of days to keep in the audit logs.",
      "type": "integer"
     },
     "auditActionsAndGroups": {
      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n<action> ON <object> BY <principal>\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::<db_name> and SCHEMA::<schema_name> are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "storageAccountSubscriptionId": {
      "format": "uuid",
      "description": "Specifies the blob storage subscription Id.",
      "type": "string"
     },
     "isStorageSecondaryKeyInUse": {
      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
      "type": "boolean"
     }
    }
   },
   "schemas:144": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "ServerBlobAuditingPolicy",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/schemas/ServerBlobAuditingPolicy"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A server blob auditing policy.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:139"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:143",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:145": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "DatabaseBlobAuditingPolicyProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/schemas/DatabaseBlobAuditingPolicyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a database blob auditing policy.",
    "required": [
     "state"
    ],
    "type": "object",
    "properties": {
     "state": {
      "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required.",
      "enum": [
       "Enabled",
       "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "BlobAuditingPolicyState",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "storageEndpoint": {
      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required.",
      "type": "string"
     },
     "storageAccountAccessKey": {
      "description": "Specifies the identifier key of the auditing storage account. If state is Enabled, storageAccountAccessKey is required.",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     },
     "retentionDays": {
      "format": "int32",
      "description": "Specifies the number of days to keep in the audit logs.",
      "type": "integer"
     },
     "auditActionsAndGroups": {
      "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n<action> ON <object> BY <principal>\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::<db_name> and SCHEMA::<schema_name> are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "storageAccountSubscriptionId": {
      "format": "uuid",
      "description": "Specifies the blob storage subscription Id.",
      "type": "string"
     },
     "isStorageSecondaryKeyInUse": {
      "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
      "type": "boolean"
     }
    }
   },
   "schemas:146": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "DatabaseBlobAuditingPolicy",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/schemas/DatabaseBlobAuditingPolicy"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A database blob auditing policy.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:139"
     }
    ],
    "properties": {
     "kind": {
      "description": "Resource kind.",
      "type": "string",
      "readOnly": true
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:145",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:147": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///873?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessmentBaselines.json"
     ],
     "name": "DatabaseVulnerabilityAssessmentRuleBaselineProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessmentBaselines.json#/components/schemas/DatabaseVulnerabilityAssessmentRuleBaselineProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a database Vulnerability Assessment rule baseline.",
    "required": [
     "baselineResults"
    ],
    "type": "object",
    "properties": {
     "baselineResults": {
      "description": "The rule baseline result",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:148"
      }
     }
    }
   },
   "schemas:148": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///873?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessmentBaselines.json"
     ],
     "name": "DatabaseVulnerabilityAssessmentRuleBaselineItem",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessmentBaselines.json#/components/schemas/DatabaseVulnerabilityAssessmentRuleBaselineItem"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result.",
    "required": [
     "result"
    ],
    "type": "object",
    "properties": {
     "result": {
      "description": "The rule baseline result",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "schemas:149": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///873?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessmentBaselines.json"
     ],
     "name": "DatabaseVulnerabilityAssessmentRuleBaseline",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessmentBaselines.json#/components/schemas/DatabaseVulnerabilityAssessmentRuleBaseline"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A database vulnerability assessment rule baseline.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:147",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:150": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///874?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessments.json"
     ],
     "name": "DatabaseVulnerabilityAssessmentProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessments.json#/components/schemas/DatabaseVulnerabilityAssessmentProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a database Vulnerability Assessment.",
    "required": [
     "storageContainerPath"
    ],
    "type": "object",
    "properties": {
     "storageContainerPath": {
      "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     },
     "storageContainerSasKey": {
      "description": "A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     },
     "storageAccountAccessKey": {
      "description": "Specifies the identifier key of the vulnerability assessment storage account. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     },
     "recurringScans": {
      "$ref": "#/components/schemas/schemas:151",
      "description": "The recurring scans settings"
     }
    }
   },
   "schemas:151": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///874?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessments.json"
     ],
     "name": "VulnerabilityAssessmentRecurringScansProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessments.json#/components/schemas/VulnerabilityAssessmentRecurringScansProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a Vulnerability Assessment recurring scans.",
    "type": "object",
    "properties": {
     "isEnabled": {
      "description": "Recurring scans state.",
      "type": "boolean"
     },
     "emailSubscriptionAdmins": {
      "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
      "default": true,
      "type": "boolean"
     },
     "emails": {
      "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "schemas:152": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///874?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessments.json"
     ],
     "name": "DatabaseVulnerabilityAssessment",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessments.json#/components/schemas/DatabaseVulnerabilityAssessment"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A database vulnerability assessment.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:150",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:153": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobAgentListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobAgentListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of Azure SQL job agents.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:155"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:154": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobAgentProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobAgentProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a job agent.",
    "required": [
     "databaseId"
    ],
    "type": "object",
    "properties": {
     "databaseId": {
      "description": "Resource ID of the database to store job metadata in.",
      "type": "string",
      "x-ms-mutability": [
       "read",
       "create"
      ]
     },
     "state": {
      "description": "The state of the job agent.",
      "enum": [
       "Creating",
       "Ready",
       "Updating",
       "Deleting",
       "Disabled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "JobAgentState",
       "modelAsString": true,
       "oldModelAsString": true
      }
     }
    }
   },
   "schemas:155": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobAgent",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobAgent"
     ],
     "x-ms-secondary-file": false
    },
    "description": "An Azure SQL job agent.",
    "required": [
     "location"
    ],
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:278"
     }
    ],
    "properties": {
     "sku": {
      "$ref": "#/components/schemas/schemas:279",
      "description": "The name and tier of the SKU."
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:154",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:156": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobAgentUpdate",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobAgentUpdate"
     ],
     "x-ms-secondary-file": false
    },
    "description": "An update to an Azure SQL job agent.",
    "type": "object",
    "properties": {
     "tags": {
      "description": "Resource tags.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    }
   },
   "schemas:157": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobCredentialListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobCredentialListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of job credentials.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:159"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:158": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobCredentialProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobCredentialProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a job credential.",
    "required": [
     "username",
     "password"
    ],
    "type": "object",
    "properties": {
     "username": {
      "description": "The credential user name.",
      "type": "string"
     },
     "password": {
      "description": "The credential password.",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     }
    }
   },
   "schemas:159": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobCredential",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobCredential"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A stored credential that can be used by a job to connect to target databases.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:158",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:160": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobExecutionListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobExecutionListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of job executions.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:163"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:161": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobExecutionProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobExecutionProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties for an Azure SQL Database Elastic job execution.",
    "type": "object",
    "properties": {
     "jobVersion": {
      "format": "int32",
      "description": "The job version number.",
      "type": "integer",
      "readOnly": true
     },
     "stepName": {
      "description": "The job step name.",
      "type": "string",
      "readOnly": true
     },
     "stepId": {
      "format": "int32",
      "description": "The job step id.",
      "type": "integer",
      "readOnly": true
     },
     "jobExecutionId": {
      "format": "uuid",
      "description": "The unique identifier of the job execution.",
      "type": "string",
      "readOnly": true
     },
     "lifecycle": {
      "description": "The detailed state of the job execution.",
      "enum": [
       "Created",
       "InProgress",
       "WaitingForChildJobExecutions",
       "WaitingForRetry",
       "Succeeded",
       "SucceededWithSkipped",
       "Failed",
       "TimedOut",
       "Canceled",
       "Skipped"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "JobExecutionLifecycle",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "provisioningState": {
      "description": "The ARM provisioning state of the job execution.",
      "enum": [
       "Created",
       "InProgress",
       "Succeeded",
       "Failed",
       "Canceled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "ProvisioningState",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "createTime": {
      "format": "date-time",
      "description": "The time that the job execution was created.",
      "type": "string",
      "readOnly": true
     },
     "startTime": {
      "format": "date-time",
      "description": "The time that the job execution started.",
      "type": "string",
      "readOnly": true
     },
     "endTime": {
      "format": "date-time",
      "description": "The time that the job execution completed.",
      "type": "string",
      "readOnly": true
     },
     "currentAttempts": {
      "format": "int32",
      "description": "Number of times the job execution has been attempted.",
      "type": "integer"
     },
     "currentAttemptStartTime": {
      "format": "date-time",
      "description": "Start time of the current attempt.",
      "type": "string",
      "readOnly": true
     },
     "lastMessage": {
      "description": "The last status or error message.",
      "type": "string",
      "readOnly": true
     },
     "target": {
      "$ref": "#/components/schemas/schemas:162",
      "description": "The target that this execution is executed on.",
      "readOnly": true
     }
    }
   },
   "schemas:162": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobExecutionTarget",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobExecutionTarget"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The target that a job execution is executed on.",
    "type": "object",
    "properties": {
     "type": {
      "description": "The type of the target.",
      "enum": [
       "TargetGroup",
       "SqlDatabase",
       "SqlElasticPool",
       "SqlShardMap",
       "SqlServer"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "JobTargetType",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "serverName": {
      "description": "The server name.",
      "type": "string",
      "readOnly": true
     },
     "databaseName": {
      "description": "The database name.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:163": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobExecution",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobExecution"
     ],
     "x-ms-secondary-file": false
    },
    "description": "An execution of a job",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:161",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:164": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of jobs.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:167"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:165": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a job.",
    "type": "object",
    "properties": {
     "description": {
      "description": "User-defined description of the job.",
      "default": "",
      "type": "string"
     },
     "version": {
      "format": "int32",
      "description": "The job version number.",
      "type": "integer",
      "readOnly": true
     },
     "schedule": {
      "$ref": "#/components/schemas/schemas:166",
      "description": "Schedule properties of the job."
     }
    }
   },
   "schemas:166": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobSchedule",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobSchedule"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Scheduling properties of a job.",
    "type": "object",
    "properties": {
     "startTime": {
      "format": "date-time",
      "description": "Schedule start time.",
      "default": "0001-01-01T00:00:00Z",
      "type": "string"
     },
     "endTime": {
      "format": "date-time",
      "description": "Schedule end time.",
      "default": "9999-12-31T11:59:59Z",
      "type": "string"
     },
     "type": {
      "description": "Schedule interval type",
      "default": "Once",
      "enum": [
       "Once",
       "Recurring"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "JobScheduleType",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "enabled": {
      "description": "Whether or not the schedule is enabled.",
      "type": "boolean"
     },
     "interval": {
      "description": "Value of the schedule's recurring interval, if the scheduletype is recurring. ISO8601 duration format.",
      "type": "string"
     }
    }
   },
   "schemas:167": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "Job",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/Job"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A job.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:165",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:168": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobStepListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobStepListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of job steps.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:173"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:169": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobStepProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobStepProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a job step.",
    "required": [
     "targetGroup",
     "credential",
     "action"
    ],
    "type": "object",
    "properties": {
     "stepId": {
      "format": "int32",
      "description": "The job step's index within the job. If not specified when creating the job step, it will be created as the last step. If not specified when updating the job step, the step id is not modified.",
      "type": "integer"
     },
     "targetGroup": {
      "description": "The resource ID of the target group that the job step will be executed on.",
      "type": "string"
     },
     "credential": {
      "description": "The resource ID of the job credential that will be used to connect to the targets.",
      "type": "string"
     },
     "action": {
      "$ref": "#/components/schemas/schemas:170",
      "description": "The action payload of the job step."
     },
     "output": {
      "$ref": "#/components/schemas/schemas:171",
      "description": "Output destination properties of the job step."
     },
     "executionOptions": {
      "$ref": "#/components/schemas/schemas:172",
      "description": "Execution options for the job step."
     }
    }
   },
   "schemas:170": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobStepAction",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobStepAction"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The action to be executed by a job step.",
    "required": [
     "value"
    ],
    "type": "object",
    "properties": {
     "type": {
      "description": "Type of action being executed by the job step.",
      "default": "TSql",
      "enum": [
       "TSql"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "JobStepActionType",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "source": {
      "description": "The source of the action to execute.",
      "default": "Inline",
      "enum": [
       "Inline"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "JobStepActionSource",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "value": {
      "description": "The action value, for example the text of the T-SQL script to execute.",
      "type": "string"
     }
    }
   },
   "schemas:171": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobStepOutput",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobStepOutput"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The output configuration of a job step.",
    "required": [
     "serverName",
     "databaseName",
     "tableName",
     "credential"
    ],
    "type": "object",
    "properties": {
     "type": {
      "description": "The output destination type.",
      "default": "SqlDatabase",
      "enum": [
       "SqlDatabase"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "JobStepOutputType",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "subscriptionId": {
      "format": "uuid",
      "description": "The output destination subscription id.",
      "type": "string"
     },
     "resourceGroupName": {
      "description": "The output destination resource group.",
      "type": "string"
     },
     "serverName": {
      "description": "The output destination server name.",
      "type": "string"
     },
     "databaseName": {
      "description": "The output destination database.",
      "type": "string"
     },
     "schemaName": {
      "description": "The output destination schema.",
      "default": "dbo",
      "type": "string"
     },
     "tableName": {
      "description": "The output destination table.",
      "type": "string"
     },
     "credential": {
      "description": "The resource ID of the credential to use to connect to the output destination.",
      "type": "string"
     }
    }
   },
   "schemas:172": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobStepExecutionOptions",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobStepExecutionOptions"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The execution options of a job step.",
    "type": "object",
    "properties": {
     "timeoutSeconds": {
      "format": "int32",
      "description": "Execution timeout for the job step.",
      "default": 43200,
      "type": "integer"
     },
     "retryAttempts": {
      "format": "int32",
      "description": "Maximum number of times the job step will be reattempted if the first attempt fails.",
      "default": 10,
      "type": "integer"
     },
     "initialRetryIntervalSeconds": {
      "format": "int32",
      "description": "Initial delay between retries for job step execution.",
      "default": 1,
      "type": "integer"
     },
     "maximumRetryIntervalSeconds": {
      "format": "int32",
      "description": "The maximum amount of time to wait between retries for job step execution.",
      "default": 120,
      "type": "integer"
     },
     "retryIntervalBackoffMultiplier": {
      "format": "float",
      "description": "The backoff multiplier for the time between retries.",
      "default": 2,
      "type": "number"
     }
    }
   },
   "schemas:173": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobStep",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobStep"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A job step.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:169",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:174": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobTargetGroupListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobTargetGroupListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of target groups.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:177"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:175": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobTargetGroupProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobTargetGroupProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of job target group.",
    "required": [
     "members"
    ],
    "type": "object",
    "properties": {
     "members": {
      "description": "Members of the target group.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:176"
      }
     }
    }
   },
   "schemas:176": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobTarget",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobTarget"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A job target, for example a specific database or a container of databases that is evaluated during job execution.",
    "required": [
     "type"
    ],
    "type": "object",
    "properties": {
     "membershipType": {
      "description": "Whether the target is included or excluded from the group.",
      "default": "Include",
      "enum": [
       "Include",
       "Exclude"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "JobTargetGroupMembershipType",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "type": {
      "description": "The target type.",
      "enum": [
       "TargetGroup",
       "SqlDatabase",
       "SqlElasticPool",
       "SqlShardMap",
       "SqlServer"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "JobTargetType",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "serverName": {
      "description": "The target server name.",
      "type": "string"
     },
     "databaseName": {
      "description": "The target database name.",
      "type": "string"
     },
     "elasticPoolName": {
      "description": "The target elastic pool name.",
      "type": "string"
     },
     "shardMapName": {
      "description": "The target shard map.",
      "type": "string"
     },
     "refreshCredential": {
      "description": "The resource ID of the credential that is used during job execution to connect to the target and determine the list of databases inside the target.",
      "type": "string"
     }
    }
   },
   "schemas:177": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobTargetGroup",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobTargetGroup"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A group of job targets.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:175",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:178": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobVersionListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobVersionListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of job versions.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:179"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:179": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "JobVersion",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/schemas/JobVersion"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A job version.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {}
   },
   "schemas:180": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
     ],
     "name": "LongTermRetentionBackupProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/components/schemas/LongTermRetentionBackupProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a long term retention backup",
    "type": "object",
    "properties": {
     "serverName": {
      "description": "The server name that the backup database belong to.",
      "type": "string",
      "readOnly": true
     },
     "serverCreateTime": {
      "format": "date-time",
      "description": "The create time of the server.",
      "type": "string",
      "readOnly": true
     },
     "databaseName": {
      "description": "The name of the database the backup belong to",
      "type": "string",
      "readOnly": true
     },
     "databaseDeletionTime": {
      "format": "date-time",
      "description": "The delete time of the database",
      "type": "string",
      "readOnly": true
     },
     "backupTime": {
      "format": "date-time",
      "description": "The time the backup was taken",
      "type": "string",
      "readOnly": true
     },
     "backupExpirationTime": {
      "format": "date-time",
      "description": "The time the long term retention backup will expire.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:181": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
     ],
     "name": "LongTermRetentionBackup",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/components/schemas/LongTermRetentionBackup"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A long term retention backup.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:180",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:182": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
     ],
     "name": "LongTermRetentionBackupListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/components/schemas/LongTermRetentionBackupListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of long term retention bacukps.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:181"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:183": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
     ],
     "name": "LongTermRetentionPolicyProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/components/schemas/LongTermRetentionPolicyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a long term retention policy",
    "type": "object",
    "properties": {
     "weeklyRetention": {
      "description": "The weekly retention policy for an LTR backup in an ISO 8601 format.",
      "type": "string"
     },
     "monthlyRetention": {
      "description": "The monthly retention policy for an LTR backup in an ISO 8601 format.",
      "type": "string"
     },
     "yearlyRetention": {
      "description": "The yearly retention policy for an LTR backup in an ISO 8601 format.",
      "type": "string"
     },
     "weekOfYear": {
      "format": "int32",
      "description": "The week of year to take the yearly backup in an ISO 8601 format.",
      "type": "integer"
     }
    }
   },
   "schemas:184": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
     ],
     "name": "BackupLongTermRetentionPolicy",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/components/schemas/BackupLongTermRetentionPolicy"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A long term retention policy.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:183",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:185": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
     ],
     "name": "CompleteDatabaseRestoreDefinition",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/components/schemas/CompleteDatabaseRestoreDefinition"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Contains the information necessary to perform a complete database restore operation.",
    "required": [
     "lastBackupName"
    ],
    "type": "object",
    "properties": {
     "lastBackupName": {
      "description": "The last backup name to apply",
      "type": "string"
     }
    }
   },
   "schemas:186": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
     ],
     "name": "ManagedDatabaseListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/components/schemas/ManagedDatabaseListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of managed databases.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:188"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:187": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
     ],
     "name": "ManagedDatabaseProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/components/schemas/ManagedDatabaseProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The managed database's properties.",
    "type": "object",
    "properties": {
     "collation": {
      "description": "Collation of the managed database.",
      "type": "string",
      "x-ms-mutability": [
       "read",
       "create"
      ]
     },
     "status": {
      "description": "Status for the database.",
      "enum": [
       "Online",
       "Offline",
       "Shutdown",
       "Creating",
       "Inaccessible"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "ManagedDatabaseStatus",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "creationDate": {
      "format": "date-time",
      "description": "Creation date of the database.",
      "type": "string",
      "readOnly": true
     },
     "earliestRestorePoint": {
      "format": "date-time",
      "description": "Earliest restore point in time for point in time restore.",
      "type": "string",
      "readOnly": true
     },
     "restorePointInTime": {
      "format": "date-time",
      "description": "Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
      "type": "string",
      "x-ms-mutability": [
       "create"
      ]
     },
     "defaultSecondaryLocation": {
      "description": "Geo paired region.",
      "type": "string",
      "readOnly": true
     },
     "catalogCollation": {
      "description": "Collation of the metadata catalog.",
      "enum": [
       "DATABASE_DEFAULT",
       "SQL_Latin1_General_CP1_CI_AS"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "CatalogCollationType",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "x-ms-mutability": [
       "read",
       "create"
      ]
     },
     "createMode": {
      "description": "Managed database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. SourceDatabaseName, SourceManagedInstanceName and PointInTime must be specified. RestoreExternalBackup: Create a database by restoring from external backup files. Collation, StorageContainerUri and StorageContainerSasToken must be specified.",
      "enum": [
       "Default",
       "RestoreExternalBackup",
       "PointInTimeRestore"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "ManagedDatabaseCreateMode",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "x-ms-mutability": [
       "create"
      ]
     },
     "storageContainerUri": {
      "description": "Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the uri of the storage container where backups for this restore are stored.",
      "type": "string",
      "x-ms-mutability": [
       "create"
      ]
     },
     "sourceDatabaseId": {
      "description": "The resource identifier of the source database associated with create operation of this database.",
      "type": "string",
      "x-ms-mutability": [
       "create"
      ]
     },
     "storageContainerSasToken": {
      "description": "Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the storage container sas token.",
      "type": "string",
      "x-ms-mutability": [
       "create"
      ]
     },
     "failoverGroupId": {
      "description": "Instance Failover Group resource identifier that this managed database belongs to.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:188": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
     ],
     "name": "ManagedDatabase",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/components/schemas/ManagedDatabase"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A managed database resource.",
    "required": [
     "location"
    ],
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:278"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:187",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:189": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
     ],
     "name": "ManagedDatabaseUpdate",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/components/schemas/ManagedDatabaseUpdate"
     ],
     "x-ms-secondary-file": false
    },
    "description": "An managed database update.",
    "type": "object",
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:187",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     },
     "tags": {
      "description": "Resource tags.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    }
   },
   "schemas:190": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///878?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverAutomaticTuning.json"
     ],
     "name": "AutomaticTuningServerProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverAutomaticTuning.json#/components/schemas/AutomaticTuningServerProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Server-level Automatic Tuning properties.",
    "type": "object",
    "properties": {
     "desiredState": {
      "description": "Automatic tuning desired state.",
      "enum": [
       "Custom",
       "Auto",
       "Unspecified"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "AutomaticTuningServerMode",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "actualState": {
      "description": "Automatic tuning actual state.",
      "enum": [
       "Custom",
       "Auto",
       "Unspecified"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "AutomaticTuningServerMode",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "options": {
      "description": "Automatic tuning options definition.",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/components/schemas/schemas:191"
      }
     }
    }
   },
   "schemas:191": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///878?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverAutomaticTuning.json"
     ],
     "name": "AutomaticTuningServerOptions",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverAutomaticTuning.json#/components/schemas/AutomaticTuningServerOptions"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Automatic tuning properties for individual advisors.",
    "type": "object",
    "properties": {
     "desiredState": {
      "description": "Automatic tuning option desired state.",
      "enum": [
       "Off",
       "On",
       "Default"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "AutomaticTuningOptionModeDesired",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "actualState": {
      "description": "Automatic tuning option actual state.",
      "enum": [
       "Off",
       "On"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "AutomaticTuningOptionModeActual",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "reasonCode": {
      "format": "int32",
      "description": "Reason code if desired and actual state are different.",
      "type": "integer",
      "readOnly": true
     },
     "reasonDesc": {
      "description": "Reason description if desired and actual state are different.",
      "enum": [
       "Default",
       "Disabled",
       "AutoConfigured"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "AutomaticTuningServerReason",
       "modelAsString": false,
       "oldModelAsString": false
      }
     }
    }
   },
   "schemas:192": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///878?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverAutomaticTuning.json"
     ],
     "name": "ServerAutomaticTuning",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverAutomaticTuning.json#/components/schemas/ServerAutomaticTuning"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Server-level Automatic Tuning.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:190",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:193": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///879?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverDnsAliases.json"
     ],
     "name": "ServerDnsAliasProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverDnsAliases.json#/components/schemas/ServerDnsAliasProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a server DNS alias.",
    "type": "object",
    "properties": {
     "azureDnsRecord": {
      "description": "The fully qualified DNS record for alias",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:194": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///879?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverDnsAliases.json"
     ],
     "name": "ServerDnsAlias",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverDnsAliases.json#/components/schemas/ServerDnsAlias"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A server DNS alias.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:193",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:195": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///879?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverDnsAliases.json"
     ],
     "name": "ServerDnsAliasListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverDnsAliases.json#/components/schemas/ServerDnsAliasListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of server DNS aliases.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:194"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:196": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///879?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverDnsAliases.json"
     ],
     "name": "ServerDnsAliasAcquisition",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverDnsAliases.json#/components/schemas/ServerDnsAliasAcquisition"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A server DNS alias acquisition request.",
    "type": "object",
    "properties": {
     "oldServerDnsAliasId": {
      "description": "The id of the server alias that will be acquired to point to this server instead.",
      "type": "string"
     }
    }
   },
   "schemas:197": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///880?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverSecurityAlertPolicies.json"
     ],
     "name": "SecurityAlertPolicyProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverSecurityAlertPolicies.json#/components/schemas/SecurityAlertPolicyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a security alert policy.",
    "required": [
     "state"
    ],
    "type": "object",
    "properties": {
     "state": {
      "description": "Specifies the state of the policy, whether it is enabled or disabled.",
      "enum": [
       "New",
       "Enabled",
       "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "SecurityAlertPolicyState",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "disabledAlerts": {
      "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "emailAddresses": {
      "description": "Specifies an array of e-mail addresses to which the alert is sent.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "emailAccountAdmins": {
      "description": "Specifies that the alert is sent to the account administrators.",
      "type": "boolean"
     },
     "storageEndpoint": {
      "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
      "type": "string"
     },
     "storageAccountAccessKey": {
      "description": "Specifies the identifier key of the Threat Detection audit storage account.",
      "type": "string"
     },
     "retentionDays": {
      "format": "int32",
      "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
      "type": "integer"
     }
    }
   },
   "schemas:198": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///880?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverSecurityAlertPolicies.json"
     ],
     "name": "ServerSecurityAlertPolicy",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverSecurityAlertPolicies.json#/components/schemas/ServerSecurityAlertPolicy"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A server security alert policy.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:197",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:199": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///881?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FrestorePoints.json"
     ],
     "name": "RestorePointListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/restorePoints.json#/components/schemas/RestorePointListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of long term retention bacukps.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:201"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:200": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///881?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FrestorePoints.json"
     ],
     "name": "RestorePointProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/restorePoints.json#/components/schemas/RestorePointProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a database restore point",
    "type": "object",
    "properties": {
     "restorePointType": {
      "description": "The type of restore point",
      "enum": [
       "CONTINUOUS",
       "DISCRETE"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "RestorePointType",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "earliestRestoreDate": {
      "format": "date-time",
      "description": "The earliest time to which this database can be restored",
      "type": "string",
      "readOnly": true
     },
     "restorePointCreationDate": {
      "format": "date-time",
      "description": "The time the backup was taken",
      "type": "string",
      "readOnly": true
     },
     "restorePointLabel": {
      "description": "The label of restore point for backup request by user",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:201": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///881?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FrestorePoints.json"
     ],
     "name": "RestorePoint",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/restorePoints.json#/components/schemas/RestorePoint"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Database restore points.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "location": {
      "description": "Resource location.",
      "type": "string",
      "readOnly": true
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:200",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:202": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///881?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FrestorePoints.json"
     ],
     "name": "CreateDatabaseRestorePointDefinition",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/restorePoints.json#/components/schemas/CreateDatabaseRestorePointDefinition"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Contains the information necessary to perform a create database restore point operation.",
    "required": [
     "restorePointLabel"
    ],
    "type": "object",
    "properties": {
     "restorePointLabel": {
      "description": "The restore point label to apply",
      "type": "string"
     }
    }
   },
   "schemas:203": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///882?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelOperations.json"
     ],
     "name": "DatabaseOperationListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelOperations.json#/components/schemas/DatabaseOperationListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The response to a list database operations request",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:204"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:204": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///882?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelOperations.json"
     ],
     "name": "DatabaseOperation",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelOperations.json#/components/schemas/DatabaseOperation"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A database operation.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:205",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:205": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///882?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelOperations.json"
     ],
     "name": "DatabaseOperationProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelOperations.json#/components/schemas/DatabaseOperationProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The properties of a database operation.",
    "type": "object",
    "properties": {
     "databaseName": {
      "description": "The name of the database the operation is being performed on.",
      "type": "string",
      "readOnly": true
     },
     "operation": {
      "description": "The name of operation.",
      "type": "string",
      "readOnly": true
     },
     "operationFriendlyName": {
      "description": "The friendly name of operation.",
      "type": "string",
      "readOnly": true
     },
     "percentComplete": {
      "format": "int32",
      "description": "The percentage of the operation completed.",
      "type": "integer",
      "readOnly": true
     },
     "serverName": {
      "description": "The name of the server.",
      "type": "string",
      "readOnly": true
     },
     "startTime": {
      "format": "date-time",
      "description": "The operation start time.",
      "type": "string",
      "readOnly": true
     },
     "state": {
      "description": "The operation state.",
      "enum": [
       "Pending",
       "InProgress",
       "Succeeded",
       "Failed",
       "CancelInProgress",
       "Cancelled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "ManagementOperationState",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "errorCode": {
      "format": "int32",
      "description": "The operation error code.",
      "type": "integer",
      "readOnly": true
     },
     "errorDescription": {
      "description": "The operation error description.",
      "type": "string",
      "readOnly": true
     },
     "errorSeverity": {
      "format": "int32",
      "description": "The operation error severity.",
      "type": "integer",
      "readOnly": true
     },
     "isUserError": {
      "description": "Whether or not the error is a user error.",
      "type": "boolean",
      "readOnly": true
     },
     "estimatedCompletionTime": {
      "format": "date-time",
      "description": "The estimated completion time of the operation.",
      "type": "string",
      "readOnly": true
     },
     "description": {
      "description": "The operation description.",
      "type": "string",
      "readOnly": true
     },
     "isCancellable": {
      "description": "Whether the operation can be cancelled.",
      "type": "boolean",
      "readOnly": true
     }
    }
   },
   "schemas:206": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///883?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelPoolOperations.json"
     ],
     "name": "ElasticPoolOperationListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelPoolOperations.json#/components/schemas/ElasticPoolOperationListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The response to a list elastic pool operations request",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:208"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:207": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///883?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelPoolOperations.json"
     ],
     "name": "ElasticPoolOperationProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelPoolOperations.json#/components/schemas/ElasticPoolOperationProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The properties of a elastic pool operation.",
    "type": "object",
    "properties": {
     "elasticPoolName": {
      "description": "The name of the elastic pool the operation is being performed on.",
      "type": "string",
      "readOnly": true
     },
     "operation": {
      "description": "The name of operation.",
      "type": "string",
      "readOnly": true
     },
     "operationFriendlyName": {
      "description": "The friendly name of operation.",
      "type": "string",
      "readOnly": true
     },
     "percentComplete": {
      "format": "int32",
      "description": "The percentage of the operation completed.",
      "type": "integer",
      "readOnly": true
     },
     "serverName": {
      "description": "The name of the server.",
      "type": "string",
      "readOnly": true
     },
     "startTime": {
      "format": "date-time",
      "description": "The operation start time.",
      "type": "string",
      "readOnly": true
     },
     "state": {
      "description": "The operation state.",
      "type": "string",
      "readOnly": true
     },
     "errorCode": {
      "format": "int32",
      "description": "The operation error code.",
      "type": "integer",
      "readOnly": true
     },
     "errorDescription": {
      "description": "The operation error description.",
      "type": "string",
      "readOnly": true
     },
     "errorSeverity": {
      "format": "int32",
      "description": "The operation error severity.",
      "type": "integer",
      "readOnly": true
     },
     "isUserError": {
      "description": "Whether or not the error is a user error.",
      "type": "boolean",
      "readOnly": true
     },
     "estimatedCompletionTime": {
      "format": "date-time",
      "description": "The estimated completion time of the operation.",
      "type": "string",
      "readOnly": true
     },
     "description": {
      "description": "The operation description.",
      "type": "string",
      "readOnly": true
     },
     "isCancellable": {
      "description": "Whether the operation can be cancelled.",
      "type": "boolean",
      "readOnly": true
     }
    }
   },
   "schemas:208": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///883?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelPoolOperations.json"
     ],
     "name": "ElasticPoolOperation",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelPoolOperations.json#/components/schemas/ElasticPoolOperation"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A elastic pool operation.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:207",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:209": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "LocationCapabilities",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/schemas/LocationCapabilities"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The location capability.",
    "type": "object",
    "properties": {
     "name": {
      "description": "The location name.",
      "type": "string",
      "readOnly": true
     },
     "supportedServerVersions": {
      "description": "The list of supported server versions.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:210"
      },
      "readOnly": true
     },
     "supportedManagedInstanceVersions": {
      "description": "The list of supported managed instance versions.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:211"
      },
      "readOnly": true
     },
     "status": {
      "description": "The status of the capability.",
      "enum": [
       "Visible",
       "Available",
       "Default",
       "Disabled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "CapabilityStatus",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "reason": {
      "description": "The reason for the capability not being available.",
      "type": "string"
     }
    }
   },
   "schemas:210": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "ServerVersionCapability",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/schemas/ServerVersionCapability"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The server capability",
    "type": "object",
    "properties": {
     "name": {
      "description": "The server version name.",
      "type": "string",
      "readOnly": true
     },
     "supportedEditions": {
      "description": "The list of supported database editions.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:212"
      },
      "readOnly": true
     },
     "supportedElasticPoolEditions": {
      "description": "The list of supported elastic pool editions.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:213"
      },
      "readOnly": true
     },
     "status": {
      "description": "The status of the capability.",
      "enum": [
       "Visible",
       "Available",
       "Default",
       "Disabled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "CapabilityStatus",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "reason": {
      "description": "The reason for the capability not being available.",
      "type": "string"
     }
    }
   },
   "schemas:211": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "ManagedInstanceVersionCapability",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/schemas/ManagedInstanceVersionCapability"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The managed instance capability",
    "type": "object",
    "properties": {
     "name": {
      "description": "The server version name.",
      "type": "string",
      "readOnly": true
     },
     "supportedEditions": {
      "description": "The list of supported managed instance editions.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:214"
      },
      "readOnly": true
     },
     "status": {
      "description": "The status of the capability.",
      "enum": [
       "Visible",
       "Available",
       "Default",
       "Disabled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "CapabilityStatus",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "reason": {
      "description": "The reason for the capability not being available.",
      "type": "string"
     }
    }
   },
   "schemas:212": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "EditionCapability",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/schemas/EditionCapability"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The edition capability.",
    "type": "object",
    "properties": {
     "name": {
      "description": "The database edition name.",
      "type": "string",
      "readOnly": true
     },
     "supportedServiceLevelObjectives": {
      "description": "The list of supported service objectives for the edition.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:215"
      },
      "readOnly": true
     },
     "zoneRedundant": {
      "description": "Whether or not zone redundancy is supported for the edition.",
      "type": "boolean",
      "readOnly": true
     },
     "status": {
      "description": "The status of the capability.",
      "enum": [
       "Visible",
       "Available",
       "Default",
       "Disabled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "CapabilityStatus",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "reason": {
      "description": "The reason for the capability not being available.",
      "type": "string"
     }
    }
   },
   "schemas:213": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "ElasticPoolEditionCapability",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/schemas/ElasticPoolEditionCapability"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The elastic pool edition capability.",
    "type": "object",
    "properties": {
     "name": {
      "description": "The elastic pool edition name.",
      "type": "string",
      "readOnly": true
     },
     "supportedElasticPoolPerformanceLevels": {
      "description": "The list of supported elastic pool DTU levels for the edition.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:216"
      },
      "readOnly": true
     },
     "zoneRedundant": {
      "description": "Whether or not zone redundancy is supported for the edition.",
      "type": "boolean",
      "readOnly": true
     },
     "status": {
      "description": "The status of the capability.",
      "enum": [
       "Visible",
       "Available",
       "Default",
       "Disabled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "CapabilityStatus",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "reason": {
      "description": "The reason for the capability not being available.",
      "type": "string"
     }
    }
   },
   "schemas:214": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "ManagedInstanceEditionCapability",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/schemas/ManagedInstanceEditionCapability"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The managed server capability",
    "type": "object",
    "properties": {
     "name": {
      "description": "The managed server version name.",
      "type": "string",
      "readOnly": true
     },
     "supportedFamilies": {
      "description": "The supported families.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:217"
      },
      "readOnly": true
     },
     "status": {
      "description": "The status of the capability.",
      "enum": [
       "Visible",
       "Available",
       "Default",
       "Disabled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "CapabilityStatus",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "reason": {
      "description": "The reason for the capability not being available.",
      "type": "string"
     }
    }
   },
   "schemas:215": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "ServiceObjectiveCapability",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/schemas/ServiceObjectiveCapability"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The service objectives capability.",
    "type": "object",
    "properties": {
     "id": {
      "format": "uuid",
      "description": "The unique ID of the service objective.",
      "type": "string",
      "readOnly": true
     },
     "name": {
      "description": "The service objective name.",
      "type": "string",
      "readOnly": true
     },
     "supportedMaxSizes": {
      "description": "The list of supported maximum database sizes.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:218"
      },
      "readOnly": true
     },
     "performanceLevel": {
      "$ref": "#/components/schemas/schemas:219",
      "description": "The performance level.",
      "readOnly": true
     },
     "sku": {
      "$ref": "#/components/schemas/schemas:279",
      "description": "The sku.",
      "readOnly": true
     },
     "supportedLicenseTypes": {
      "description": "List of supported license types.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:220"
      },
      "readOnly": true
     },
     "includedMaxSize": {
      "$ref": "#/components/schemas/schemas:221",
      "description": "The included (free) max size.",
      "readOnly": true
     },
     "status": {
      "description": "The status of the capability.",
      "enum": [
       "Visible",
       "Available",
       "Default",
       "Disabled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "CapabilityStatus",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "reason": {
      "description": "The reason for the capability not being available.",
      "type": "string"
     }
    }
   },
   "schemas:216": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "ElasticPoolPerformanceLevelCapability",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/schemas/ElasticPoolPerformanceLevelCapability"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The Elastic Pool performance level capability.",
    "type": "object",
    "properties": {
     "performanceLevel": {
      "$ref": "#/components/schemas/schemas:219",
      "description": "The performance level for the pool.",
      "readOnly": true
     },
     "sku": {
      "$ref": "#/components/schemas/schemas:279",
      "description": "The sku.",
      "readOnly": true
     },
     "supportedLicenseTypes": {
      "description": "List of supported license types.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:220"
      },
      "readOnly": true
     },
     "maxDatabaseCount": {
      "format": "int32",
      "description": "The maximum number of databases supported.",
      "type": "integer",
      "readOnly": true
     },
     "includedMaxSize": {
      "$ref": "#/components/schemas/schemas:221",
      "description": "The included (free) max size for this performance level.",
      "readOnly": true
     },
     "supportedMaxSizes": {
      "description": "The list of supported max sizes.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:218"
      },
      "readOnly": true
     },
     "supportedPerDatabaseMaxSizes": {
      "description": "The list of supported per database max sizes.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:218"
      },
      "readOnly": true
     },
     "supportedPerDatabaseMaxPerformanceLevels": {
      "description": "The list of supported per database max performance levels.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:222"
      },
      "readOnly": true
     },
     "status": {
      "description": "The status of the capability.",
      "enum": [
       "Visible",
       "Available",
       "Default",
       "Disabled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "CapabilityStatus",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "reason": {
      "description": "The reason for the capability not being available.",
      "type": "string"
     }
    }
   },
   "schemas:217": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "ManagedInstanceFamilyCapability",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/schemas/ManagedInstanceFamilyCapability"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The managed server family capability.",
    "type": "object",
    "properties": {
     "name": {
      "description": "Family name.",
      "type": "string",
      "readOnly": true
     },
     "sku": {
      "description": "SKU name.",
      "type": "string",
      "readOnly": true
     },
     "supportedLicenseTypes": {
      "description": "List of supported license types.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:220"
      },
      "readOnly": true
     },
     "supportedVcoresValues": {
      "description": "List of supported virtual cores values.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:223"
      },
      "readOnly": true
     },
     "includedMaxSize": {
      "$ref": "#/components/schemas/schemas:221",
      "description": "Included size.",
      "readOnly": true
     },
     "supportedStorageSizes": {
      "description": "Storage size ranges.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:218"
      },
      "readOnly": true
     },
     "status": {
      "description": "The status of the capability.",
      "enum": [
       "Visible",
       "Available",
       "Default",
       "Disabled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "CapabilityStatus",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "reason": {
      "description": "The reason for the capability not being available.",
      "type": "string"
     }
    }
   },
   "schemas:218": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "MaxSizeRangeCapability",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/schemas/MaxSizeRangeCapability"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The maximum size range capability.",
    "type": "object",
    "properties": {
     "minValue": {
      "$ref": "#/components/schemas/schemas:221",
      "description": "Minimum value.",
      "readOnly": true
     },
     "maxValue": {
      "$ref": "#/components/schemas/schemas:221",
      "description": "Maximum value.",
      "readOnly": true
     },
     "scaleSize": {
      "$ref": "#/components/schemas/schemas:221",
      "description": "Scale/step size for discrete values between the minimum value and the maximum value.",
      "readOnly": true
     },
     "logSize": {
      "$ref": "#/components/schemas/schemas:224",
      "description": "Size of transaction log.",
      "readOnly": true
     },
     "status": {
      "description": "The status of the capability.",
      "enum": [
       "Visible",
       "Available",
       "Default",
       "Disabled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "CapabilityStatus",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "reason": {
      "description": "The reason for the capability not being available.",
      "type": "string"
     }
    }
   },
   "schemas:219": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "PerformanceLevelCapability",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/schemas/PerformanceLevelCapability"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The performance level capability.",
    "type": "object",
    "properties": {
     "value": {
      "format": "double",
      "description": "Performance level value.",
      "type": "number",
      "readOnly": true
     },
     "unit": {
      "description": "Unit type used to measure performance level.",
      "enum": [
       "DTU",
       "VCores"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "PerformanceLevelUnit",
       "modelAsString": true,
       "oldModelAsString": true
      }
     }
    }
   },
   "schemas:220": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "LicenseTypeCapability",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/schemas/LicenseTypeCapability"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The license type capability",
    "type": "object",
    "properties": {
     "name": {
      "description": "License type identifier.",
      "type": "string",
      "readOnly": true
     },
     "status": {
      "description": "The status of the capability.",
      "enum": [
       "Visible",
       "Available",
       "Default",
       "Disabled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "CapabilityStatus",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "reason": {
      "description": "The reason for the capability not being available.",
      "type": "string"
     }
    }
   },
   "schemas:221": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "MaxSizeCapability",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/schemas/MaxSizeCapability"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The maximum size capability.",
    "type": "object",
    "properties": {
     "limit": {
      "format": "int32",
      "description": "The maximum size limit (see 'unit' for the units).",
      "type": "integer",
      "readOnly": true
     },
     "unit": {
      "description": "The units that the limit is expressed in.",
      "enum": [
       "Megabytes",
       "Gigabytes",
       "Terabytes",
       "Petabytes"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "MaxSizeUnit",
       "modelAsString": true,
       "oldModelAsString": true
      }
     }
    }
   },
   "schemas:222": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "ElasticPoolPerDatabaseMaxPerformanceLevelCapability",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/schemas/ElasticPoolPerDatabaseMaxPerformanceLevelCapability"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The max per-database performance level capability.",
    "type": "object",
    "properties": {
     "limit": {
      "format": "double",
      "description": "The maximum performance level per database.",
      "type": "number",
      "readOnly": true
     },
     "unit": {
      "description": "Unit type used to measure performance level.",
      "enum": [
       "DTU",
       "VCores"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "PerformanceLevelUnit",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "supportedPerDatabaseMinPerformanceLevels": {
      "description": "The list of supported min database performance levels.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:225"
      },
      "readOnly": true
     },
     "status": {
      "description": "The status of the capability.",
      "enum": [
       "Visible",
       "Available",
       "Default",
       "Disabled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "CapabilityStatus",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "reason": {
      "description": "The reason for the capability not being available.",
      "type": "string"
     }
    }
   },
   "schemas:223": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "ManagedInstanceVcoresCapability",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/schemas/ManagedInstanceVcoresCapability"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The managed instance virtual cores capability.",
    "type": "object",
    "properties": {
     "name": {
      "description": "The virtual cores identifier.",
      "type": "string",
      "readOnly": true
     },
     "value": {
      "format": "int32",
      "description": "The virtual cores value.",
      "type": "integer",
      "readOnly": true
     },
     "status": {
      "description": "The status of the capability.",
      "enum": [
       "Visible",
       "Available",
       "Default",
       "Disabled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "CapabilityStatus",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "reason": {
      "description": "The reason for the capability not being available.",
      "type": "string"
     }
    }
   },
   "schemas:224": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "LogSizeCapability",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/schemas/LogSizeCapability"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The log size capability.",
    "type": "object",
    "properties": {
     "limit": {
      "format": "int32",
      "description": "The log size limit (see 'unit' for the units).",
      "type": "integer",
      "readOnly": true
     },
     "unit": {
      "description": "The units that the limit is expressed in.",
      "enum": [
       "Megabytes",
       "Gigabytes",
       "Terabytes",
       "Petabytes",
       "Percent"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "LogSizeUnit",
       "modelAsString": true,
       "oldModelAsString": true
      }
     }
    }
   },
   "schemas:225": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "ElasticPoolPerDatabaseMinPerformanceLevelCapability",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/schemas/ElasticPoolPerDatabaseMinPerformanceLevelCapability"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The minimum per-database performance level capability.",
    "type": "object",
    "properties": {
     "limit": {
      "format": "double",
      "description": "The minimum performance level per database.",
      "type": "number",
      "readOnly": true
     },
     "unit": {
      "description": "Unit type used to measure performance level.",
      "enum": [
       "DTU",
       "VCores"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "PerformanceLevelUnit",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "status": {
      "description": "The status of the capability.",
      "enum": [
       "Visible",
       "Available",
       "Default",
       "Disabled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "CapabilityStatus",
       "modelAsString": false,
       "oldModelAsString": false
      }
     },
     "reason": {
      "description": "The reason for the capability not being available.",
      "type": "string"
     }
    }
   },
   "schemas:226": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
     ],
     "name": "DatabaseListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/components/schemas/DatabaseListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of databases.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:228"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:227": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
     ],
     "name": "DatabaseProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/components/schemas/DatabaseProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The database's properties.",
    "type": "object",
    "properties": {
     "createMode": {
      "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
      "enum": [
       "Default",
       "Copy",
       "Secondary",
       "PointInTimeRestore",
       "Restore",
       "Recovery",
       "RestoreExternalBackup",
       "RestoreExternalBackupSecondary",
       "RestoreLongTermRetentionBackup",
       "OnlineSecondary"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "CreateMode",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "x-ms-mutability": [
       "create"
      ]
     },
     "collation": {
      "description": "The collation of the database.",
      "type": "string",
      "x-ms-mutability": [
       "read",
       "create"
      ]
     },
     "maxSizeBytes": {
      "format": "int64",
      "description": "The max size of the database expressed in bytes.",
      "type": "integer"
     },
     "sampleName": {
      "description": "The name of the sample schema to apply when creating this database.",
      "enum": [
       "AdventureWorksLT",
       "WideWorldImportersStd",
       "WideWorldImportersFull"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "SampleName",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "x-ms-mutability": [
       "create"
      ]
     },
     "elasticPoolId": {
      "description": "The resource identifier of the elastic pool containing this database.",
      "type": "string"
     },
     "sourceDatabaseId": {
      "description": "The resource identifier of the source database associated with create operation of this database.",
      "type": "string",
      "x-ms-mutability": [
       "create"
      ]
     },
     "status": {
      "description": "The status of the database.",
      "enum": [
       "Online",
       "Restoring",
       "RecoveryPending",
       "Recovering",
       "Suspect",
       "Offline",
       "Standby",
       "Shutdown",
       "EmergencyMode",
       "AutoClosed",
       "Copying",
       "Creating",
       "Inaccessible",
       "OfflineSecondary",
       "Pausing",
       "Paused",
       "Resuming",
       "Scaling"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "DatabaseStatus",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "databaseId": {
      "format": "uuid",
      "description": "The ID of the database.",
      "type": "string",
      "readOnly": true
     },
     "creationDate": {
      "format": "date-time",
      "description": "The creation date of the database (ISO8601 format).",
      "type": "string",
      "readOnly": true
     },
     "currentServiceObjectiveName": {
      "description": "The current service level objective name of the database.",
      "type": "string",
      "readOnly": true
     },
     "requestedServiceObjectiveName": {
      "description": "The requested service level objective name of the database.",
      "type": "string",
      "readOnly": true
     },
     "defaultSecondaryLocation": {
      "description": "The default secondary region for this database.",
      "type": "string",
      "readOnly": true
     },
     "failoverGroupId": {
      "description": "Failover Group resource identifier that this database belongs to.",
      "type": "string",
      "readOnly": true
     },
     "restorePointInTime": {
      "format": "date-time",
      "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
      "type": "string",
      "x-ms-mutability": [
       "create"
      ]
     },
     "sourceDatabaseDeletionDate": {
      "format": "date-time",
      "description": "Specifies the time that the database was deleted.",
      "type": "string",
      "x-ms-mutability": [
       "create"
      ]
     },
     "recoveryServicesRecoveryPointId": {
      "description": "The resource identifier of the recovery point associated with create operation of this database.",
      "type": "string",
      "x-ms-mutability": [
       "create"
      ]
     },
     "longTermRetentionBackupResourceId": {
      "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
      "type": "string",
      "x-ms-mutability": [
       "create"
      ]
     },
     "recoverableDatabaseId": {
      "description": "The resource identifier of the recoverable database associated with create operation of this database.",
      "type": "string",
      "x-ms-mutability": [
       "create"
      ]
     },
     "restorableDroppedDatabaseId": {
      "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
      "type": "string",
      "x-ms-mutability": [
       "create"
      ]
     },
     "catalogCollation": {
      "description": "Collation of the metadata catalog.",
      "enum": [
       "DATABASE_DEFAULT",
       "SQL_Latin1_General_CP1_CI_AS"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "CatalogCollationType",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "x-ms-mutability": [
       "read",
       "create"
      ]
     },
     "zoneRedundant": {
      "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
      "type": "boolean"
     },
     "licenseType": {
      "description": "The license type to apply for this database.",
      "enum": [
       "LicenseIncluded",
       "BasePrice"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "DatabaseLicenseType",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "maxLogSizeBytes": {
      "format": "int64",
      "description": "The max log size for this database.",
      "type": "integer",
      "readOnly": true
     },
     "earliestRestoreDate": {
      "format": "date-time",
      "description": "This records the earliest start date and time that restore is available for this database (ISO8601 format).",
      "type": "string",
      "readOnly": true
     },
     "readScale": {
      "description": "The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region.",
      "enum": [
       "Enabled",
       "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "DatabaseReadScale",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "x-ms-mutability": [
       "read",
       "update"
      ]
     },
     "currentSku": {
      "$ref": "#/components/schemas/schemas:279",
      "description": "The name and tier of the SKU.",
      "readOnly": true
     }
    }
   },
   "schemas:228": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
     ],
     "name": "Database",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/components/schemas/Database"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A database resource.",
    "required": [
     "location"
    ],
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:278"
     }
    ],
    "properties": {
     "sku": {
      "$ref": "#/components/schemas/schemas:279",
      "description": "The name and tier of the SKU."
     },
     "kind": {
      "description": "Kind of database. This is metadata used for the Azure portal experience.",
      "type": "string",
      "readOnly": true
     },
     "managedBy": {
      "description": "Resource that manages the database.",
      "type": "string",
      "readOnly": true
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:227",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:229": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
     ],
     "name": "DatabaseUpdate",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/components/schemas/DatabaseUpdate"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A database resource.",
    "type": "object",
    "properties": {
     "sku": {
      "$ref": "#/components/schemas/schemas:279",
      "description": "The name and tier of the SKU."
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:227",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     },
     "tags": {
      "description": "Resource tags.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    }
   },
   "schemas:230": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
     ],
     "name": "ResourceMoveDefinition",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/components/schemas/ResourceMoveDefinition"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Contains the information necessary to perform a resource move (rename).",
    "required": [
     "id"
    ],
    "type": "object",
    "properties": {
     "id": {
      "description": "The target ID for the resource",
      "type": "string"
     }
    }
   },
   "schemas:231": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
     ],
     "name": "ElasticPoolListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/components/schemas/ElasticPoolListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The result of an elastic pool list request.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:234"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:232": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
     ],
     "name": "ElasticPoolProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/components/schemas/ElasticPoolProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of an elastic pool",
    "type": "object",
    "properties": {
     "state": {
      "description": "The state of the elastic pool.",
      "enum": [
       "Creating",
       "Ready",
       "Disabled"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "ElasticPoolState",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "creationDate": {
      "format": "date-time",
      "description": "The creation date of the elastic pool (ISO8601 format).",
      "type": "string",
      "readOnly": true
     },
     "maxSizeBytes": {
      "format": "int64",
      "description": "The storage limit for the database elastic pool in bytes.",
      "type": "integer"
     },
     "perDatabaseSettings": {
      "$ref": "#/components/schemas/schemas:233",
      "description": "The per database settings for the elastic pool."
     },
     "zoneRedundant": {
      "description": "Whether or not this elastic pool is zone redundant, which means the replicas of this elastic pool will be spread across multiple availability zones.",
      "type": "boolean"
     },
     "licenseType": {
      "description": "The license type to apply for this elastic pool.",
      "enum": [
       "LicenseIncluded",
       "BasePrice"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "ElasticPoolLicenseType",
       "modelAsString": true,
       "oldModelAsString": true
      }
     }
    }
   },
   "schemas:233": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
     ],
     "name": "ElasticPoolPerDatabaseSettings",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/components/schemas/ElasticPoolPerDatabaseSettings"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Per database settings of an elastic pool.",
    "type": "object",
    "properties": {
     "minCapacity": {
      "format": "double",
      "description": "The minimum capacity all databases are guaranteed.",
      "type": "number"
     },
     "maxCapacity": {
      "format": "double",
      "description": "The maximum capacity any one database can consume.",
      "type": "number"
     }
    }
   },
   "schemas:234": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
     ],
     "name": "ElasticPool",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/components/schemas/ElasticPool"
     ],
     "x-ms-secondary-file": false
    },
    "description": "An elastic pool.",
    "required": [
     "location"
    ],
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:278"
     }
    ],
    "properties": {
     "sku": {
      "$ref": "#/components/schemas/schemas:279"
     },
     "kind": {
      "description": "Kind of elastic pool. This is metadata used for the Azure portal experience.",
      "type": "string",
      "readOnly": true
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:232",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:235": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
     ],
     "name": "ElasticPoolUpdate",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/components/schemas/ElasticPoolUpdate"
     ],
     "x-ms-secondary-file": false
    },
    "description": "An elastic pool update.",
    "type": "object",
    "properties": {
     "sku": {
      "$ref": "#/components/schemas/schemas:279"
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:236",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     },
     "tags": {
      "description": "Resource tags.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    }
   },
   "schemas:236": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
     ],
     "name": "ElasticPoolUpdateProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/components/schemas/ElasticPoolUpdateProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of an elastic pool",
    "type": "object",
    "properties": {
     "maxSizeBytes": {
      "format": "int64",
      "description": "The storage limit for the database elastic pool in bytes.",
      "type": "integer"
     },
     "perDatabaseSettings": {
      "$ref": "#/components/schemas/schemas:233",
      "description": "The per database settings for the elastic pool."
     },
     "zoneRedundant": {
      "description": "Whether or not this elastic pool is zone redundant, which means the replicas of this elastic pool will be spread across multiple availability zones.",
      "type": "boolean"
     },
     "licenseType": {
      "description": "The license type to apply for this elastic pool.",
      "enum": [
       "LicenseIncluded",
       "BasePrice"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "ElasticPoolLicenseType",
       "modelAsString": true,
       "oldModelAsString": true
      }
     }
    }
   },
   "schemas:237": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "VulnerabilityAssessmentRecurringScansProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/schemas/VulnerabilityAssessmentRecurringScansProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a Vulnerability Assessment recurring scans.",
    "type": "object",
    "properties": {
     "isEnabled": {
      "description": "Recurring scans state.",
      "type": "boolean"
     },
     "emailSubscriptionAdmins": {
      "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
      "default": true,
      "type": "boolean"
     },
     "emails": {
      "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "schemas:238": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "VulnerabilityAssessmentScanRecordProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/schemas/VulnerabilityAssessmentScanRecordProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a vulnerability assessment scan record.",
    "type": "object",
    "properties": {
     "scanId": {
      "description": "The scan ID.",
      "type": "string",
      "readOnly": true
     },
     "triggerType": {
      "description": "The scan trigger type.",
      "enum": [
       "OnDemand",
       "Recurring"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentScanTriggerType",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "state": {
      "description": "The scan status.",
      "enum": [
       "Passed",
       "Failed",
       "FailedToRun",
       "InProgress"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentScanState",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "startTime": {
      "format": "date-time",
      "description": "The scan start time (UTC).",
      "type": "string",
      "readOnly": true
     },
     "endTime": {
      "format": "date-time",
      "description": "The scan end time (UTC).",
      "type": "string",
      "readOnly": true
     },
     "errors": {
      "description": "The scan errors.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:239"
      },
      "readOnly": true
     },
     "storageContainerPath": {
      "description": "The scan results storage container path.",
      "type": "string",
      "readOnly": true
     },
     "numberOfFailedSecurityChecks": {
      "format": "int32",
      "description": "The number of failed security checks.",
      "type": "integer",
      "readOnly": true
     }
    }
   },
   "schemas:239": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "VulnerabilityAssessmentScanError",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/schemas/VulnerabilityAssessmentScanError"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a vulnerability assessment scan error.",
    "type": "object",
    "properties": {
     "code": {
      "description": "The error code.",
      "type": "string",
      "readOnly": true
     },
     "message": {
      "description": "The error message.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:240": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "VulnerabilityAssessmentScanRecord",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/schemas/VulnerabilityAssessmentScanRecord"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A vulnerability assessment scan record.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:238",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:241": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "VulnerabilityAssessmentScanRecordListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/schemas/VulnerabilityAssessmentScanRecordListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of vulnerability assessment scan records.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:240"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:242": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "DatabaseVulnerabilityAssessmentScanExportProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/schemas/DatabaseVulnerabilityAssessmentScanExportProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of the export operation's result.",
    "type": "object",
    "properties": {
     "exportedReportLocation": {
      "description": "Location of the exported report (e.g. https://myStorage.blob.core.windows.net/VaScans/scans/serverName/databaseName/scan_scanId.xlsx).",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:243": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "DatabaseVulnerabilityAssessmentScansExport",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/schemas/DatabaseVulnerabilityAssessmentScansExport"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A database Vulnerability Assessment scan export resource.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:242",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:244": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///888?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssesmentRuleBaselines.json"
     ],
     "name": "DatabaseVulnerabilityAssessmentRuleBaselineProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssesmentRuleBaselines.json#/components/schemas/DatabaseVulnerabilityAssessmentRuleBaselineProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a database Vulnerability Assessment rule baseline.",
    "required": [
     "baselineResults"
    ],
    "type": "object",
    "properties": {
     "baselineResults": {
      "description": "The rule baseline result",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:245"
      }
     }
    }
   },
   "schemas:245": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///888?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssesmentRuleBaselines.json"
     ],
     "name": "DatabaseVulnerabilityAssessmentRuleBaselineItem",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssesmentRuleBaselines.json#/components/schemas/DatabaseVulnerabilityAssessmentRuleBaselineItem"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result.",
    "required": [
     "result"
    ],
    "type": "object",
    "properties": {
     "result": {
      "description": "The rule baseline result",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "schemas:246": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///888?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssesmentRuleBaselines.json"
     ],
     "name": "DatabaseVulnerabilityAssessmentRuleBaseline",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssesmentRuleBaselines.json#/components/schemas/DatabaseVulnerabilityAssessmentRuleBaseline"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A database vulnerability assessment rule baseline.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:244",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:247": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "VulnerabilityAssessmentScanRecordListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/components/schemas/VulnerabilityAssessmentScanRecordListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of vulnerability assessment scan records.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:250"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:248": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "VulnerabilityAssessmentScanRecordProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/components/schemas/VulnerabilityAssessmentScanRecordProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a vulnerability assessment scan record.",
    "type": "object",
    "properties": {
     "scanId": {
      "description": "The scan ID.",
      "type": "string",
      "readOnly": true
     },
     "triggerType": {
      "description": "The scan trigger type.",
      "enum": [
       "OnDemand",
       "Recurring"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentScanTriggerType",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "state": {
      "description": "The scan status.",
      "enum": [
       "Passed",
       "Failed",
       "FailedToRun",
       "InProgress"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "VulnerabilityAssessmentScanState",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "startTime": {
      "format": "date-time",
      "description": "The scan start time (UTC).",
      "type": "string",
      "readOnly": true
     },
     "endTime": {
      "format": "date-time",
      "description": "The scan end time (UTC).",
      "type": "string",
      "readOnly": true
     },
     "errors": {
      "description": "The scan errors.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:249"
      },
      "readOnly": true
     },
     "storageContainerPath": {
      "description": "The scan results storage container path.",
      "type": "string",
      "readOnly": true
     },
     "numberOfFailedSecurityChecks": {
      "format": "int32",
      "description": "The number of failed security checks.",
      "type": "integer",
      "readOnly": true
     }
    }
   },
   "schemas:249": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "VulnerabilityAssessmentScanError",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/components/schemas/VulnerabilityAssessmentScanError"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a vulnerability assessment scan error.",
    "type": "object",
    "properties": {
     "code": {
      "description": "The error code.",
      "type": "string",
      "readOnly": true
     },
     "message": {
      "description": "The error message.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:250": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "VulnerabilityAssessmentScanRecord",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/components/schemas/VulnerabilityAssessmentScanRecord"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A vulnerability assessment scan record.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:248",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:251": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "DatabaseVulnerabilityAssessmentScanExportProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/components/schemas/DatabaseVulnerabilityAssessmentScanExportProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of the export operation's result.",
    "type": "object",
    "properties": {
     "exportedReportLocation": {
      "description": "Location of the exported report (e.g. https://myStorage.blob.core.windows.net/VaScans/scans/serverName/databaseName/scan_scanId.xlsx).",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:252": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "DatabaseVulnerabilityAssessmentScansExport",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/components/schemas/DatabaseVulnerabilityAssessmentScansExport"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A database Vulnerability Assessment scan export resource.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:251",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:253": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///890?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessments.json"
     ],
     "name": "DatabaseVulnerabilityAssessmentProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessments.json#/components/schemas/DatabaseVulnerabilityAssessmentProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a database Vulnerability Assessment.",
    "required": [
     "storageContainerPath"
    ],
    "type": "object",
    "properties": {
     "storageContainerPath": {
      "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     },
     "storageContainerSasKey": {
      "description": "A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     },
     "storageAccountAccessKey": {
      "description": "Specifies the identifier key of the vulnerability assessment storage account. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     },
     "recurringScans": {
      "$ref": "#/components/schemas/schemas:254",
      "description": "The recurring scans settings"
     }
    }
   },
   "schemas:254": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///890?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessments.json"
     ],
     "name": "VulnerabilityAssessmentRecurringScansProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessments.json#/components/schemas/VulnerabilityAssessmentRecurringScansProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a Vulnerability Assessment recurring scans.",
    "type": "object",
    "properties": {
     "isEnabled": {
      "description": "Recurring scans state.",
      "type": "boolean"
     },
     "emailSubscriptionAdmins": {
      "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
      "default": true,
      "type": "boolean"
     },
     "emails": {
      "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "schemas:255": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///890?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessments.json"
     ],
     "name": "DatabaseVulnerabilityAssessment",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessments.json#/components/schemas/DatabaseVulnerabilityAssessment"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A database vulnerability assessment.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:253",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:256": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "InstanceFailoverGroupProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/schemas/InstanceFailoverGroupProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a instance failover group.",
    "required": [
     "readWriteEndpoint",
     "partnerRegions",
     "managedInstancePairs"
    ],
    "type": "object",
    "properties": {
     "readWriteEndpoint": {
      "$ref": "#/components/schemas/schemas:257",
      "description": "Read-write endpoint of the failover group instance."
     },
     "readOnlyEndpoint": {
      "$ref": "#/components/schemas/schemas:258",
      "description": "Read-only endpoint of the failover group instance."
     },
     "replicationRole": {
      "description": "Local replication role of the failover group instance.",
      "enum": [
       "Primary",
       "Secondary"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "InstanceFailoverGroupReplicationRole",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "replicationState": {
      "description": "Replication state of the failover group instance.",
      "type": "string",
      "readOnly": true
     },
     "partnerRegions": {
      "description": "Partner region information for the failover group.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:259"
      },
      "x-ms-mutability": [
       "read",
       "create"
      ]
     },
     "managedInstancePairs": {
      "description": "List of managed instance pairs in the failover group.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:260"
      }
     }
    }
   },
   "schemas:257": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "InstanceFailoverGroupReadWriteEndpoint",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/schemas/InstanceFailoverGroupReadWriteEndpoint"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Read-write endpoint of the failover group instance.",
    "required": [
     "failoverPolicy"
    ],
    "type": "object",
    "properties": {
     "failoverPolicy": {
      "description": "Failover policy of the read-write endpoint for the failover group. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required.",
      "enum": [
       "Manual",
       "Automatic"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "ReadWriteEndpointFailoverPolicy",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "failoverWithDataLossGracePeriodMinutes": {
      "format": "int32",
      "description": "Grace period before failover with data loss is attempted for the read-write endpoint. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required.",
      "type": "integer"
     }
    }
   },
   "schemas:258": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "InstanceFailoverGroupReadOnlyEndpoint",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/schemas/InstanceFailoverGroupReadOnlyEndpoint"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Read-only endpoint of the failover group instance.",
    "type": "object",
    "properties": {
     "failoverPolicy": {
      "description": "Failover policy of the read-only endpoint for the failover group.",
      "enum": [
       "Disabled",
       "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "ReadOnlyEndpointFailoverPolicy",
       "modelAsString": true,
       "oldModelAsString": true
      }
     }
    }
   },
   "schemas:259": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "PartnerRegionInfo",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/schemas/PartnerRegionInfo"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Partner region information for the failover group.",
    "type": "object",
    "properties": {
     "location": {
      "description": "Geo location of the partner managed instances.",
      "type": "string"
     },
     "replicationRole": {
      "description": "Replication role of the partner managed instances.",
      "enum": [
       "Primary",
       "Secondary"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
       "name": "InstanceFailoverGroupReplicationRole",
       "modelAsString": true,
       "oldModelAsString": true
      }
     }
    }
   },
   "schemas:260": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "ManagedInstancePairInfo",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/schemas/ManagedInstancePairInfo"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Pairs of Managed Instances in the failover group.",
    "type": "object",
    "properties": {
     "primaryManagedInstanceId": {
      "description": "Id of Primary Managed Instance in pair.",
      "type": "string"
     },
     "partnerManagedInstanceId": {
      "description": "Id of Partner Managed Instance in pair.",
      "type": "string"
     }
    }
   },
   "schemas:261": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "InstanceFailoverGroup",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/schemas/InstanceFailoverGroup"
     ],
     "x-ms-secondary-file": false
    },
    "description": "An instance failover group.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:256",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:262": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "InstanceFailoverGroupListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/schemas/InstanceFailoverGroupListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of instance failover groups.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:261"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:263": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///892?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FshortTermRetentionPolicies.json"
     ],
     "name": "BackupShortTermRetentionPolicyProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/shortTermRetentionPolicies.json#/components/schemas/BackupShortTermRetentionPolicyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a short term retention policy",
    "type": "object",
    "properties": {
     "retentionDays": {
      "format": "int32",
      "description": "The backup retention period in days. This is how many days Point-in-Time Restore will be supported.",
      "type": "integer"
     }
    }
   },
   "schemas:264": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///892?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FshortTermRetentionPolicies.json"
     ],
     "name": "BackupShortTermRetentionPolicy",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/shortTermRetentionPolicies.json#/components/schemas/BackupShortTermRetentionPolicy"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A short term retention policy.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:263",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:265": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///892?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FshortTermRetentionPolicies.json"
     ],
     "name": "BackupShortTermRetentionPolicyListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/shortTermRetentionPolicies.json#/components/schemas/BackupShortTermRetentionPolicyListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of short term retention policies.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:264"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:266": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///893?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FTdeCertificates.json"
     ],
     "name": "TdeCertificateProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/TdeCertificates.json#/components/schemas/TdeCertificateProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a TDE certificate.",
    "required": [
     "privateBlob"
    ],
    "type": "object",
    "properties": {
     "privateBlob": {
      "description": "The base64 encoded certificate private blob.",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     },
     "certPassword": {
      "description": "The certificate password.",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     }
    }
   },
   "schemas:267": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///893?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FTdeCertificates.json"
     ],
     "name": "TdeCertificate",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/TdeCertificates.json#/components/schemas/TdeCertificate"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A TDE certificate that can be uploaded into a server.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:266",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:268": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///894?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceTdeCertificates.json"
     ],
     "name": "TdeCertificateProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceTdeCertificates.json#/components/schemas/TdeCertificateProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties of a TDE certificate.",
    "required": [
     "privateBlob"
    ],
    "type": "object",
    "properties": {
     "privateBlob": {
      "description": "The base64 encoded certificate private blob.",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     },
     "certPassword": {
      "description": "The certificate password.",
      "type": "string",
      "x-ms-mutability": [
       "create",
       "update"
      ]
     }
    }
   },
   "schemas:269": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///894?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceTdeCertificates.json"
     ],
     "name": "TdeCertificate",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceTdeCertificates.json#/components/schemas/TdeCertificate"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A TDE certificate that can be uploaded into a server.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "properties": {
      "$ref": "#/components/schemas/schemas:268",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:270": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///895?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceKeys.json"
     ],
     "name": "ManagedInstanceKeyListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceKeys.json#/components/schemas/ManagedInstanceKeyListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of managed instance keys.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:272"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:271": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///895?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceKeys.json"
     ],
     "name": "ManagedInstanceKeyProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceKeys.json#/components/schemas/ManagedInstanceKeyProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties for a key execution.",
    "required": [
     "serverKeyType"
    ],
    "type": "object",
    "properties": {
     "serverKeyType": {
      "description": "The key type like 'ServiceManaged', 'AzureKeyVault'.",
      "enum": [
       "ServiceManaged",
       "AzureKeyVault"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "ServerKeyType",
       "modelAsString": true,
       "oldModelAsString": true
      },
      "x-ms-mutability": [
       "create"
      ]
     },
     "uri": {
      "description": "The URI of the key. If the ServerKeyType is AzureKeyVault, then the URI is required.",
      "type": "string",
      "x-ms-mutability": [
       "create"
      ]
     },
     "thumbprint": {
      "description": "Thumbprint of the key.",
      "type": "string",
      "readOnly": true
     },
     "creationDate": {
      "format": "date-time",
      "description": "The key creation date.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:272": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///895?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceKeys.json"
     ],
     "name": "ManagedInstanceKey",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceKeys.json#/components/schemas/ManagedInstanceKey"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A managed instance key.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "kind": {
      "description": "Kind of encryption protector. This is metadata used for the Azure portal experience.",
      "type": "string",
      "readOnly": true
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:271",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:273": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///896?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceEncryptionProtectors.json"
     ],
     "name": "ManagedInstanceEncryptionProtectorListResult",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceEncryptionProtectors.json#/components/schemas/ManagedInstanceEncryptionProtectorListResult"
     ],
     "x-ms-secondary-file": false
    },
    "description": "A list of managed instance encryption protectors.",
    "type": "object",
    "properties": {
     "value": {
      "description": "Array of results.",
      "type": "array",
      "items": {
       "$ref": "#/components/schemas/schemas:275"
      },
      "readOnly": true
     },
     "nextLink": {
      "description": "Link to retrieve next page of results.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:274": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///896?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceEncryptionProtectors.json"
     ],
     "name": "ManagedInstanceEncryptionProtectorProperties",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceEncryptionProtectors.json#/components/schemas/ManagedInstanceEncryptionProtectorProperties"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Properties for an encryption protector execution.",
    "required": [
     "serverKeyType"
    ],
    "type": "object",
    "properties": {
     "serverKeyName": {
      "description": "The name of the managed instance key.",
      "type": "string"
     },
     "serverKeyType": {
      "description": "The encryption protector type like 'ServiceManaged', 'AzureKeyVault'.",
      "enum": [
       "ServiceManaged",
       "AzureKeyVault"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "ServerKeyType",
       "modelAsString": true,
       "oldModelAsString": true
      }
     },
     "uri": {
      "description": "The URI of the server key.",
      "type": "string",
      "readOnly": true
     },
     "thumbprint": {
      "description": "Thumbprint of the server key.",
      "type": "string",
      "readOnly": true
     }
    }
   },
   "schemas:275": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///896?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceEncryptionProtectors.json"
     ],
     "name": "ManagedInstanceEncryptionProtector",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceEncryptionProtectors.json#/components/schemas/ManagedInstanceEncryptionProtector"
     ],
     "x-ms-secondary-file": false
    },
    "description": "The managed instance encryption protector.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:277"
     }
    ],
    "properties": {
     "kind": {
      "description": "Kind of encryption protector. This is metadata used for the Azure portal experience.",
      "type": "string",
      "readOnly": true
     },
     "properties": {
      "$ref": "#/components/schemas/schemas:274",
      "description": "Resource properties.",
      "x-ms-client-flatten": true
     }
    }
   },
   "schemas:276": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///897?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2Fcommon%2Fv1%2Ftypes.json"
     ],
     "name": "Resource",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/common/v1/types.json#/components/schemas/Resource"
     ],
     "x-ms-secondary-file": true
    },
    "description": "ARM resource.",
    "type": "object",
    "properties": {
     "id": {
      "description": "Resource ID.",
      "type": "string",
      "readOnly": true
     },
     "name": {
      "description": "Resource name.",
      "type": "string",
      "readOnly": true
     },
     "type": {
      "description": "Resource type.",
      "type": "string",
      "readOnly": true
     }
    },
    "x-ms-azure-resource": true
   },
   "schemas:277": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///897?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2Fcommon%2Fv1%2Ftypes.json"
     ],
     "name": "ProxyResource",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/common/v1/types.json#/components/schemas/ProxyResource"
     ],
     "x-ms-secondary-file": true
    },
    "description": "ARM proxy resource.",
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:276"
     }
    ],
    "properties": {}
   },
   "schemas:278": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///897?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2Fcommon%2Fv1%2Ftypes.json"
     ],
     "name": "TrackedResource",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/common/v1/types.json#/components/schemas/TrackedResource"
     ],
     "x-ms-secondary-file": true
    },
    "description": "ARM tracked top level resource.",
    "required": [
     "location"
    ],
    "type": "object",
    "allOf": [
     {
      "$ref": "#/components/schemas/schemas:276"
     }
    ],
    "properties": {
     "location": {
      "description": "Resource location.",
      "type": "string",
      "x-ms-mutability": [
       "read",
       "create"
      ]
     },
     "tags": {
      "description": "Resource tags.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    }
   },
   "schemas:279": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///897?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2Fcommon%2Fv1%2Ftypes.json"
     ],
     "name": "Sku",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/common/v1/types.json#/components/schemas/Sku"
     ],
     "x-ms-secondary-file": true
    },
    "description": "The resource model definition representing SKU",
    "properties": {
     "name": {
      "type": "string",
      "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
     },
     "tier": {
      "type": "string",
      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
     },
     "size": {
      "type": "string",
      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
     },
     "family": {
      "type": "string",
      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
     },
     "capacity": {
      "type": "integer",
      "format": "int32",
      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
     }
    },
    "required": [
     "name"
    ]
   },
   "schemas:280": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///897?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2Fcommon%2Fv1%2Ftypes.json"
     ],
     "name": "ResourceIdentity",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/common/v1/types.json#/components/schemas/ResourceIdentity"
     ],
     "x-ms-secondary-file": true
    },
    "description": "Azure Active Directory identity configuration for a resource.",
    "type": "object",
    "properties": {
     "principalId": {
      "format": "uuid",
      "description": "The Azure Active Directory principal id.",
      "type": "string",
      "readOnly": true
     },
     "type": {
      "description": "The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.",
      "enum": [
       "SystemAssigned"
      ],
      "type": "string",
      "x-ms-enum": {
       "name": "IdentityType",
       "modelAsString": true
      }
     },
     "tenantId": {
      "format": "uuid",
      "description": "The Azure Active Directory tenant id.",
      "type": "string",
      "readOnly": true
     }
    }
   }
  },
  "parameters": {
   "parameters:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///844?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fbackups.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/backups.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///844?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fbackups.json"
     ],
     "name": "DatabaseExpandParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/backups.json#/components/parameters/DatabaseExpandParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "$expand",
    "in": "query",
    "description": "A comma separated list of child objects to expand in the response. Possible properties: serviceTierAdvisors, transparentDataEncryption.",
    "required": false,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///845?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FcheckNameAvailability.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/checkNameAvailability.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:3": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///845?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FcheckNameAvailability.json"
     ],
     "name": "DatabaseExpandParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/checkNameAvailability.json#/components/parameters/DatabaseExpandParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "$expand",
    "in": "query",
    "description": "A comma separated list of child objects to expand in the response. Possible properties: serviceTierAdvisors, transparentDataEncryption.",
    "required": false,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:4": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///845?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FcheckNameAvailability.json"
     ],
     "name": "TransparentDataEncryptionNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/checkNameAvailability.json#/components/parameters/TransparentDataEncryptionNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "transparentDataEncryptionName",
    "in": "path",
    "description": "The name of the transparent data encryption configuration.",
    "required": true,
    "x-ms-parameter-location": "method",
    "x-ms-enum": {
     "modelAsString": true,
     "name": "TransparentDataEncryptionName",
     "oldModelAsString": true
    },
    "schema": {
     "enum": [
      "current"
     ],
     "type": "string"
    }
   },
   "parameters:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///846?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FconnectionPolicies.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/connectionPolicies.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:6": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///846?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FconnectionPolicies.json"
     ],
     "name": "ConnectionPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/connectionPolicies.json#/components/parameters/ConnectionPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "connectionPolicyName",
    "in": "path",
    "description": "The name of the connection policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "x-ms-enum": {
     "modelAsString": true,
     "name": "ConnectionPolicyName",
     "oldModelAsString": true
    },
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:7": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///847?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FdatabaseSecurityAlertPolicies.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/databaseSecurityAlertPolicies.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:8": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///848?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FdataMasking.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/dataMasking.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:9": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///848?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FdataMasking.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/dataMasking.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:10": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///848?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FdataMasking.json"
     ],
     "name": "DataMaskingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/dataMasking.json#/components/parameters/DataMaskingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "dataMaskingPolicyName",
    "in": "path",
    "description": "The name of the database for which the data masking rule applies.",
    "required": true,
    "x-ms-parameter-location": "method",
    "x-ms-enum": {
     "modelAsString": false,
     "name": "DataMaskingPolicyName",
     "oldModelAsString": false
    },
    "schema": {
     "enum": [
      "Default"
     ],
     "type": "string"
    }
   },
   "parameters:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///849?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FfirewallRules.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/firewallRules.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:12": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///850?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FgeoBackupPolicies.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/geoBackupPolicies.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:13": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///850?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FgeoBackupPolicies.json"
     ],
     "name": "GeoBackupPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/geoBackupPolicies.json#/components/parameters/GeoBackupPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "geoBackupPolicyName",
    "in": "path",
    "description": "The name of the geo backup policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "x-ms-enum": {
     "modelAsString": true,
     "name": "GeoBackupPolicyName",
     "oldModelAsString": true
    },
    "schema": {
     "enum": [
      "Default"
     ],
     "type": "string"
    }
   },
   "parameters:14": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///851?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FimportExport.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/importExport.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:15": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///852?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fmetrics.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/metrics.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:16": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///853?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FrecommendedElasticPoolsDecoupled.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/recommendedElasticPoolsDecoupled.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:17": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///854?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FreplicationLinks.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/replicationLinks.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:18": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///855?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserverAzureADAdministrators.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serverAzureADAdministrators.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:19": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///855?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserverAzureADAdministrators.json"
     ],
     "name": "DatabaseExpandParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serverAzureADAdministrators.json#/components/parameters/DatabaseExpandParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "$expand",
    "in": "query",
    "description": "A comma separated list of child objects to expand in the response. Possible properties: serviceTierAdvisors, transparentDataEncryption.",
    "required": false,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:20": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///855?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserverAzureADAdministrators.json"
     ],
     "name": "AdministratorNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serverAzureADAdministrators.json#/components/parameters/AdministratorNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "administratorName",
    "in": "path",
    "description": "Name of the server administrator resource.",
    "required": true,
    "x-ms-parameter-location": "method",
    "x-ms-enum": {
     "name": "ServerAdministratorName"
    },
    "schema": {
     "enum": [
      "activeDirectory"
     ],
     "type": "string"
    }
   },
   "parameters:21": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///856?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserverCommunicationLinks.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serverCommunicationLinks.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:22": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///857?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserviceObjectives.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serviceObjectives.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:23": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:24": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "DatabaseExpandParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/parameters/DatabaseExpandParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "$expand",
    "in": "query",
    "description": "A comma separated list of child objects to expand in the response. Possible properties: serviceTierAdvisors, transparentDataEncryption.",
    "required": false,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:25": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "TransparentDataEncryptionNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/parameters/TransparentDataEncryptionNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "transparentDataEncryptionName",
    "in": "path",
    "description": "The name of the transparent data encryption configuration.",
    "required": true,
    "x-ms-parameter-location": "method",
    "x-ms-enum": {
     "modelAsString": true,
     "name": "TransparentDataEncryptionName",
     "oldModelAsString": true
    },
    "schema": {
     "enum": [
      "current"
     ],
     "type": "string"
    }
   },
   "parameters:26": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///859?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fusages.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/usages.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:27": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///860?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FdatabaseAutomaticTuning.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/databaseAutomaticTuning.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:28": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///860?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FdatabaseAutomaticTuning.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/databaseAutomaticTuning.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:29": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///860?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FdatabaseAutomaticTuning.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/databaseAutomaticTuning.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:30": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///860?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FdatabaseAutomaticTuning.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/databaseAutomaticTuning.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:31": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///860?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FdatabaseAutomaticTuning.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/databaseAutomaticTuning.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:32": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///860?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FdatabaseAutomaticTuning.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/databaseAutomaticTuning.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:33": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///860?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FdatabaseAutomaticTuning.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/databaseAutomaticTuning.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:34": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///860?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FdatabaseAutomaticTuning.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/databaseAutomaticTuning.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:35": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///860?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FdatabaseAutomaticTuning.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/databaseAutomaticTuning.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:36": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///861?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FencryptionProtectors.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/encryptionProtectors.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:37": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///861?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FencryptionProtectors.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/encryptionProtectors.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:38": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///861?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FencryptionProtectors.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/encryptionProtectors.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:39": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///861?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FencryptionProtectors.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/encryptionProtectors.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:40": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///861?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FencryptionProtectors.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/encryptionProtectors.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:41": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:42": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:43": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:44": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:45": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:46": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:47": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:48": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:49": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:50": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:51": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:52": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:53": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:54": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:55": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:56": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///864?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Foperations.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/operations.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:57": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///864?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Foperations.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/operations.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:58": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///864?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Foperations.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/operations.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:59": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///864?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Foperations.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/operations.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:60": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///864?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Foperations.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/operations.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:61": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///864?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Foperations.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/operations.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:62": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///864?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Foperations.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/operations.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:63": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///865?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FserverKeys.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/serverKeys.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:64": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///865?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FserverKeys.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/serverKeys.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:65": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///865?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FserverKeys.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/serverKeys.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:66": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///865?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FserverKeys.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/serverKeys.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:67": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///865?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FserverKeys.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/serverKeys.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:68": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///866?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fservers.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/servers.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:69": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///866?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fservers.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/servers.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:70": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///866?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fservers.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/servers.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:71": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///866?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fservers.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/servers.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:72": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///866?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fservers.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/servers.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:73": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///867?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncAgents.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncAgents.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:74": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///867?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncAgents.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncAgents.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:75": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///867?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncAgents.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncAgents.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:76": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///867?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncAgents.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncAgents.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:77": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///867?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncAgents.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncAgents.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:78": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:79": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:80": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:81": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:82": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:83": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///869?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncMembers.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncMembers.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:84": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///869?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncMembers.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncMembers.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:85": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///869?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncMembers.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncMembers.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:86": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///869?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncMembers.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncMembers.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:87": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///869?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncMembers.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncMembers.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:88": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///870?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fusages.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/usages.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:89": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///870?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fusages.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/usages.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:90": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///870?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fusages.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/usages.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:91": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///870?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fusages.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/usages.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:92": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///870?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fusages.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/usages.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:93": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///870?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fusages.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/usages.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:94": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///870?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fusages.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/usages.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:95": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///870?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fusages.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/usages.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:96": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///870?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fusages.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/usages.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:97": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///871?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FvirtualNetworkRules.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/virtualNetworkRules.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:98": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///871?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FvirtualNetworkRules.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/virtualNetworkRules.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:99": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///871?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FvirtualNetworkRules.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/virtualNetworkRules.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:100": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///871?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FvirtualNetworkRules.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/virtualNetworkRules.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:101": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///871?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FvirtualNetworkRules.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/virtualNetworkRules.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:102": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///871?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FvirtualNetworkRules.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/virtualNetworkRules.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:103": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///871?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FvirtualNetworkRules.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/virtualNetworkRules.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:104": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///871?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FvirtualNetworkRules.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/virtualNetworkRules.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:105": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///871?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FvirtualNetworkRules.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/virtualNetworkRules.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:106": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:107": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:108": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:109": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:110": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:111": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:112": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:113": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:114": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:115": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:116": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///873?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessmentBaselines.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessmentBaselines.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:117": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///873?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessmentBaselines.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessmentBaselines.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:118": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///873?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessmentBaselines.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessmentBaselines.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:119": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///873?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessmentBaselines.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessmentBaselines.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:120": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///873?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessmentBaselines.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessmentBaselines.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:121": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///873?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessmentBaselines.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessmentBaselines.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:122": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///873?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessmentBaselines.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessmentBaselines.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:123": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///873?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessmentBaselines.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessmentBaselines.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:124": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///873?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessmentBaselines.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessmentBaselines.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:125": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///873?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessmentBaselines.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessmentBaselines.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:126": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///874?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessments.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessments.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:127": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///874?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessments.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessments.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:128": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///874?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessments.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessments.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:129": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///874?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessments.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessments.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:130": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///874?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessments.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessments.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:131": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///874?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessments.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessments.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:132": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///874?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessments.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessments.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:133": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///874?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessments.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessments.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:134": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///874?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessments.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessments.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:135": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///874?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessments.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessments.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:136": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:137": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:138": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:139": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:140": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:141": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:142": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:143": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:144": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:145": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:146": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:147": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:148": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:149": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:150": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:151": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:152": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:153": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:154": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:155": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:156": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
     ],
     "name": "LongTermRetentionDatabaseStateParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/components/parameters/LongTermRetentionDatabaseStateParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseState",
    "in": "query",
    "description": "Whether to query against just live databases, just deleted databases, or all databases.",
    "required": false,
    "x-ms-parameter-location": "method",
    "x-ms-enum": {
     "name": "longTermRetentionDatabaseState",
     "modelAsString": true,
     "oldModelAsString": true
    },
    "schema": {
     "enum": [
      "All",
      "Live",
      "Deleted"
     ],
     "type": "string"
    }
   },
   "parameters:157": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:158": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:159": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:160": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:161": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:162": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:163": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:164": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:165": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:166": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:167": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///878?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverAutomaticTuning.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverAutomaticTuning.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:168": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///878?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverAutomaticTuning.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverAutomaticTuning.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:169": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///878?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverAutomaticTuning.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverAutomaticTuning.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:170": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///878?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverAutomaticTuning.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverAutomaticTuning.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:171": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///878?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverAutomaticTuning.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverAutomaticTuning.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:172": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///878?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverAutomaticTuning.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverAutomaticTuning.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:173": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///878?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverAutomaticTuning.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverAutomaticTuning.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:174": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///878?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverAutomaticTuning.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverAutomaticTuning.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:175": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///878?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverAutomaticTuning.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverAutomaticTuning.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:176": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///879?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverDnsAliases.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverDnsAliases.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:177": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///879?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverDnsAliases.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverDnsAliases.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:178": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///879?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverDnsAliases.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverDnsAliases.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:179": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///879?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverDnsAliases.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverDnsAliases.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:180": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///879?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverDnsAliases.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverDnsAliases.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:181": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///880?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverSecurityAlertPolicies.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverSecurityAlertPolicies.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:182": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///880?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverSecurityAlertPolicies.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverSecurityAlertPolicies.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:183": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///880?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverSecurityAlertPolicies.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverSecurityAlertPolicies.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:184": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///880?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverSecurityAlertPolicies.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverSecurityAlertPolicies.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:185": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///880?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverSecurityAlertPolicies.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverSecurityAlertPolicies.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:186": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///880?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverSecurityAlertPolicies.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverSecurityAlertPolicies.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:187": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///880?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverSecurityAlertPolicies.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverSecurityAlertPolicies.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:188": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///880?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverSecurityAlertPolicies.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverSecurityAlertPolicies.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:189": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///880?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverSecurityAlertPolicies.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverSecurityAlertPolicies.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:190": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///880?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverSecurityAlertPolicies.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverSecurityAlertPolicies.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:191": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///881?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FrestorePoints.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/restorePoints.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:192": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///881?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FrestorePoints.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/restorePoints.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:193": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///881?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FrestorePoints.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/restorePoints.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:194": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///881?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FrestorePoints.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/restorePoints.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:195": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///881?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FrestorePoints.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/restorePoints.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:196": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///881?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FrestorePoints.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/restorePoints.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:197": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///881?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FrestorePoints.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/restorePoints.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:198": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///881?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FrestorePoints.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/restorePoints.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:199": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///881?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FrestorePoints.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/restorePoints.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:200": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///881?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FrestorePoints.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/restorePoints.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:201": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///882?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelOperations.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelOperations.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:202": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///882?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelOperations.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelOperations.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:203": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///882?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelOperations.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelOperations.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:204": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///882?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelOperations.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelOperations.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:205": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///882?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelOperations.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelOperations.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:206": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///882?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelOperations.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelOperations.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:207": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///882?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelOperations.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelOperations.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:208": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///882?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelOperations.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelOperations.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:209": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///882?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelOperations.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelOperations.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:210": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///882?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelOperations.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelOperations.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:211": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///883?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelPoolOperations.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelPoolOperations.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:212": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///883?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelPoolOperations.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelPoolOperations.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:213": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///883?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelPoolOperations.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelPoolOperations.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:214": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///883?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelPoolOperations.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelPoolOperations.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:215": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///883?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelPoolOperations.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelPoolOperations.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:216": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///883?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelPoolOperations.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelPoolOperations.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:217": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///883?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelPoolOperations.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelPoolOperations.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:218": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///883?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelPoolOperations.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelPoolOperations.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:219": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///883?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelPoolOperations.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelPoolOperations.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:220": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///883?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelPoolOperations.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelPoolOperations.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:221": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:222": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:223": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:224": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:225": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:226": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:227": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:228": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:229": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:230": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:231": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:232": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:233": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:234": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:235": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:236": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:237": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:238": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:239": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:240": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:241": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:242": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:243": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:244": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:245": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:246": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:247": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:248": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:249": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:250": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:251": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:252": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:253": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:254": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:255": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:256": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:257": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:258": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:259": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:260": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:261": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///888?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssesmentRuleBaselines.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssesmentRuleBaselines.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:262": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///888?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssesmentRuleBaselines.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssesmentRuleBaselines.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:263": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///888?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssesmentRuleBaselines.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssesmentRuleBaselines.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:264": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///888?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssesmentRuleBaselines.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssesmentRuleBaselines.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:265": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///888?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssesmentRuleBaselines.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssesmentRuleBaselines.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:266": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///888?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssesmentRuleBaselines.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssesmentRuleBaselines.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:267": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///888?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssesmentRuleBaselines.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssesmentRuleBaselines.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:268": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///888?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssesmentRuleBaselines.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssesmentRuleBaselines.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:269": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///888?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssesmentRuleBaselines.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssesmentRuleBaselines.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:270": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///888?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssesmentRuleBaselines.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssesmentRuleBaselines.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:271": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:272": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:273": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:274": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:275": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:276": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:277": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:278": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:279": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:280": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:281": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///890?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessments.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessments.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:282": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///890?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessments.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessments.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:283": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///890?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessments.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessments.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:284": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///890?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessments.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessments.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:285": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///890?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessments.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessments.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:286": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///890?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessments.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessments.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:287": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///890?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessments.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessments.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:288": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///890?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessments.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessments.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:289": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///890?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessments.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessments.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:290": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///890?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessments.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessments.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:291": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:292": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:293": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:294": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:295": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:296": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:297": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:298": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:299": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:300": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:301": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///892?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FshortTermRetentionPolicies.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/shortTermRetentionPolicies.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:302": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///892?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FshortTermRetentionPolicies.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/shortTermRetentionPolicies.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:303": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///892?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FshortTermRetentionPolicies.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/shortTermRetentionPolicies.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:304": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///892?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FshortTermRetentionPolicies.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/shortTermRetentionPolicies.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:305": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///892?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FshortTermRetentionPolicies.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/shortTermRetentionPolicies.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:306": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///892?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FshortTermRetentionPolicies.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/shortTermRetentionPolicies.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:307": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///892?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FshortTermRetentionPolicies.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/shortTermRetentionPolicies.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:308": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///892?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FshortTermRetentionPolicies.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/shortTermRetentionPolicies.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:309": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///892?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FshortTermRetentionPolicies.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/shortTermRetentionPolicies.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:310": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///892?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FshortTermRetentionPolicies.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/shortTermRetentionPolicies.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:311": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///893?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FTdeCertificates.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/TdeCertificates.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:312": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///893?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FTdeCertificates.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/TdeCertificates.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:313": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///893?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FTdeCertificates.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/TdeCertificates.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:314": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///893?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FTdeCertificates.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/TdeCertificates.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:315": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///893?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FTdeCertificates.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/TdeCertificates.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:316": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///893?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FTdeCertificates.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/TdeCertificates.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:317": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///893?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FTdeCertificates.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/TdeCertificates.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:318": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///893?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FTdeCertificates.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/TdeCertificates.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:319": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///893?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FTdeCertificates.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/TdeCertificates.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:320": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///893?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FTdeCertificates.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/TdeCertificates.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:321": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///894?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceTdeCertificates.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceTdeCertificates.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:322": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///894?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceTdeCertificates.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceTdeCertificates.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:323": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///894?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceTdeCertificates.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceTdeCertificates.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:324": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///894?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceTdeCertificates.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceTdeCertificates.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:325": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///894?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceTdeCertificates.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceTdeCertificates.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:326": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///894?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceTdeCertificates.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceTdeCertificates.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:327": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///894?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceTdeCertificates.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceTdeCertificates.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:328": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///894?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceTdeCertificates.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceTdeCertificates.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:329": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///894?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceTdeCertificates.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceTdeCertificates.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:330": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///894?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceTdeCertificates.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceTdeCertificates.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:331": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///895?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceKeys.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceKeys.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:332": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///895?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceKeys.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceKeys.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:333": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///895?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceKeys.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceKeys.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:334": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///895?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceKeys.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceKeys.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:335": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///895?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceKeys.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceKeys.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:336": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///895?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceKeys.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceKeys.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:337": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///895?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceKeys.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceKeys.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:338": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///895?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceKeys.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceKeys.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:339": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///895?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceKeys.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceKeys.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:340": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///895?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceKeys.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceKeys.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:341": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///896?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceEncryptionProtectors.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceEncryptionProtectors.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:342": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///896?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceEncryptionProtectors.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceEncryptionProtectors.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:343": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///896?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceEncryptionProtectors.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceEncryptionProtectors.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:344": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///896?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceEncryptionProtectors.json"
     ],
     "name": "ServerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceEncryptionProtectors.json#/components/parameters/ServerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "serverName",
    "in": "path",
    "description": "The name of the server.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:345": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///896?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceEncryptionProtectors.json"
     ],
     "name": "ManagedInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceEncryptionProtectors.json#/components/parameters/ManagedInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "managedInstanceName",
    "in": "path",
    "description": "The name of the managed instance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:346": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///896?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceEncryptionProtectors.json"
     ],
     "name": "DatabaseNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceEncryptionProtectors.json#/components/parameters/DatabaseNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "databaseName",
    "in": "path",
    "description": "The name of the database.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:347": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///896?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceEncryptionProtectors.json"
     ],
     "name": "BlobAuditingPolicyNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceEncryptionProtectors.json#/components/parameters/BlobAuditingPolicyNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "blobAuditingPolicyName",
    "in": "path",
    "description": "The name of the blob auditing policy.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "enum": [
      "default"
     ],
     "type": "string"
    }
   },
   "parameters:348": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///896?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceEncryptionProtectors.json"
     ],
     "name": "SqlVirtualMachineInstanceNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceEncryptionProtectors.json#/components/parameters/SqlVirtualMachineInstanceNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineInstanceName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineInstance.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:349": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///896?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceEncryptionProtectors.json"
     ],
     "name": "SqlVirtualMachineContainerNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceEncryptionProtectors.json#/components/parameters/SqlVirtualMachineContainerNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "sqlVirtualMachineContainerName",
    "in": "path",
    "description": "The name of the SqlVirtualMachineContainer.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:350": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///896?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceEncryptionProtectors.json"
     ],
     "name": "VirtualClusterNameParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceEncryptionProtectors.json#/components/parameters/VirtualClusterNameParameter"
     ],
     "x-ms-secondary-file": false
    },
    "name": "virtualClusterName",
    "in": "path",
    "description": "The name of the virtual cluster.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   },
   "parameters:351": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///897?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2Fcommon%2Fv1%2Ftypes.json"
     ],
     "name": "SubscriptionIdParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/common/v1/types.json#/components/parameters/SubscriptionIdParameter"
     ],
     "x-ms-secondary-file": true
    },
    "name": "subscriptionId",
    "in": "path",
    "description": "The subscription ID that identifies an Azure subscription.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:352": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///897?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2Fcommon%2Fv1%2Ftypes.json"
     ],
     "name": "ApiVersionParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/common/v1/types.json#/components/parameters/ApiVersionParameter"
     ],
     "x-ms-secondary-file": true
    },
    "name": "api-version",
    "in": "query",
    "description": "The API version to use for the request.",
    "required": true,
    "x-ms-parameter-location": "client",
    "schema": {
     "type": "string"
    }
   },
   "parameters:353": {
    "x-ms-metadata": {
     "apiVersions": [
      "1.0"
     ],
     "filename": [
      "mem:///897?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2Fcommon%2Fv1%2Ftypes.json"
     ],
     "name": "ResourceGroupParameter",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/common/v1/types.json#/components/parameters/ResourceGroupParameter"
     ],
     "x-ms-secondary-file": true
    },
    "name": "resourceGroupName",
    "in": "path",
    "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
    "required": true,
    "x-ms-parameter-location": "method",
    "schema": {
     "type": "string"
    }
   }
  },
  "securitySchemes": {
   "securitySchemes:0": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///844?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fbackups.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/backups.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:1": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///845?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FcheckNameAvailability.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/checkNameAvailability.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:2": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///846?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FconnectionPolicies.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/connectionPolicies.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:3": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///847?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FdatabaseSecurityAlertPolicies.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/databaseSecurityAlertPolicies.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:4": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///848?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FdataMasking.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/dataMasking.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:5": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///849?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FfirewallRules.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/firewallRules.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:6": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///850?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FgeoBackupPolicies.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/geoBackupPolicies.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:7": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///851?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FimportExport.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/importExport.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:8": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///852?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fmetrics.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/metrics.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:9": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///853?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FrecommendedElasticPoolsDecoupled.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/recommendedElasticPoolsDecoupled.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:10": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///854?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FreplicationLinks.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/replicationLinks.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:11": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///855?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserverAzureADAdministrators.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serverAzureADAdministrators.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:12": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///856?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserverCommunicationLinks.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serverCommunicationLinks.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:13": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///857?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2FserviceObjectives.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/serviceObjectives.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:14": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///858?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fsql.core.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:15": {
    "x-ms-metadata": {
     "apiVersions": [
      "2014-04-01"
     ],
     "filename": [
      "mem:///859?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fstable%2F2014-04-01%2Fusages.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/usages.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:16": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///860?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FdatabaseAutomaticTuning.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/databaseAutomaticTuning.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:17": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///861?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FencryptionProtectors.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/encryptionProtectors.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:18": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///862?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FfailoverGroups.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/failoverGroups.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:19": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///863?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FmanagedInstances.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/managedInstances.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:20": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///864?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Foperations.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/operations.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:21": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///865?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FserverKeys.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/serverKeys.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:22": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///866?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fservers.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/servers.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:23": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///867?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncAgents.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncAgents.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:24": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///868?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncGroups.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncGroups.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:25": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///869?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FsyncMembers.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/syncMembers.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:26": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///870?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2Fusages.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/usages.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:27": {
    "x-ms-metadata": {
     "apiVersions": [
      "2015-05-01-preview"
     ],
     "filename": [
      "mem:///871?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2015-05-01-preview%2FvirtualNetworkRules.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/virtualNetworkRules.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:28": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///872?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FblobAuditing.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/blobAuditing.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:29": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///873?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessmentBaselines.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessmentBaselines.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:30": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///874?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FdatabaseVulnerabilityAssessments.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessments.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:31": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///875?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2Fjobs.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/jobs.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:32": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///876?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FlongTermRetention.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/longTermRetention.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:33": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///877?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FmanagedDatabases.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedDatabases.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:34": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///878?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverAutomaticTuning.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverAutomaticTuning.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:35": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///879?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverDnsAliases.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverDnsAliases.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:36": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///880?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FserverSecurityAlertPolicies.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/serverSecurityAlertPolicies.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:37": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-03-01-preview"
     ],
     "filename": [
      "mem:///881?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-03-01-preview%2FrestorePoints.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/restorePoints.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:38": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///882?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelOperations.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelOperations.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:39": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///883?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FcancelPoolOperations.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelPoolOperations.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:40": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///884?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fcapabilities.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/capabilities.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:41": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///885?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2Fdatabases.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databases.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:42": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///886?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FelasticPools.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/elasticPools.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:43": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///887?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FdatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/databaseVulnerabilityAssessmentScans.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:44": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///888?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssesmentRuleBaselines.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssesmentRuleBaselines.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:45": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///889?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessmentScans.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessmentScans.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:46": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///890?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FmanagedDatabaseVulnerabilityAssessments.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/managedDatabaseVulnerabilityAssessments.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:47": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///891?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FinstanceFailoverGroups.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/instanceFailoverGroups.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:48": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///892?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FshortTermRetentionPolicies.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/shortTermRetentionPolicies.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:49": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///893?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FTdeCertificates.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/TdeCertificates.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:50": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///894?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceTdeCertificates.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceTdeCertificates.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:51": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///895?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceKeys.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceKeys.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   },
   "securitySchemes:52": {
    "x-ms-metadata": {
     "apiVersions": [
      "2017-10-01-preview"
     ],
     "filename": [
      "mem:///896?file%3A%2F%2F%2Fc%3A%2Ftmp%2Fazure-rest-api-specs%2Fspecification%2Fsql%2Fresource-manager%2FMicrosoft.Sql%2Fpreview%2F2017-10-01-preview%2FManagedInstanceEncryptionProtectors.json"
     ],
     "name": "azure_auth",
     "originalLocations": [
      "file:///c:/tmp/azure-rest-api-specs/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceEncryptionProtectors.json#/components/securitySchemes/azure_auth"
     ],
     "x-ms-secondary-file": false
    },
    "description": "Azure Active Directory OAuth2 Flow",
    "type": "oauth2",
    "flows": {
     "implicit": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
       "user_impersonation": "impersonate your user account"
      }
     }
    }
   }
  }
 }
}
