{
  "name": "@microsoft.azure/autorest-core",
  "version": "3.0.0",
  "description": "AutoRest core module",
  "engines": {
    "node": ">=8.11.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Azure/autorest.git"
  },
  "keywords": [
    "autorest"
  ],
  "author": "Microsoft Corporation",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Azure/autorest/issues"
  },
  "homepage": "https://github.com/Azure/autorest/readme.md",
  "main": "./dist/exports.js",
  "bin": {
    "autorest-core": "./entrypoints/app.js",
    "autorest-language-service": "./entrypoints/language-service.js"
  },
  "scripts": {
    "test": "./node_modules/.bin/mocha ./dist/test --timeout 100000",
    "watch": "tsc -p . --watch",
    "set-version": "node -e \"let pkg = require('./package.json'); require('child_process').exec('git rev-list --parents HEAD --count --full-history .', (o,stdout) => { const v = pkg.version.split('.'); v[v.length-1] = parseInt(stdout.trim()); const orig=JSON.stringify(pkg,null,2);  pkg.version = v.join('.'); const delta = JSON.stringify(pkg,null,2 ); if( orig !== delta) require('fs').writeFileSync('./package.json',delta)})\"",
    "build": "npm run before-build && tsc -p .",
    "static-link": "static-link --no-node-modules",
    "prepare": "node ./.scripts/post-install --force --no-node-modules",
    "prepack": "static-link && npm run build",
    "run-pwsh": "pwsh -command \"& {param($script) pwsh -command ((convertfrom-json (get-content -raw ./package.json)).'pwsh-scripts'.$script) }\"",
    "clean": "npm run run-pwsh clean",
    "before-build": "npm run run-pwsh before-build"
  },
  "pwsh-scripts": {
    "clean": "remove-item -recurse -ea 0 ./dist ; remove-item -ea 0 ./*.log ",
    "before-build": "new-item -itemType directory -ea 0 -path dist/lib/pipeline ; copy-item ../../schema/*.json dist/lib/pipeline"
  },
  "typings": "./dist/main.d.ts",
  "devDependencies": {
    "@types/commonmark": "^0.27.0",
    "@types/jsonpath": "^0.2.0",
    "@types/source-map": "0.5.0",
    "@types/z-schema": "^3.16.31",
    "@types/mocha": "5.2.5",
    "mocha-typescript": "1.1.17",
    "@types/node": "^10.11.4",
    "mocha": "5.2.0",
    "typescript": "^3.1.3",
    "tslint": "^5.11.0",
    "tslint-language-service": "^0.9.9",
    "tslint-microsoft-contrib": "^5.2.1",
    "static-link": "^0.2.4",
    "vscode-languageserver": "3.5.1",
    "@microsoft.azure/async-io": "^2.1.22",
    "@microsoft.azure/extension": "^2.1.19",
    "@microsoft.azure/uri": "^2.1.15",
    "@microsoft.azure/datastore": "^2.1.31",
    "@microsoft.azure/oai2-to-oai3": "^2.1.55",
    "@microsoft.azure/codegen": "^1.0.36",
    "@microsoft.azure/openapi": "^2.1.16",
    "@microsoft.azure/linq": "^2.1.14",
    "commonmark": "^0.27.0",
    "jsonpath": "1.0.0",
    "linq-es2015": "^2.4.25",
    "safe-eval": "^0.3.0",
    "source-map": "0.5.6",
    "untildify": "^3.0.2",
    "vscode-jsonrpc": "^3.5.0",
    "source-map-support": "0.5.9",
    "yaml-ast-parser": "0.0.40",
    "z-schema": "^3.19.0"
  },
  "static-link": {
    "entrypoints": [],
    "dependencies": {
      "vscode-languageserver": "3.5.1",
      "@microsoft.azure/async-io": "^2.1.22",
      "@microsoft.azure/extension": "^2.1.19",
      "@microsoft.azure/datastore": "^2.1.31",
      "@microsoft.azure/oai2-to-oai3": "^2.1.55",
      "@microsoft.azure/uri": "^2.1.15",
      "@microsoft.azure/linq": "^2.1.14",
      "@microsoft.azure/codegen": "^1.0.36",
      "@microsoft.azure/openapi": "^2.1.16",
      "commonmark": "^0.27.0",
      "jsonpath": "1.0.0",
      "linq-es2015": "^2.4.25",
      "safe-eval": "^0.3.0",
      "source-map": "0.5.6",
      "untildify": "^3.0.2",
      "vscode-jsonrpc": "^3.5.0",
      "yaml-ast-parser": "0.0.40",
      "z-schema": "^3.19.0"
    },
    "patch": "const fs = require(`fs`); let txt = fs.readFileSync('./node_modules/npm/lib/install/action/extract.js','utf8').replace(`const ENABLE_WORKERS = process.platform === 'darwin'`, `const ENABLE_WORKERS = false;`); fs.writeFileSync('./node_modules/npm/lib/install/action/extract.js', txt ); txt = fs.readFileSync(`./node_modules/npm/lib/npm.js`,`utf8`).replace(`var j = parseJSON(fs.readFileSync(`, `var j = require(path.join(__dirname, '../package.json'));` ).replace(`path.join(__dirname, '../package.json')) + '')`,``); fs.writeFileSync(`./node_modules/npm/lib/npm.js`, txt );  txt = fs.readFileSync('./node_modules/npm/lib/pack.js','utf8').replace(`require.main.filename`, `require.resolve('../bin/npm-cli.js')`); fs.writeFileSync('./node_modules/npm/lib/pack.js', txt );"
  },
  "dependencies": {}
}